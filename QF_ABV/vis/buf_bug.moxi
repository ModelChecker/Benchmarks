(set-logic QF_ABV)
(define-system main 
   :input ((|alloc_raw| Bool) (|clock| Bool) (|free_addr_raw| (_ BitVec 4)) (|free_raw| Bool)) 
   :output ((|$auto$rename.cc:157:execute$130| Bool) (|$auto$rename.cc:157:execute$131| (_ BitVec 5)) (|a5| (Array (_ BitVec 4) (_ BitVec 1)))) 
   :local () 
   :init (and (= |a5| ((as const (Array (_ BitVec 4) (_ BitVec 1))) #b0)) (let ((__expr1 (not |$auto$rename.cc:157:execute$130|))) (let ((__expr2 (= |$auto$rename.cc:157:execute$131| #b00000))) (let ((__expr3 (and __expr2 __expr1))) __expr3)))) 
   :trans (let ((__expr4 (store |a5| |free_addr_raw| #b0))) (let ((__expr5 (and |clock| |free_raw|))) (let ((__expr6 (ite __expr5 __expr4 (ite true |a5| |a5|)))) (let ((__expr7 (select |a5| #b1111))) (let ((__expr8 (= __expr7 #b1))) (let ((__expr9 (ite __expr8 #b00000000000000000000000000000000 (ite true #b00000000000000000000000000001111 #b00000000000000000000000000001111)))) (let ((__expr10 (select |a5| #b1110))) (let ((__expr11 (= __expr10 #b1))) (let ((__expr12 (ite __expr11 __expr9 (ite true #b00000000000000000000000000001110 #b00000000000000000000000000001110)))) (let ((__expr13 (select |a5| #b1101))) (let ((__expr14 (= __expr13 #b1))) (let ((__expr15 (ite __expr14 __expr12 (ite true #b00000000000000000000000000001101 #b00000000000000000000000000001101)))) (let ((__expr16 (select |a5| #b1100))) (let ((__expr17 (= __expr16 #b1))) (let ((__expr18 (ite __expr17 __expr15 (ite true #b00000000000000000000000000001100 #b00000000000000000000000000001100)))) (let ((__expr19 (select |a5| #b1011))) (let ((__expr20 (= __expr19 #b1))) (let ((__expr21 (ite __expr20 __expr18 (ite true #b00000000000000000000000000001011 #b00000000000000000000000000001011)))) (let ((__expr22 (select |a5| #b1010))) (let ((__expr23 (= __expr22 #b1))) (let ((__expr24 (ite __expr23 __expr21 (ite true #b00000000000000000000000000001010 #b00000000000000000000000000001010)))) (let ((__expr25 (select |a5| #b1001))) (let ((__expr26 (= __expr25 #b1))) (let ((__expr27 (ite __expr26 __expr24 (ite true #b00000000000000000000000000001001 #b00000000000000000000000000001001)))) (let ((__expr28 (select |a5| #b1000))) (let ((__expr29 (= __expr28 #b1))) (let ((__expr30 (ite __expr29 __expr27 (ite true #b00000000000000000000000000001000 #b00000000000000000000000000001000)))) (let ((__expr31 (select |a5| #b0111))) (let ((__expr32 (= __expr31 #b1))) (let ((__expr33 (ite __expr32 __expr30 (ite true #b00000000000000000000000000000111 #b00000000000000000000000000000111)))) (let ((__expr34 (select |a5| #b0110))) (let ((__expr35 (= __expr34 #b1))) (let ((__expr36 (ite __expr35 __expr33 (ite true #b00000000000000000000000000000110 #b00000000000000000000000000000110)))) (let ((__expr37 (select |a5| #b0101))) (let ((__expr38 (= __expr37 #b1))) (let ((__expr39 (ite __expr38 __expr36 (ite true #b00000000000000000000000000000101 #b00000000000000000000000000000101)))) (let ((__expr40 (select |a5| #b0100))) (let ((__expr41 (= __expr40 #b1))) (let ((__expr42 (ite __expr41 __expr39 (ite true #b00000000000000000000000000000100 #b00000000000000000000000000000100)))) (let ((__expr43 (select |a5| #b0011))) (let ((__expr44 (= __expr43 #b1))) (let ((__expr45 (ite __expr44 __expr42 (ite true #b00000000000000000000000000000011 #b00000000000000000000000000000011)))) (let ((__expr46 (select |a5| #b0010))) (let ((__expr47 (= __expr46 #b1))) (let ((__expr48 (ite __expr47 __expr45 (ite true #b00000000000000000000000000000010 #b00000000000000000000000000000010)))) (let ((__expr49 (select |a5| #b0001))) (let ((__expr50 (= __expr49 #b1))) (let ((__expr51 (ite __expr50 __expr48 (ite true #b00000000000000000000000000000001 #b00000000000000000000000000000001)))) (let ((__expr52 (select |a5| #b0000))) (let ((__expr53 (= __expr52 #b1))) (let ((__expr54 (ite __expr53 __expr51 (ite true #b00000000000000000000000000000000 #b00000000000000000000000000000000)))) (let ((__expr55 ((_ extract 3 0) __expr54))) (let ((__expr56 (store |a5| __expr55 #b1))) (let ((__expr57 (= |$auto$rename.cc:157:execute$131| #b10000))) (let ((__expr58 (and |$auto$rename.cc:157:execute$130| __expr57))) (let ((__expr59 (not __expr58))) (let ((__expr60 (and |alloc_raw| __expr59))) (let ((__expr61 (and |clock| __expr60))) (let ((__expr62 (ite __expr61 __expr56 (ite true __expr6 __expr6)))) (let ((__expr63 (= __expr62 |a5|'))) (let ((__expr64 (or |clock| |$auto$rename.cc:157:execute$130|))) (let ((__expr65 (not |clock|))) (let ((__expr66 (or |alloc_raw| __expr65))) (let ((__expr67 (and __expr66 __expr64))) (let ((__expr68 (= __expr67 |$auto$rename.cc:157:execute$130|'))) (let ((__expr69 (select |a5| |free_addr_raw|))) (let ((__expr70 (ite |free_raw| #b1 (ite true #b0 #b0)))) (let ((__expr71 (bvand __expr70 __expr69))) (let ((__expr72 (concat #b0000 __expr71))) (let ((__expr73 (bvneg __expr72))) (let ((__expr74 (ite __expr58 #b1 (ite true #b0 #b0)))) (let ((__expr75 (concat __expr74 #b0000))) (let ((__expr76 (bvnot __expr75))) (let ((__expr77 (ite |alloc_raw| #b1 (ite true #b0 #b0)))) (let ((__expr78 (concat #b0000 __expr77))) (let ((__expr79 (bvand __expr78 __expr76))) (let ((__expr80 (bvadd |$auto$rename.cc:157:execute$131| __expr79))) (let ((__expr81 (bvadd __expr80 __expr73))) (let ((__expr82 (ite |clock| __expr81 (ite true |$auto$rename.cc:157:execute$131| |$auto$rename.cc:157:execute$131|)))) (let ((__expr83 (= __expr82 |$auto$rename.cc:157:execute$131|'))) (let ((__expr84 (and __expr83 __expr68))) (let ((__expr85 (and __expr84 __expr63))) __expr85)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((|alloc_raw| Bool) (|clock| Bool) (|free_addr_raw| (_ BitVec 4)) (|free_raw| Bool)) 
   :output ((|$auto$rename.cc:157:execute$130| Bool) (|$auto$rename.cc:157:execute$131| (_ BitVec 5)) (|a5| (Array (_ BitVec 4) (_ BitVec 1)))) 
   :local () 
   :reachable (rch_1 (not (let ((__expr86 (bvult #b10000 |$auto$rename.cc:157:execute$131|))) (let ((__expr87 (not __expr86))) __expr87))))
   :query (qry_rch_1 (rch_1)))