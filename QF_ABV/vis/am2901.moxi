(set-logic QF_ABV)
(define-system main 
   :input ((|Aadd| (_ BitVec 4)) (|Badd| (_ BitVec 4)) (|C0| Bool) (|CLK| Bool) (|D| (_ BitVec 4)) (|I| (_ BitVec 9)) (|Q0in| Bool) (|Q3in| Bool) (|RAM0in| Bool) (|RAM3in| Bool)) 
   :output ((|$auto$rename.cc:157:execute$293[2:1]| (_ BitVec 2)) (|$auto$splice.cc:234:run$419| Bool) (|$auto$splice.cc:234:run$420| Bool) (|a12| (Array (_ BitVec 4) (_ BitVec 4)))) 
   :local () 
   :init (and (= |a12| ((as const (Array (_ BitVec 4) (_ BitVec 4))) #b0000)) (let ((__expr1 (not |$auto$splice.cc:234:run$420|))) (let ((__expr2 (= |$auto$rename.cc:157:execute$293[2:1]| #b00))) (let ((__expr3 (not |$auto$splice.cc:234:run$419|))) (let ((__expr4 (and __expr3 __expr2))) (let ((__expr5 (and __expr4 __expr1))) __expr5)))))) 
   :trans (let ((__expr6 (ite |$auto$splice.cc:234:run$419| #b1 (ite true #b0 #b0)))) (let ((__expr7 (concat |$auto$rename.cc:157:execute$293[2:1]| __expr6))) (let ((__expr8 (ite |$auto$splice.cc:234:run$420| #b1 (ite true #b0 #b0)))) (let ((__expr9 (concat __expr8 __expr7))) (let ((__expr10 ((_ extract 2 0) |I|))) (let ((__expr11 (= __expr10 #b111))) (let ((__expr12 (ite __expr11 #b0000 (ite true __expr9 __expr9)))) (let ((__expr13 (select |a12| |Badd|))) (let ((__expr14 ((_ extract 0 0) |I|))) (let ((__expr15 (= __expr14 #b1))) (let ((__expr16 ((_ extract 2 2) |I|))) (let ((__expr17 (= __expr16 #b1))) (let ((__expr18 (not __expr17))) (let ((__expr19 (and __expr18 __expr15))) (let ((__expr20 (ite __expr19 __expr13 (ite true __expr12 __expr12)))) (let ((__expr21 (select |a12| |Aadd|))) (let ((__expr22 ((_ extract 2 1) |I|))) (let ((__expr23 (= __expr22 #b10))) (let ((__expr24 (ite __expr23 __expr21 (ite true __expr20 __expr20)))) (let ((__expr25 (concat __expr24 #b0))) (let ((__expr26 (bvnot __expr24))) (let ((__expr27 (concat __expr26 #b0))) (let ((__expr28 ((_ extract 5 3) |I|))) (let ((__expr29 (= __expr28 #b010))) (let ((__expr30 (ite __expr29 __expr27 (ite true __expr25 __expr25)))) (let ((__expr31 ((_ extract 1 0) |I|))) (let ((__expr32 (= __expr31 #b00))) (let ((__expr33 (not __expr32))) (let ((__expr34 (and __expr17 __expr33))) (let ((__expr35 (ite __expr34 |D| (ite true #b0000 #b0000)))) (let ((__expr36 (= __expr22 #b00))) (let ((__expr37 (ite __expr36 __expr21 (ite true __expr35 __expr35)))) (let ((__expr38 (concat __expr37 #b0))) (let ((__expr39 (bvnot __expr37))) (let ((__expr40 (concat __expr39 #b0))) (let ((__expr41 (= __expr28 #b001))) (let ((__expr42 (ite __expr41 __expr40 (ite true __expr38 __expr38)))) (let ((__expr43 (bvnot __expr42))) (let ((__expr44 (bvxor __expr43 __expr30))) (let ((__expr45 (bvxor __expr42 __expr30))) (let ((__expr46 (= __expr28 #b110))) (let ((__expr47 (ite __expr46 __expr45 (ite true __expr44 __expr44)))) (let ((__expr48 (bvand __expr43 __expr30))) (let ((__expr49 (= __expr28 #b101))) (let ((__expr50 (ite __expr49 __expr48 (ite true __expr47 __expr47)))) (let ((__expr51 (bvand __expr42 __expr30))) (let ((__expr52 (= __expr28 #b100))) (let ((__expr53 (ite __expr52 __expr51 (ite true __expr50 __expr50)))) (let ((__expr54 (bvor __expr42 __expr30))) (let ((__expr55 (= __expr28 #b011))) (let ((__expr56 (ite __expr55 __expr54 (ite true __expr53 __expr53)))) (let ((__expr57 (ite |C0| #b1 (ite true #b0 #b0)))) (let ((__expr58 (concat __expr57 #b0000))) (let ((__expr59 (bvadd __expr42 __expr30))) (let ((__expr60 (bvadd __expr59 __expr58))) (let ((__expr61 ((_ extract 4 3) |I|))) (let ((__expr62 (= __expr61 #b11))) (let ((__expr63 (not __expr62))) (let ((__expr64 ((_ extract 5 5) |I|))) (let ((__expr65 (= __expr64 #b1))) (let ((__expr66 (not __expr65))) (let ((__expr67 (and __expr66 __expr63))) (let ((__expr68 (ite __expr67 __expr60 (ite true __expr56 __expr56)))) (let ((__expr69 ((_ extract 0 0) __expr68))) (let ((__expr70 ((_ extract 2 1) __expr68))) (let ((__expr71 (concat __expr70 __expr69))) (let ((__expr72 ((_ extract 3 3) __expr68))) (let ((__expr73 (concat __expr72 __expr71))) (let ((__expr74 (store |a12| |Badd| __expr73))) (let ((__expr75 ((_ extract 8 7) |I|))) (let ((__expr76 (= __expr75 #b01))) (let ((__expr77 (ite __expr76 #b1 (ite true #b0 #b0)))) (let ((__expr78 (= __expr77 #b1))) (let ((__expr79 (and |CLK| __expr78))) (let ((__expr80 (ite __expr79 __expr74 (ite true |a12| |a12|)))) (let ((__expr81 (ite |RAM3in| #b1 (ite true #b0 #b0)))) (let ((__expr82 (concat __expr70 __expr81))) (let ((__expr83 (concat __expr72 __expr82))) (let ((__expr84 (store |a12| |Badd| __expr83))) (let ((__expr85 (= __expr75 #b10))) (let ((__expr86 (or __expr76 __expr85))) (let ((__expr87 (not __expr76))) (let ((__expr88 (and __expr87 __expr86))) (let ((__expr89 (ite __expr88 #b1 (ite true #b0 #b0)))) (let ((__expr90 (= __expr89 #b1))) (let ((__expr91 (and |CLK| __expr90))) (let ((__expr92 (ite __expr91 __expr84 (ite true __expr80 __expr80)))) (let ((__expr93 (ite |RAM0in| #b1 (ite true #b0 #b0)))) (let ((__expr94 (concat __expr93 __expr71))) (let ((__expr95 (store |a12| |Badd| __expr94))) (let ((__expr96 (= __expr75 #b11))) (let ((__expr97 (or __expr85 __expr96))) (let ((__expr98 (not __expr85))) (let ((__expr99 (and __expr98 __expr97))) (let ((__expr100 (or __expr76 __expr99))) (let ((__expr101 (and __expr87 __expr100))) (let ((__expr102 (ite __expr101 #b1 (ite true #b0 #b0)))) (let ((__expr103 (= __expr102 #b1))) (let ((__expr104 (and |CLK| __expr103))) (let ((__expr105 (ite __expr104 __expr95 (ite true __expr92 __expr92)))) (let ((__expr106 (= __expr105 |a12|'))) (let ((__expr107 (or |CLK| |$auto$splice.cc:234:run$420|))) (let ((__expr108 (ite |Q0in| #b1 (ite true #b0 #b0)))) (let ((__expr109 (concat __expr108 __expr7))) (let ((__expr110 ((_ extract 8 6) |I|))) (let ((__expr111 (= __expr110 #b110))) (let ((__expr112 (ite __expr111 __expr109 (ite true __expr9 __expr9)))) (let ((__expr113 (ite |Q3in| #b1 (ite true #b0 #b0)))) (let ((__expr114 (concat |$auto$rename.cc:157:execute$293[2:1]| __expr113))) (let ((__expr115 (concat __expr8 __expr114))) (let ((__expr116 (= __expr110 #b100))) (let ((__expr117 (ite __expr116 __expr115 (ite true __expr112 __expr112)))) (let ((__expr118 (= __expr110 #b000))) (let ((__expr119 (ite __expr118 __expr73 (ite true __expr117 __expr117)))) (let ((__expr120 ((_ extract 3 3) __expr119))) (let ((__expr121 (= __expr120 #b1))) (let ((__expr122 (not |CLK|))) (let ((__expr123 (or __expr122 __expr121))) (let ((__expr124 (and __expr123 __expr107))) (let ((__expr125 (= __expr124 |$auto$splice.cc:234:run$420|'))) (let ((__expr126 ((_ extract 2 1) __expr119))) (let ((__expr127 (ite |CLK| __expr126 (ite true |$auto$rename.cc:157:execute$293[2:1]| |$auto$rename.cc:157:execute$293[2:1]|)))) (let ((__expr128 (= __expr127 |$auto$rename.cc:157:execute$293[2:1]|'))) (let ((__expr129 (or |CLK| |$auto$splice.cc:234:run$419|))) (let ((__expr130 ((_ extract 0 0) __expr119))) (let ((__expr131 (= __expr130 #b1))) (let ((__expr132 (or __expr131 __expr122))) (let ((__expr133 (and __expr132 __expr129))) (let ((__expr134 (= __expr133 |$auto$splice.cc:234:run$419|'))) (let ((__expr135 (and __expr134 __expr128))) (let ((__expr136 (and __expr135 __expr125))) (let ((__expr137 (and __expr136 __expr106))) __expr137)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((|Aadd| (_ BitVec 4)) (|Badd| (_ BitVec 4)) (|C0| Bool) (|CLK| Bool) (|D| (_ BitVec 4)) (|I| (_ BitVec 9)) (|Q0in| Bool) (|Q3in| Bool) (|RAM0in| Bool) (|RAM3in| Bool)) 
   :output ((|$auto$rename.cc:157:execute$293[2:1]| (_ BitVec 2)) (|$auto$splice.cc:234:run$419| Bool) (|$auto$splice.cc:234:run$420| Bool) (|a12| (Array (_ BitVec 4) (_ BitVec 4)))) 
   :local () 
   :reachable (rch_1 (not (let ((__expr138 (select |a12| #b1111))) (let ((__expr139 (concat #b0000000000000000000000000000 __expr138))) (let ((__expr140 (bvult __expr139 #b00000000000000000000000000001000))) (let ((__expr141 (not __expr140))) (let ((__expr142 (select |a12| #b1110))) (let ((__expr143 (concat #b0000000000000000000000000000 __expr142))) (let ((__expr144 (bvult __expr143 #b00000000000000000000000000001000))) (let ((__expr145 (not __expr144))) (let ((__expr146 (select |a12| #b1101))) (let ((__expr147 (concat #b0000000000000000000000000000 __expr146))) (let ((__expr148 (bvult __expr147 #b00000000000000000000000000001000))) (let ((__expr149 (not __expr148))) (let ((__expr150 (select |a12| #b1100))) (let ((__expr151 (concat #b0000000000000000000000000000 __expr150))) (let ((__expr152 (bvult __expr151 #b00000000000000000000000000001000))) (let ((__expr153 (not __expr152))) (let ((__expr154 (select |a12| #b1011))) (let ((__expr155 (concat #b0000000000000000000000000000 __expr154))) (let ((__expr156 (bvult __expr155 #b00000000000000000000000000001000))) (let ((__expr157 (not __expr156))) (let ((__expr158 (select |a12| #b1010))) (let ((__expr159 (concat #b0000000000000000000000000000 __expr158))) (let ((__expr160 (bvult __expr159 #b00000000000000000000000000001000))) (let ((__expr161 (not __expr160))) (let ((__expr162 (select |a12| #b1001))) (let ((__expr163 (concat #b0000000000000000000000000000 __expr162))) (let ((__expr164 (bvult __expr163 #b00000000000000000000000000001000))) (let ((__expr165 (not __expr164))) (let ((__expr166 (select |a12| #b1000))) (let ((__expr167 (concat #b0000000000000000000000000000 __expr166))) (let ((__expr168 (bvult __expr167 #b00000000000000000000000000001000))) (let ((__expr169 (not __expr168))) (let ((__expr170 (select |a12| #b0111))) (let ((__expr171 (concat #b0000000000000000000000000000 __expr170))) (let ((__expr172 (bvult __expr171 #b00000000000000000000000000001000))) (let ((__expr173 (not __expr172))) (let ((__expr174 (select |a12| #b0110))) (let ((__expr175 (concat #b0000000000000000000000000000 __expr174))) (let ((__expr176 (bvult __expr175 #b00000000000000000000000000001000))) (let ((__expr177 (not __expr176))) (let ((__expr178 (select |a12| #b0101))) (let ((__expr179 (concat #b0000000000000000000000000000 __expr178))) (let ((__expr180 (bvult __expr179 #b00000000000000000000000000001000))) (let ((__expr181 (not __expr180))) (let ((__expr182 (select |a12| #b0100))) (let ((__expr183 (concat #b0000000000000000000000000000 __expr182))) (let ((__expr184 (bvult __expr183 #b00000000000000000000000000001000))) (let ((__expr185 (not __expr184))) (let ((__expr186 (select |a12| #b0011))) (let ((__expr187 (concat #b0000000000000000000000000000 __expr186))) (let ((__expr188 (bvult __expr187 #b00000000000000000000000000001000))) (let ((__expr189 (not __expr188))) (let ((__expr190 (select |a12| #b0010))) (let ((__expr191 (concat #b0000000000000000000000000000 __expr190))) (let ((__expr192 (bvult __expr191 #b00000000000000000000000000001000))) (let ((__expr193 (not __expr192))) (let ((__expr194 (select |a12| #b0001))) (let ((__expr195 (concat #b0000000000000000000000000000 __expr194))) (let ((__expr196 (bvult __expr195 #b00000000000000000000000000001000))) (let ((__expr197 (not __expr196))) (let ((__expr198 (select |a12| #b0000))) (let ((__expr199 (concat #b0000000000000000000000000000 __expr198))) (let ((__expr200 (bvult __expr199 #b00000000000000000000000000001000))) (let ((__expr201 (not __expr200))) (let ((__expr202 (and __expr201 __expr197))) (let ((__expr203 (and __expr202 __expr193))) (let ((__expr204 (and __expr203 __expr189))) (let ((__expr205 (and __expr204 __expr185))) (let ((__expr206 (and __expr205 __expr181))) (let ((__expr207 (and __expr206 __expr177))) (let ((__expr208 (and __expr207 __expr173))) (let ((__expr209 (and __expr208 __expr169))) (let ((__expr210 (and __expr209 __expr165))) (let ((__expr211 (and __expr210 __expr161))) (let ((__expr212 (and __expr211 __expr157))) (let ((__expr213 (and __expr212 __expr153))) (let ((__expr214 (and __expr213 __expr149))) (let ((__expr215 (and __expr214 __expr145))) (let ((__expr216 (and __expr215 __expr141))) (let ((__expr8 (ite |$auto$splice.cc:234:run$420| #b1 (ite true #b0 #b0)))) (let ((__expr217 (= __expr8 #b1))) (let ((__expr218 (and __expr217 __expr216))) (let ((__expr219 (not __expr218))) __expr219)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
   :query (qry_rch_1 (rch_1)))