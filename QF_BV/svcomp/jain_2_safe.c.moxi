(set-logic QF_BV)
(define-system main 
   :input ((__VERIFIER_nondet_int (_ BitVec 32))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__TEMP__4$main (_ BitVec 32)) (__TEMP__5$main (_ BitVec 32)) (cond__6$main (_ BitVec 32)) (x__1$main (_ BitVec 32)) (y__3$main (_ BitVec 32))) 
   :local () 
   :init (let ((__expr1 (not _PC.2))) (let ((__expr2 (and _PC.0 _PC.1))) (let ((__expr3 (and __expr2 __expr1))) __expr3))) 
   :trans (let ((__expr4 (= x__1$main' #b00000000000000000000000000000001))) (let ((__expr5 (= y__3$main' #b00000000000000000000000000000001))) (let ((__expr6 (and __expr5 __expr4))) (let ((__expr7 (= __TEMP__5$main' __TEMP__5$main))) (let ((__expr8 (and __expr7 __expr6))) (let ((__expr9 (= __TEMP__4$main' __TEMP__4$main))) (let ((__expr10 (and __expr9 __expr8))) (let ((__expr11 (= cond__6$main' cond__6$main))) (let ((__expr12 (and __expr11 __expr10))) (let ((__expr13 (not _PC.1'))) (let ((__expr14 (not _PC.0'))) (let ((__expr15 (and __expr14 __expr13))) (let ((__expr16 (not _PC.2'))) (let ((__expr17 (and __expr16 __expr15))) (let ((__expr18 (and __expr17 __expr12))) (let ((__expr1 (not _PC.2))) (let ((__expr2 (and _PC.0 _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr19 (and __expr3 __expr18))) (let ((__expr20 (= __TEMP__5$main' __VERIFIER_nondet_int))) (let ((__expr21 (= __TEMP__4$main' __VERIFIER_nondet_int))) (let ((__expr22 (bvshl __TEMP__4$main' #b00000000000000000000000000000001))) (let ((__expr23 (bvadd x__1$main __expr22))) (let ((__expr24 (= x__1$main' __expr23))) (let ((__expr25 (and __expr24 __expr21))) (let ((__expr26 (and __expr25 __expr20))) (let ((__expr27 (bvshl __TEMP__5$main' #b00000000000000000000000000000001))) (let ((__expr28 (bvadd y__3$main __expr27))) (let ((__expr29 (= y__3$main' __expr28))) (let ((__expr30 (and __expr29 __expr26))) (let ((__expr31 (= cond__6$main' #b00000000000000000000000000000001))) (let ((__expr32 (bvadd x__1$main' y__3$main'))) (let ((__expr33 (= __expr32 #b00000000000000000000000000000001))) (let ((__expr34 (or __expr33 __expr31))) (let ((__expr35 (= cond__6$main' #b00000000000000000000000000000000))) (let ((__expr36 (not __expr35))) (let ((__expr37 (and __expr36 __expr33))) (let ((__expr38 (not __expr37))) (let ((__expr39 (and __expr38 __expr34))) (let ((__expr40 (and __expr39 __expr30))) (let ((__expr41 (and __expr35 __expr40))) (let ((__expr42 (and _PC.0' __expr13))) (let ((__expr43 (and __expr16 __expr42))) (let ((__expr44 (and __expr43 __expr41))) (let ((__expr45 (not _PC.1))) (let ((__expr46 (not _PC.0))) (let ((__expr47 (and __expr46 __expr45))) (let ((__expr48 (and __expr1 __expr47))) (let ((__expr49 (and __expr48 __expr44))) (let ((__expr50 (or __expr49 __expr19))) (let ((__expr51 (and __expr36 __expr40))) (let ((__expr52 (and __expr17 __expr51))) (let ((__expr53 (and __expr52 __expr48))) (let ((__expr54 (or __expr53 __expr50))) (let ((__expr55 (and _PC.0 __expr45))) (let ((__expr56 (and __expr1 __expr55))) (let ((__expr57 (= y__3$main' y__3$main))) (let ((__expr58 (and __expr57 __expr7))) (let ((__expr59 (and __expr58 __expr9))) (let ((__expr60 (= x__1$main' x__1$main))) (let ((__expr61 (and __expr60 __expr59))) (let ((__expr62 (and __expr61 __expr11))) (let ((__expr63 (and __expr14 _PC.1'))) (let ((__expr64 (and __expr63 __expr16))) (let ((__expr65 (and __expr64 __expr62))) (let ((__expr66 (and __expr65 __expr56))) (let ((__expr67 (or __expr66 __expr54))) (let ((__expr68 (and _PC.1 __expr46))) (let ((__expr69 (and __expr1 __expr68))) (let ((__expr70 (and __expr64 __expr69))) (let ((__expr71 (or __expr70 __expr67))) __expr71))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((__VERIFIER_nondet_int (_ BitVec 32))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__TEMP__4$main (_ BitVec 32)) (__TEMP__5$main (_ BitVec 32)) (cond__6$main (_ BitVec 32)) (x__1$main (_ BitVec 32)) (y__3$main (_ BitVec 32))) 
   :local () 
   :reachable (rch_1 (not (let ((__expr46 (not _PC.0))) (let ((__expr68 (and _PC.1 __expr46))) (let ((__expr1 (not _PC.2))) (let ((__expr69 (and __expr1 __expr68))) (let ((__expr72 (not __expr69))) __expr72)))))))
   :query (qry_rch_1 (rch_1)))