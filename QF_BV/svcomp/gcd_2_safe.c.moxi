(set-logic QF_BV)
(define-system main 
   :input ((|__NONDET_INLINE_INIT__3__5$main#0| (_ BitVec 8)) (|__NONDET_INLINE_INIT__3__5$main#2| (_ BitVec 8)) (|__NONDET_INLINE_INIT__5__6$main#1| (_ BitVec 8)) (|__NONDET_INLINE_INIT__5__6$main#3| (_ BitVec 8)) (a__10$main.SSA.1.ssa (_ BitVec 8)) (b__11$main.SSA.1.ssa (_ BitVec 8))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__INLINE_TEMP__0$main (_ BitVec 32)) (__INLINE_TEMP__8$main (_ BitVec 8)) (__RET__$main (_ BitVec 32)) (a__10$main (_ BitVec 8)) (b__11$main (_ BitVec 8)) (cond__15$main (_ BitVec 32)) (g__6$main (_ BitVec 8)) (t__12$main (_ BitVec 8)) (x__2$main (_ BitVec 8)) (y__4$main (_ BitVec 8))) 
   :local () 
   :init (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) __expr5))))) 
   :trans (let ((__expr6 (= x__2$main' |__NONDET_INLINE_INIT__3__5$main#0|))) (let ((__expr7 (= y__4$main' |__NONDET_INLINE_INIT__5__6$main#1|))) (let ((__expr8 (and __expr7 __expr6))) (let ((__expr9 (= x__2$main' a__10$main.SSA.1.ssa))) (let ((__expr10 (and __expr9 __expr8))) (let ((__expr11 (= y__4$main' b__11$main.SSA.1.ssa))) (let ((__expr12 (and __expr11 __expr10))) (let ((__expr13 (concat (ite (bvslt a__10$main.SSA.1.ssa #b00000000) #b000000000000000000000001 (ite true #b000000000000000000000000 #b000000000000000000000000)) a__10$main.SSA.1.ssa))) (let ((__expr14 ((_ extract 31 31) __expr13))) (let ((__expr15 (= __expr14 #b1))) (let ((__expr16 (and __expr15 __expr12))) (let ((__expr17 (bvneg __expr13))) (let ((__expr18 ((_ extract 7 0) __expr17))) (let ((__expr19 (= a__10$main' __expr18))) (let ((__expr20 (and __expr19 __expr16))) (let ((__expr21 (not __expr15))) (let ((__expr22 (and __expr21 __expr12))) (let ((__expr23 (= a__10$main' a__10$main.SSA.1.ssa))) (let ((__expr24 (and __expr23 __expr22))) (let ((__expr25 (or __expr24 __expr20))) (let ((__expr26 (concat (ite (bvslt b__11$main.SSA.1.ssa #b00000000) #b000000000000000000000001 (ite true #b000000000000000000000000 #b000000000000000000000000)) b__11$main.SSA.1.ssa))) (let ((__expr27 ((_ extract 31 31) __expr26))) (let ((__expr28 (= __expr27 #b1))) (let ((__expr29 (and __expr28 __expr25))) (let ((__expr30 (bvneg __expr26))) (let ((__expr31 ((_ extract 7 0) __expr30))) (let ((__expr32 (= b__11$main' __expr31))) (let ((__expr33 (and __expr32 __expr29))) (let ((__expr34 (not __expr28))) (let ((__expr35 (and __expr34 __expr25))) (let ((__expr36 (= b__11$main' b__11$main.SSA.1.ssa))) (let ((__expr37 (and __expr36 __expr35))) (let ((__expr38 (or __expr37 __expr33))) (let ((__expr39 (= b__11$main' #b00000000))) (let ((__expr40 (not __expr39))) (let ((__expr41 (and __expr40 __expr38))) (let ((__expr42 (= g__6$main' g__6$main))) (let ((__expr43 (and __expr42 __expr41))) (let ((__expr44 (= cond__15$main' cond__15$main))) (let ((__expr45 (and __expr44 __expr43))) (let ((__expr46 (= __INLINE_TEMP__8$main' __INLINE_TEMP__8$main))) (let ((__expr47 (and __expr46 __expr45))) (let ((__expr48 (= __RET__$main' __RET__$main))) (let ((__expr49 (and __expr48 __expr47))) (let ((__expr50 (= t__12$main' t__12$main))) (let ((__expr51 (and __expr50 __expr49))) (let ((__expr52 (= __INLINE_TEMP__0$main' __INLINE_TEMP__0$main))) (let ((__expr53 (and __expr52 __expr51))) (let ((__expr54 (not _PC.2'))) (let ((__expr55 (not _PC.1'))) (let ((__expr56 (and __expr55 _PC.0'))) (let ((__expr57 (and __expr56 __expr54))) (let ((__expr58 (and __expr57 __expr53))) (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) (let ((__expr59 (and __expr5 __expr58))) (let ((__expr60 (= x__2$main' |__NONDET_INLINE_INIT__3__5$main#2|))) (let ((__expr61 (= y__4$main' |__NONDET_INLINE_INIT__5__6$main#3|))) (let ((__expr62 (and __expr61 __expr60))) (let ((__expr63 (and __expr62 __expr9))) (let ((__expr64 (and __expr63 __expr11))) (let ((__expr65 (and __expr64 __expr15))) (let ((__expr66 (and __expr65 __expr19))) (let ((__expr67 (and __expr64 __expr21))) (let ((__expr68 (and __expr67 __expr23))) (let ((__expr69 (or __expr68 __expr66))) (let ((__expr70 (and __expr69 __expr28))) (let ((__expr71 (and __expr70 __expr32))) (let ((__expr72 (and __expr69 __expr34))) (let ((__expr73 (and __expr72 __expr36))) (let ((__expr74 (or __expr73 __expr71))) (let ((__expr75 (and __expr39 __expr74))) (let ((__expr76 (and __expr42 __expr75))) (let ((__expr77 (and __expr44 __expr76))) (let ((__expr78 (and __expr46 __expr77))) (let ((__expr79 (and __expr48 __expr78))) (let ((__expr80 (and __expr50 __expr79))) (let ((__expr81 (and __expr52 __expr80))) (let ((__expr82 (not _PC.0'))) (let ((__expr83 (and _PC.1' __expr82))) (let ((__expr84 (and __expr83 __expr54))) (let ((__expr85 (and __expr84 __expr81))) (let ((__expr86 (and __expr5 __expr85))) (let ((__expr87 (or __expr86 __expr59))) (let ((__expr88 (and _PC.1 __expr1))) (let ((__expr89 (and __expr4 __expr88))) (let ((__expr90 (= a__10$main __INLINE_TEMP__8$main'))) (let ((__expr91 (= g__6$main' __INLINE_TEMP__8$main'))) (let ((__expr92 (and __expr91 __expr90))) (let ((__expr93 (concat (ite (bvslt y__4$main #b00000000) #b000000000000000000000001 (ite true #b000000000000000000000000 #b000000000000000000000000)) y__4$main))) (let ((__expr94 (bvslt #b00000000000000000000000000000000 __expr93))) (let ((__expr95 (and __expr94 __expr92))) (let ((__expr96 (= cond__15$main' #b00000000000000000000000000000001))) (let ((__expr97 (concat (ite (bvslt g__6$main' #b00000000) #b000000000000000000000001 (ite true #b000000000000000000000000 #b000000000000000000000000)) g__6$main'))) (let ((__expr98 (bvslt __expr93 __expr97))) (let ((__expr99 (or __expr98 __expr96))) (let ((__expr100 (= cond__15$main' #b00000000000000000000000000000000))) (let ((__expr101 (not __expr100))) (let ((__expr102 (and __expr101 __expr98))) (let ((__expr103 (not __expr102))) (let ((__expr104 (and __expr103 __expr99))) (let ((__expr105 (and __expr104 __expr95))) (let ((__expr106 (and __expr100 __expr105))) (let ((__expr107 (= b__11$main b__11$main'))) (let ((__expr108 (and __expr107 __expr106))) (let ((__expr109 (and __expr48 __expr108))) (let ((__expr110 (= a__10$main' a__10$main))) (let ((__expr111 (and __expr110 __expr109))) (let ((__expr112 (= x__2$main' x__2$main))) (let ((__expr113 (and __expr112 __expr111))) (let ((__expr114 (and __expr50 __expr113))) (let ((__expr115 (and __expr52 __expr114))) (let ((__expr116 (= y__4$main' y__4$main))) (let ((__expr117 (and __expr116 __expr115))) (let ((__expr118 (and _PC.1' _PC.0'))) (let ((__expr119 (and __expr54 __expr118))) (let ((__expr120 (and __expr119 __expr117))) (let ((__expr121 (and __expr120 __expr89))) (let ((__expr122 (or __expr121 __expr87))) (let ((__expr123 (and _PC.1 _PC.0))) (let ((__expr124 (and __expr4 __expr123))) (let ((__expr125 (and __expr42 __expr44))) (let ((__expr126 (and __expr46 __expr125))) (let ((__expr127 (and __expr126 __expr107))) (let ((__expr128 (and __expr48 __expr127))) (let ((__expr129 (and __expr128 __expr110))) (let ((__expr130 (and __expr112 __expr129))) (let ((__expr131 (and __expr130 __expr50))) (let ((__expr132 (and __expr52 __expr131))) (let ((__expr133 (and __expr116 __expr132))) (let ((__expr134 (and __expr56 _PC.2'))) (let ((__expr135 (and __expr134 __expr133))) (let ((__expr136 (and __expr135 __expr124))) (let ((__expr137 (or __expr136 __expr122))) (let ((__expr138 (= t__12$main' b__11$main))) (let ((__expr139 (concat (ite (bvslt b__11$main #b00000000) #b000000000000000000000001 (ite true #b000000000000000000000000 #b000000000000000000000000)) b__11$main))) (let ((__expr140 (concat (ite (bvslt a__10$main #b00000000) #b000000000000000000000001 (ite true #b000000000000000000000000 #b000000000000000000000000)) a__10$main))) (let ((__expr141 (bvsrem __expr140 __expr139))) (let ((__expr142 ((_ extract 7 0) __expr141))) (let ((__expr143 (= __expr142 b__11$main'))) (let ((__expr144 (and __expr143 __expr138))) (let ((__expr145 (= a__10$main' t__12$main'))) (let ((__expr146 (and __expr145 __expr144))) (let ((__expr147 (and __expr146 __expr40))) (let ((__expr148 (and __expr42 __expr147))) (let ((__expr149 (and __expr44 __expr148))) (let ((__expr150 (and __expr46 __expr149))) (let ((__expr151 (and __expr48 __expr150))) (let ((__expr152 (and __expr112 __expr151))) (let ((__expr153 (and __expr52 __expr152))) (let ((__expr154 (and __expr116 __expr153))) (let ((__expr155 (and __expr57 __expr154))) (let ((__expr156 (and __expr2 _PC.0))) (let ((__expr157 (and __expr4 __expr156))) (let ((__expr158 (and __expr157 __expr155))) (let ((__expr159 (or __expr158 __expr137))) (let ((__expr160 (and __expr146 __expr39))) (let ((__expr161 (and __expr42 __expr160))) (let ((__expr162 (and __expr161 __expr44))) (let ((__expr163 (and __expr162 __expr46))) (let ((__expr164 (and __expr163 __expr48))) (let ((__expr165 (and __expr164 __expr112))) (let ((__expr166 (and __expr165 __expr52))) (let ((__expr167 (and __expr166 __expr116))) (let ((__expr168 (and __expr84 __expr167))) (let ((__expr169 (and __expr168 __expr157))) (let ((__expr170 (or __expr169 __expr159))) (let ((__expr171 (and _PC.2 __expr156))) (let ((__expr172 (and __expr134 __expr171))) (let ((__expr173 (or __expr172 __expr170))) __expr173))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((|__NONDET_INLINE_INIT__3__5$main#0| (_ BitVec 8)) (|__NONDET_INLINE_INIT__3__5$main#2| (_ BitVec 8)) (|__NONDET_INLINE_INIT__5__6$main#1| (_ BitVec 8)) (|__NONDET_INLINE_INIT__5__6$main#3| (_ BitVec 8)) (a__10$main.SSA.1.ssa (_ BitVec 8)) (b__11$main.SSA.1.ssa (_ BitVec 8))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__INLINE_TEMP__0$main (_ BitVec 32)) (__INLINE_TEMP__8$main (_ BitVec 8)) (__RET__$main (_ BitVec 32)) (a__10$main (_ BitVec 8)) (b__11$main (_ BitVec 8)) (cond__15$main (_ BitVec 32)) (g__6$main (_ BitVec 8)) (t__12$main (_ BitVec 8)) (x__2$main (_ BitVec 8)) (y__4$main (_ BitVec 8))) 
   :local () 
   :reachable (rch_1 (not (let ((__expr2 (not _PC.1))) (let ((__expr156 (and __expr2 _PC.0))) (let ((__expr171 (and _PC.2 __expr156))) (let ((__expr174 (not __expr171))) __expr174))))))
   :query (qry_rch_1 (rch_1)))