(set-logic QF_BV)
(define-system main 
   :input ((__VERIFIER_nondet_int (_ BitVec 32))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__TEMP__6$main (_ BitVec 32)) (__TEMP__7$main (_ BitVec 32)) (__TEMP__8$main (_ BitVec 32)) (cond__8$main (_ BitVec 32)) (x__1$main (_ BitVec 32)) (y__3$main (_ BitVec 32)) (z__5$main (_ BitVec 32))) 
   :local () 
   :init (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) __expr5))))) 
   :trans (let ((__expr6 (= x__1$main' #b00000000000000000000000000000000))) (let ((__expr7 (= y__3$main' #b00000000000000000000000000000000))) (let ((__expr8 (and __expr7 __expr6))) (let ((__expr9 (= z__5$main' #b00000000000000000000000000000000))) (let ((__expr10 (and __expr9 __expr8))) (let ((__expr11 (= cond__8$main' cond__8$main))) (let ((__expr12 (and __expr11 __expr10))) (let ((__expr13 (= __TEMP__8$main' __TEMP__8$main))) (let ((__expr14 (and __expr13 __expr12))) (let ((__expr15 (= __TEMP__7$main' __TEMP__7$main))) (let ((__expr16 (and __expr15 __expr14))) (let ((__expr17 (= __TEMP__6$main' __TEMP__6$main))) (let ((__expr18 (and __expr17 __expr16))) (let ((__expr19 (not _PC.1'))) (let ((__expr20 (and _PC.0' __expr19))) (let ((__expr21 (not _PC.2'))) (let ((__expr22 (and __expr21 __expr20))) (let ((__expr23 (and __expr22 __expr18))) (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) (let ((__expr24 (and __expr5 __expr23))) (let ((__expr25 (= __TEMP__8$main' __VERIFIER_nondet_int))) (let ((__expr26 (= __TEMP__7$main' __VERIFIER_nondet_int))) (let ((__expr27 (= __TEMP__6$main' __VERIFIER_nondet_int))) (let ((__expr28 (bvshl __TEMP__6$main' #b00000000000000000000000000000010))) (let ((__expr29 (bvadd x__1$main __expr28))) (let ((__expr30 (= x__1$main' __expr29))) (let ((__expr31 (and __expr30 __expr27))) (let ((__expr32 (and __expr31 __expr26))) (let ((__expr33 (bvshl __TEMP__7$main' #b00000000000000000000000000000010))) (let ((__expr34 (bvadd y__3$main __expr33))) (let ((__expr35 (= y__3$main' __expr34))) (let ((__expr36 (and __expr35 __expr32))) (let ((__expr37 (and __expr36 __expr25))) (let ((__expr38 (bvshl __TEMP__8$main' #b00000000000000000000000000000011))) (let ((__expr39 (bvadd z__5$main __expr38))) (let ((__expr40 (= z__5$main' __expr39))) (let ((__expr41 (and __expr40 __expr37))) (let ((__expr42 (= cond__8$main' #b00000000000000000000000000000001))) (let ((__expr43 (bvadd x__1$main' y__3$main'))) (let ((__expr44 (bvadd z__5$main' __expr43))) (let ((__expr45 (= __expr44 #b00000000000000000000000000000001))) (let ((__expr46 (or __expr45 __expr42))) (let ((__expr47 (= cond__8$main' #b00000000000000000000000000000000))) (let ((__expr48 (not __expr47))) (let ((__expr49 (and __expr48 __expr45))) (let ((__expr50 (not __expr49))) (let ((__expr51 (and __expr50 __expr46))) (let ((__expr52 (and __expr51 __expr41))) (let ((__expr53 (and __expr47 __expr52))) (let ((__expr54 (not _PC.0'))) (let ((__expr55 (and _PC.1' __expr54))) (let ((__expr56 (and __expr21 __expr55))) (let ((__expr57 (and __expr56 __expr53))) (let ((__expr58 (and __expr2 _PC.0))) (let ((__expr59 (and __expr4 __expr58))) (let ((__expr60 (and __expr59 __expr57))) (let ((__expr61 (or __expr60 __expr24))) (let ((__expr62 (and __expr48 __expr52))) (let ((__expr63 (and __expr22 __expr62))) (let ((__expr64 (and __expr63 __expr59))) (let ((__expr65 (or __expr64 __expr61))) (let ((__expr66 (and _PC.1 __expr1))) (let ((__expr67 (and __expr4 __expr66))) (let ((__expr68 (= y__3$main' y__3$main))) (let ((__expr69 (and __expr68 __expr11))) (let ((__expr70 (= z__5$main' z__5$main))) (let ((__expr71 (and __expr70 __expr69))) (let ((__expr72 (and __expr71 __expr13))) (let ((__expr73 (= x__1$main' x__1$main))) (let ((__expr74 (and __expr73 __expr72))) (let ((__expr75 (and __expr74 __expr15))) (let ((__expr76 (and __expr75 __expr17))) (let ((__expr77 (and _PC.0' _PC.1'))) (let ((__expr78 (and __expr77 __expr21))) (let ((__expr79 (and __expr78 __expr76))) (let ((__expr80 (and __expr79 __expr67))) (let ((__expr81 (or __expr80 __expr65))) (let ((__expr82 (and _PC.1 _PC.0))) (let ((__expr83 (and __expr4 __expr82))) (let ((__expr84 (and __expr78 __expr83))) (let ((__expr85 (or __expr84 __expr81))) __expr85))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((__VERIFIER_nondet_int (_ BitVec 32))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__TEMP__6$main (_ BitVec 32)) (__TEMP__7$main (_ BitVec 32)) (__TEMP__8$main (_ BitVec 32)) (cond__8$main (_ BitVec 32)) (x__1$main (_ BitVec 32)) (y__3$main (_ BitVec 32)) (z__5$main (_ BitVec 32))) 
   :local () 
   :reachable (rch_1 (not (let ((__expr82 (and _PC.1 _PC.0))) (let ((__expr4 (not _PC.2))) (let ((__expr83 (and __expr4 __expr82))) (let ((__expr86 (not __expr83))) __expr86))))))
   :query (qry_rch_1 (rch_1)))