(set-logic QF_BV)
(define-system main 
   :input ((__NONDET_INLINE_INIT__2__4_dollar_main#0 (_ BitVec 32)) (__NONDET_INLINE_INIT__4__5_dollar_main#1 (_ BitVec 32))) 
   :output ((_PC_0 Bool) (_PC_1 Bool) (_PC_2 Bool) (__RET___dollar_main (_ BitVec 32)) (j__3_dollar_main (_ BitVec 32)) (n__1_dollar_main (_ BitVec 32))) 
   :local () 
   :init (let ((__expr1 (not _PC_0))) (let ((__expr2 (not _PC_1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC_2))) (let ((__expr5 (and __expr4 __expr3))) __expr5))))) 
   :trans (let ((__expr6 (= n__1_dollar_main' __NONDET_INLINE_INIT__2__4_dollar_main#0))) (let ((__expr7 (= j__3_dollar_main' __NONDET_INLINE_INIT__4__5_dollar_main#1))) (let ((__expr8 (and __expr7 __expr6))) (let ((__expr9 (bvslt n__1_dollar_main' j__3_dollar_main'))) (let ((__expr10 (not __expr9))) (let ((__expr11 (and __expr10 __expr8))) (let ((__expr12 (= __RET___dollar_main __RET___dollar_main'))) (let ((__expr13 (and __expr12 __expr11))) (let ((__expr14 (not _PC_2'))) (let ((__expr15 (not _PC_1'))) (let ((__expr16 (and __expr15 _PC_0'))) (let ((__expr17 (and __expr16 __expr14))) (let ((__expr18 (and __expr17 __expr13))) (let ((__expr1 (not _PC_0))) (let ((__expr2 (not _PC_1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC_2))) (let ((__expr5 (and __expr4 __expr3))) (let ((__expr19 (and __expr5 __expr18))) (let ((__expr20 (and __expr2 _PC_0))) (let ((__expr21 (and __expr4 __expr20))) (let ((__expr22 (= n__1_dollar_main n__1_dollar_main'))) (let ((__expr23 (bvadd #b00000000000000000000000000000001 j__3_dollar_main))) (let ((__expr24 (= __expr23 j__3_dollar_main'))) (let ((__expr25 (bvslt n__1_dollar_main j__3_dollar_main))) (let ((__expr26 (not __expr25))) (let ((__expr27 (and __expr26 __expr24))) (let ((__expr28 (and __expr27 __expr12))) (let ((__expr29 (and __expr28 __expr22))) (let ((__expr30 (and __expr17 __expr29))) (let ((__expr31 (and __expr30 __expr21))) (let ((__expr32 (or __expr31 __expr19))) __expr32)))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((__NONDET_INLINE_INIT__2__4_dollar_main#0 (_ BitVec 32)) (__NONDET_INLINE_INIT__4__5_dollar_main#1 (_ BitVec 32))) 
   :output ((_PC_0 Bool) (_PC_1 Bool) (_PC_2 Bool) (__RET___dollar_main (_ BitVec 32)) (j__3_dollar_main (_ BitVec 32)) (n__1_dollar_main (_ BitVec 32))) 
   :local () 
   :reachable (rch_1 (not (let ((__expr33 (and _PC_1 _PC_0))) (let ((__expr4 (not _PC_2))) (let ((__expr34 (and __expr4 __expr33))) (let ((__expr35 (not __expr34))) __expr35))))))
   :query (qry_rch_1 (rch_1)))