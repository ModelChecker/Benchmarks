(set-logic QF_BV)
(define-system main 
   :input ((|__NONDET_INLINE_INIT__2__6$main#0| (_ BitVec 32)) (|__NONDET_INLINE_INIT__4__7$main#1| (_ BitVec 32))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__RET__$main (_ BitVec 32)) (i0__5$main (_ BitVec 32)) (i1__9$main (_ BitVec 32)) (j1__11$main (_ BitVec 32)) (k__7$main (_ BitVec 32)) (n0__1$main (_ BitVec 32)) (n1__3$main (_ BitVec 32))) 
   :local () 
   :init (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) __expr5))))) 
   :trans (let ((__expr6 (= n0__1$main' |__NONDET_INLINE_INIT__2__6$main#0|))) (let ((__expr7 (= n1__3$main' |__NONDET_INLINE_INIT__4__7$main#1|))) (let ((__expr8 (and __expr7 __expr6))) (let ((__expr9 (= i0__5$main' #b00000000000000000000000000000000))) (let ((__expr10 (and __expr9 __expr8))) (let ((__expr11 (= k__7$main' #b00000000000000000000000000000000))) (let ((__expr12 (and __expr11 __expr10))) (let ((__expr13 (= i1__9$main' i1__9$main))) (let ((__expr14 (and __expr13 __expr12))) (let ((__expr15 (= __RET__$main __RET__$main'))) (let ((__expr16 (and __expr15 __expr14))) (let ((__expr17 (= j1__11$main j1__11$main'))) (let ((__expr18 (and __expr17 __expr16))) (let ((__expr19 (not _PC.1'))) (let ((__expr20 (and _PC.0' __expr19))) (let ((__expr21 (not _PC.2'))) (let ((__expr22 (and __expr21 __expr20))) (let ((__expr23 (and __expr22 __expr18))) (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) (let ((__expr24 (and __expr5 __expr23))) (let ((__expr25 (bvslt i0__5$main n0__1$main))) (let ((__expr26 (not __expr25))) (let ((__expr27 (= i1__9$main' #b00000000000000000000000000000000))) (let ((__expr28 (and __expr27 __expr26))) (let ((__expr29 (= k__7$main k__7$main'))) (let ((__expr30 (and __expr29 __expr28))) (let ((__expr31 (= n0__1$main' n0__1$main))) (let ((__expr32 (and __expr31 __expr30))) (let ((__expr33 (= i0__5$main' i0__5$main))) (let ((__expr34 (and __expr33 __expr32))) (let ((__expr35 (and __expr15 __expr34))) (let ((__expr36 (= n1__3$main n1__3$main'))) (let ((__expr37 (and __expr36 __expr35))) (let ((__expr38 (and __expr17 __expr37))) (let ((__expr39 (not _PC.0'))) (let ((__expr40 (and _PC.1' __expr39))) (let ((__expr41 (and __expr21 __expr40))) (let ((__expr42 (and __expr41 __expr38))) (let ((__expr43 (and __expr2 _PC.0))) (let ((__expr44 (and __expr4 __expr43))) (let ((__expr45 (and __expr44 __expr42))) (let ((__expr46 (or __expr45 __expr24))) (let ((__expr47 (bvadd #b00000000000000000000000000000001 i0__5$main))) (let ((__expr48 (= i0__5$main' __expr47))) (let ((__expr49 (and __expr48 __expr25))) (let ((__expr50 (bvadd #b00000000000000000000000000000001 k__7$main))) (let ((__expr51 (= k__7$main' __expr50))) (let ((__expr52 (and __expr51 __expr49))) (let ((__expr53 (and __expr31 __expr52))) (let ((__expr54 (and __expr13 __expr53))) (let ((__expr55 (and __expr15 __expr54))) (let ((__expr56 (and __expr36 __expr55))) (let ((__expr57 (and __expr17 __expr56))) (let ((__expr58 (and __expr22 __expr57))) (let ((__expr59 (and __expr58 __expr44))) (let ((__expr60 (or __expr59 __expr46))) (let ((__expr61 (bvslt i1__9$main n1__3$main))) (let ((__expr62 (not __expr61))) (let ((__expr63 (= j1__11$main' #b00000000000000000000000000000000))) (let ((__expr64 (and __expr63 __expr62))) (let ((__expr65 (and __expr29 __expr64))) (let ((__expr66 (and __expr31 __expr65))) (let ((__expr67 (and __expr33 __expr66))) (let ((__expr68 (and __expr13 __expr67))) (let ((__expr69 (and __expr15 __expr68))) (let ((__expr70 (and __expr36 __expr69))) (let ((__expr71 (and _PC.0' _PC.1'))) (let ((__expr72 (and __expr71 __expr21))) (let ((__expr73 (and __expr72 __expr70))) (let ((__expr74 (and _PC.1 __expr1))) (let ((__expr75 (and __expr4 __expr74))) (let ((__expr76 (and __expr75 __expr73))) (let ((__expr77 (or __expr76 __expr60))) (let ((__expr78 (bvadd #b00000000000000000000000000000001 i1__9$main))) (let ((__expr79 (= i1__9$main' __expr78))) (let ((__expr80 (and __expr79 __expr61))) (let ((__expr81 (and __expr80 __expr51))) (let ((__expr82 (and __expr31 __expr81))) (let ((__expr83 (and __expr33 __expr82))) (let ((__expr84 (and __expr15 __expr83))) (let ((__expr85 (and __expr36 __expr84))) (let ((__expr86 (and __expr85 __expr17))) (let ((__expr87 (and __expr41 __expr86))) (let ((__expr88 (and __expr87 __expr75))) (let ((__expr89 (or __expr88 __expr77))) (let ((__expr90 (and _PC.1 _PC.0))) (let ((__expr91 (and __expr4 __expr90))) (let ((__expr92 (bvadd n0__1$main n1__3$main))) (let ((__expr93 (bvslt j1__11$main __expr92))) (let ((__expr94 (bvadd #b00000000000000000000000000000001 j1__11$main))) (let ((__expr95 (= __expr94 j1__11$main'))) (let ((__expr96 (and __expr95 __expr93))) (let ((__expr97 (bvadd #b11111111111111111111111111111111 k__7$main))) (let ((__expr98 (= __expr97 k__7$main'))) (let ((__expr99 (and __expr98 __expr96))) (let ((__expr100 (and __expr31 __expr99))) (let ((__expr101 (and __expr100 __expr33))) (let ((__expr102 (and __expr101 __expr13))) (let ((__expr103 (and __expr102 __expr15))) (let ((__expr104 (and __expr103 __expr36))) (let ((__expr105 (and __expr72 __expr104))) (let ((__expr106 (and __expr105 __expr91))) (let ((__expr107 (or __expr106 __expr89))) __expr107))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((|__NONDET_INLINE_INIT__2__6$main#0| (_ BitVec 32)) (|__NONDET_INLINE_INIT__4__7$main#1| (_ BitVec 32))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__RET__$main (_ BitVec 32)) (i0__5$main (_ BitVec 32)) (i1__9$main (_ BitVec 32)) (j1__11$main (_ BitVec 32)) (k__7$main (_ BitVec 32)) (n0__1$main (_ BitVec 32)) (n1__3$main (_ BitVec 32))) 
   :local () 
   :reachable (rch_1 (not (let ((__expr2 (not _PC.1))) (let ((__expr43 (and __expr2 _PC.0))) (let ((__expr108 (and _PC.2 __expr43))) (let ((__expr109 (not __expr108))) __expr109))))))
   :query (qry_rch_1 (rch_1)))