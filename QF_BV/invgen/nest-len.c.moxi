(set-logic QF_BV)
(define-system main 
   :input ((|__NONDET_INLINE_INIT__6__5$main#0| (_ BitVec 32))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (_PC.3 Bool) (__RET__$main (_ BitVec 32)) (i__1$main (_ BitVec 32)) (k__3$main (_ BitVec 32)) (n__5$main (_ BitVec 32))) 
   :local () 
   :init (let ((__expr1 (not _PC.3))) (let ((__expr2 (not _PC.2))) (let ((__expr3 (not _PC.0))) (let ((__expr4 (and __expr3 _PC.1))) (let ((__expr5 (and __expr4 __expr2))) (let ((__expr6 (and __expr5 __expr1))) __expr6)))))) 
   :trans (let ((__expr7 (= n__5$main' |__NONDET_INLINE_INIT__6__5$main#0|))) (let ((__expr8 (= k__3$main' #b00000000000000000000000000000001))) (let ((__expr9 (and __expr8 __expr7))) (let ((__expr10 (= __RET__$main __RET__$main'))) (let ((__expr11 (and __expr10 __expr9))) (let ((__expr12 (= i__1$main' i__1$main))) (let ((__expr13 (and __expr12 __expr11))) (let ((__expr14 (and _PC.1' _PC.0'))) (let ((__expr15 (not _PC.2'))) (let ((__expr16 (and __expr15 __expr14))) (let ((__expr17 (not _PC.3'))) (let ((__expr18 (and __expr17 __expr16))) (let ((__expr19 (and __expr18 __expr13))) (let ((__expr1 (not _PC.3))) (let ((__expr2 (not _PC.2))) (let ((__expr3 (not _PC.0))) (let ((__expr4 (and __expr3 _PC.1))) (let ((__expr5 (and __expr4 __expr2))) (let ((__expr6 (and __expr5 __expr1))) (let ((__expr20 (and __expr6 __expr19))) (let ((__expr21 (bvslt k__3$main n__5$main))) (let ((__expr22 (bvslt k__3$main #b00000000000000000000000000000001))) (let ((__expr23 (and __expr22 __expr21))) (let ((__expr24 (and __expr10 __expr23))) (let ((__expr25 (and __expr12 __expr24))) (let ((__expr26 (= k__3$main' k__3$main))) (let ((__expr27 (and __expr26 __expr25))) (let ((__expr28 (= n__5$main' n__5$main))) (let ((__expr29 (and __expr28 __expr27))) (let ((__expr30 (not _PC.1'))) (let ((__expr31 (and __expr30 _PC.0'))) (let ((__expr32 (and __expr31 _PC.2'))) (let ((__expr33 (and __expr17 __expr32))) (let ((__expr34 (and __expr33 __expr29))) (let ((__expr35 (and _PC.0 _PC.1))) (let ((__expr36 (and __expr2 __expr35))) (let ((__expr37 (and __expr1 __expr36))) (let ((__expr38 (and __expr37 __expr34))) (let ((__expr39 (or __expr38 __expr20))) (let ((__expr40 (not __expr22))) (let ((__expr41 (and __expr40 __expr21))) (let ((__expr42 (= i__1$main' #b00000000000000000000000000000001))) (let ((__expr43 (and __expr42 __expr41))) (let ((__expr44 (and __expr10 __expr43))) (let ((__expr45 (and __expr26 __expr44))) (let ((__expr46 (and __expr28 __expr45))) (let ((__expr47 (not _PC.0'))) (let ((__expr48 (and _PC.1' __expr47))) (let ((__expr49 (and _PC.2' __expr48))) (let ((__expr50 (and __expr17 __expr49))) (let ((__expr51 (and __expr50 __expr46))) (let ((__expr52 (and __expr51 __expr37))) (let ((__expr53 (or __expr52 __expr39))) (let ((__expr54 (and _PC.2' __expr14))) (let ((__expr55 (and __expr17 __expr54))) (let ((__expr56 (bvslt i__1$main n__5$main))) (let ((__expr57 (not __expr56))) (let ((__expr58 (and __expr57 __expr42))) (let ((__expr59 (and __expr10 __expr58))) (let ((__expr60 (and __expr26 __expr59))) (let ((__expr61 (and __expr28 __expr60))) (let ((__expr62 (and __expr61 __expr55))) (let ((__expr63 (and __expr4 _PC.2))) (let ((__expr64 (and __expr1 __expr63))) (let ((__expr65 (and __expr64 __expr62))) (let ((__expr66 (or __expr65 __expr53))) (let ((__expr67 (bvadd #b00000000000000000000000000000001 i__1$main))) (let ((__expr68 (= i__1$main' __expr67))) (let ((__expr69 (and __expr68 __expr56))) (let ((__expr70 (and __expr10 __expr69))) (let ((__expr71 (and __expr26 __expr70))) (let ((__expr72 (and __expr28 __expr71))) (let ((__expr73 (and __expr72 __expr50))) (let ((__expr74 (and __expr73 __expr64))) (let ((__expr75 (or __expr74 __expr66))) (let ((__expr76 (and __expr30 __expr47))) (let ((__expr77 (and __expr15 __expr76))) (let ((__expr78 (and _PC.3' __expr77))) (let ((__expr79 (and __expr61 __expr78))) (let ((__expr80 (and _PC.2 __expr35))) (let ((__expr81 (and __expr1 __expr80))) (let ((__expr82 (and __expr81 __expr79))) (let ((__expr83 (or __expr82 __expr75))) (let ((__expr84 (and __expr72 __expr55))) (let ((__expr85 (and __expr84 __expr81))) (let ((__expr86 (or __expr85 __expr83))) (let ((__expr87 (and __expr31 __expr15))) (let ((__expr88 (and __expr87 _PC.3'))) (let ((__expr89 (and __expr61 __expr88))) (let ((__expr90 (not _PC.1))) (let ((__expr91 (and __expr3 __expr90))) (let ((__expr92 (and __expr2 __expr91))) (let ((__expr93 (and _PC.3 __expr92))) (let ((__expr94 (and __expr93 __expr89))) (let ((__expr95 (or __expr94 __expr86))) (let ((__expr96 (and __expr72 __expr78))) (let ((__expr97 (and __expr96 __expr93))) (let ((__expr98 (or __expr97 __expr95))) (let ((__expr99 (and __expr15 __expr48))) (let ((__expr100 (and _PC.3' __expr99))) (let ((__expr101 (and __expr61 __expr100))) (let ((__expr102 (and _PC.0 __expr90))) (let ((__expr103 (and __expr2 __expr102))) (let ((__expr104 (and _PC.3 __expr103))) (let ((__expr105 (and __expr104 __expr101))) (let ((__expr106 (or __expr105 __expr98))) (let ((__expr107 (and __expr72 __expr88))) (let ((__expr108 (and __expr107 __expr104))) (let ((__expr109 (or __expr108 __expr106))) (let ((__expr110 (and _PC.3' __expr16))) (let ((__expr111 (and __expr110 __expr61))) (let ((__expr112 (and __expr5 _PC.3))) (let ((__expr113 (and __expr112 __expr111))) (let ((__expr114 (or __expr113 __expr109))) (let ((__expr115 (and __expr72 __expr100))) (let ((__expr116 (and __expr115 __expr112))) (let ((__expr117 (or __expr116 __expr114))) (let ((__expr118 (and __expr17 __expr77))) (let ((__expr119 (and __expr118 __expr61))) (let ((__expr120 (and _PC.3 __expr36))) (let ((__expr121 (and __expr120 __expr119))) (let ((__expr122 (or __expr121 __expr117))) (let ((__expr123 (and __expr72 __expr110))) (let ((__expr124 (and __expr123 __expr120))) (let ((__expr125 (or __expr124 __expr122))) (let ((__expr126 (bvadd #b00000000000000000000000000000001 k__3$main))) (let ((__expr127 (= k__3$main' __expr126))) (let ((__expr128 (and __expr127 __expr57))) (let ((__expr129 (and __expr10 __expr128))) (let ((__expr130 (and __expr12 __expr129))) (let ((__expr131 (and __expr28 __expr130))) (let ((__expr132 (and __expr18 __expr131))) (let ((__expr133 (and __expr1 __expr92))) (let ((__expr134 (and __expr133 __expr132))) (let ((__expr135 (or __expr134 __expr125))) (let ((__expr136 (and __expr118 __expr72))) (let ((__expr137 (and __expr136 __expr133))) (let ((__expr138 (or __expr137 __expr135))) (let ((__expr139 (and _PC.2 __expr102))) (let ((__expr140 (and __expr1 __expr139))) (let ((__expr141 (and __expr12 __expr10))) (let ((__expr142 (and __expr141 __expr26))) (let ((__expr143 (and __expr142 __expr28))) (let ((__expr144 (and __expr87 __expr17))) (let ((__expr145 (and __expr144 __expr143))) (let ((__expr146 (and __expr145 __expr140))) (let ((__expr147 (or __expr146 __expr138))) (let ((__expr148 (and __expr1 __expr103))) (let ((__expr149 (and __expr144 __expr148))) (let ((__expr150 (or __expr149 __expr147))) __expr150)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((|__NONDET_INLINE_INIT__6__5$main#0| (_ BitVec 32))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (_PC.3 Bool) (__RET__$main (_ BitVec 32)) (i__1$main (_ BitVec 32)) (k__3$main (_ BitVec 32)) (n__5$main (_ BitVec 32))) 
   :local () 
   :reachable (rch_1 (not (let ((__expr90 (not _PC.1))) (let ((__expr102 (and _PC.0 __expr90))) (let ((__expr2 (not _PC.2))) (let ((__expr103 (and __expr2 __expr102))) (let ((__expr1 (not _PC.3))) (let ((__expr148 (and __expr1 __expr103))) (let ((__expr151 (not __expr148))) __expr151)))))))))
   :query (qry_rch_1 (rch_1)))