(set-logic QF_BV)
(define-system main 
   :input ((|__NONDET_INLINE_INIT__6__6$main#0| (_ BitVec 32)) (|__NONDET_INLINE_INIT__8__7$main#1| (_ BitVec 32))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (_PC.3 Bool) (__RET__$main (_ BitVec 32)) (i__1$main (_ BitVec 32)) (j__3$main (_ BitVec 32)) (k__5$main (_ BitVec 32)) (n__7$main (_ BitVec 32))) 
   :local () 
   :init (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) (let ((__expr6 (not _PC.3))) (let ((__expr7 (and __expr6 __expr5))) __expr7))))))) 
   :trans (let ((__expr8 (= k__5$main' |__NONDET_INLINE_INIT__6__6$main#0|))) (let ((__expr9 (= n__7$main' |__NONDET_INLINE_INIT__8__7$main#1|))) (let ((__expr10 (and __expr9 __expr8))) (let ((__expr11 (= n__7$main' k__5$main'))) (let ((__expr12 (and __expr11 __expr10))) (let ((__expr13 (= i__1$main' #b00000000000000000000000000000000))) (let ((__expr14 (and __expr13 __expr12))) (let ((__expr15 (= j__3$main' j__3$main))) (let ((__expr16 (and __expr15 __expr14))) (let ((__expr17 (= __RET__$main __RET__$main'))) (let ((__expr18 (and __expr17 __expr16))) (let ((__expr19 (not _PC.2'))) (let ((__expr20 (not _PC.1'))) (let ((__expr21 (and _PC.0' __expr20))) (let ((__expr22 (and __expr21 __expr19))) (let ((__expr23 (not _PC.3'))) (let ((__expr24 (and __expr23 __expr22))) (let ((__expr25 (and __expr24 __expr18))) (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) (let ((__expr6 (not _PC.3))) (let ((__expr7 (and __expr6 __expr5))) (let ((__expr26 (and __expr7 __expr25))) (let ((__expr27 (and __expr2 _PC.0))) (let ((__expr28 (and __expr4 __expr27))) (let ((__expr29 (and __expr6 __expr28))) (let ((__expr30 (bvslt i__1$main n__7$main))) (let ((__expr31 (bvshl i__1$main #b00000000000000000000000000000001))) (let ((__expr32 (= j__3$main' __expr31))) (let ((__expr33 (and __expr32 __expr30))) (let ((__expr34 (and __expr17 __expr33))) (let ((__expr35 (= k__5$main' k__5$main))) (let ((__expr36 (and __expr35 __expr34))) (let ((__expr37 (= n__7$main' n__7$main))) (let ((__expr38 (and __expr37 __expr36))) (let ((__expr39 (= i__1$main' i__1$main))) (let ((__expr40 (and __expr39 __expr38))) (let ((__expr41 (not _PC.0'))) (let ((__expr42 (and __expr20 __expr41))) (let ((__expr43 (and _PC.2' __expr42))) (let ((__expr44 (and __expr23 __expr43))) (let ((__expr45 (and __expr44 __expr40))) (let ((__expr46 (and __expr45 __expr29))) (let ((__expr47 (or __expr46 __expr26))) (let ((__expr48 (bvslt j__3$main n__7$main))) (let ((__expr49 (not __expr48))) (let ((__expr50 (bvadd #b00000000000000000000000000000001 i__1$main))) (let ((__expr51 (= i__1$main' __expr50))) (let ((__expr52 (and __expr51 __expr49))) (let ((__expr53 (and __expr15 __expr52))) (let ((__expr54 (and __expr17 __expr53))) (let ((__expr55 (and __expr35 __expr54))) (let ((__expr56 (and __expr37 __expr55))) (let ((__expr57 (and __expr24 __expr56))) (let ((__expr58 (and _PC.2 __expr3))) (let ((__expr59 (and __expr6 __expr58))) (let ((__expr60 (and __expr59 __expr57))) (let ((__expr61 (or __expr60 __expr47))) (let ((__expr62 (bvslt k__5$main n__7$main))) (let ((__expr63 (and __expr62 __expr48))) (let ((__expr64 (and __expr15 __expr63))) (let ((__expr65 (and __expr17 __expr64))) (let ((__expr66 (and __expr35 __expr65))) (let ((__expr67 (and __expr37 __expr66))) (let ((__expr68 (and __expr39 __expr67))) (let ((__expr69 (and _PC.2' __expr21))) (let ((__expr70 (and __expr23 __expr69))) (let ((__expr71 (and __expr70 __expr68))) (let ((__expr72 (and __expr59 __expr71))) (let ((__expr73 (or __expr72 __expr61))) (let ((__expr74 (not __expr62))) (let ((__expr75 (and __expr74 __expr48))) (let ((__expr76 (bvslt n__7$main k__5$main))) (let ((__expr77 (and __expr76 __expr75))) (let ((__expr78 (and __expr15 __expr77))) (let ((__expr79 (and __expr17 __expr78))) (let ((__expr80 (and __expr35 __expr79))) (let ((__expr81 (and __expr37 __expr80))) (let ((__expr82 (and __expr39 __expr81))) (let ((__expr83 (and _PC.1' __expr41))) (let ((__expr84 (and _PC.2' __expr83))) (let ((__expr85 (and __expr23 __expr84))) (let ((__expr86 (and __expr85 __expr82))) (let ((__expr87 (and __expr59 __expr86))) (let ((__expr88 (or __expr87 __expr73))) (let ((__expr89 (not __expr76))) (let ((__expr90 (and __expr89 __expr75))) (let ((__expr91 (bvadd #b00000000000000000000000000000001 j__3$main))) (let ((__expr92 (= j__3$main' __expr91))) (let ((__expr93 (and __expr92 __expr90))) (let ((__expr94 (and __expr17 __expr93))) (let ((__expr95 (and __expr35 __expr94))) (let ((__expr96 (and __expr37 __expr95))) (let ((__expr97 (and __expr39 __expr96))) (let ((__expr98 (and __expr44 __expr97))) (let ((__expr99 (and __expr98 __expr59))) (let ((__expr100 (or __expr99 __expr88))) (let ((__expr101 (and _PC.1 __expr1))) (let ((__expr102 (and _PC.2 __expr101))) (let ((__expr103 (and __expr6 __expr102))) (let ((__expr104 (and __expr15 __expr17))) (let ((__expr105 (and __expr35 __expr104))) (let ((__expr106 (and __expr37 __expr105))) (let ((__expr107 (and __expr106 __expr39))) (let ((__expr108 (and _PC.0' _PC.1'))) (let ((__expr109 (and __expr108 _PC.2'))) (let ((__expr110 (and __expr109 __expr23))) (let ((__expr111 (and __expr110 __expr107))) (let ((__expr112 (and __expr111 __expr103))) (let ((__expr113 (or __expr112 __expr100))) (let ((__expr114 (and _PC.2 __expr27))) (let ((__expr115 (and __expr6 __expr114))) (let ((__expr116 (and __expr111 __expr115))) (let ((__expr117 (or __expr116 __expr113))) (let ((__expr118 (and _PC.1 _PC.0))) (let ((__expr119 (and _PC.2 __expr118))) (let ((__expr120 (and __expr6 __expr119))) (let ((__expr121 (and __expr110 __expr120))) (let ((__expr122 (or __expr121 __expr117))) __expr122)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((|__NONDET_INLINE_INIT__6__6$main#0| (_ BitVec 32)) (|__NONDET_INLINE_INIT__8__7$main#1| (_ BitVec 32))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (_PC.3 Bool) (__RET__$main (_ BitVec 32)) (i__1$main (_ BitVec 32)) (j__3$main (_ BitVec 32)) (k__5$main (_ BitVec 32)) (n__7$main (_ BitVec 32))) 
   :local () 
   :reachable (rch_1 (not (let ((__expr118 (and _PC.1 _PC.0))) (let ((__expr119 (and _PC.2 __expr118))) (let ((__expr6 (not _PC.3))) (let ((__expr120 (and __expr6 __expr119))) (let ((__expr123 (not __expr120))) __expr123)))))))
   :query (qry_rch_1 (rch_1)))