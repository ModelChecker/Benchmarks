(set-logic QF_BV)
(define-system main 
   :input ((|__NONDET_INLINE_INIT__3__5$main#0| (_ BitVec 32)) (|__NONDET_INLINE_INIT__5__6$main#1| (_ BitVec 32))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (_PC.3 Bool) (__BLAST_NONDET__2$main (_ BitVec 32)) (__RET__$main (_ BitVec 32)) (fb__6$main (_ BitVec 32)) (fbuflen__4$main (_ BitVec 32))) 
   :local () 
   :init (let ((__expr1 (not _PC.2))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 _PC.0))) (let ((__expr4 (and __expr3 __expr1))) (let ((__expr5 (and __expr4 _PC.3))) __expr5))))) 
   :trans (let ((__expr6 (= __BLAST_NONDET__2$main' |__NONDET_INLINE_INIT__3__5$main#0|))) (let ((__expr7 (= fbuflen__4$main' |__NONDET_INLINE_INIT__5__6$main#1|))) (let ((__expr8 (and __expr7 __expr6))) (let ((__expr9 (bvslt #b00000000000000000000000000000000 fbuflen__4$main'))) (let ((__expr10 (and __expr9 __expr8))) (let ((__expr11 (= fb__6$main' #b00000000000000000000000000000000))) (let ((__expr12 (and __expr11 __expr10))) (let ((__expr13 (= __RET__$main' __RET__$main))) (let ((__expr14 (and __expr13 __expr12))) (let ((__expr15 (not _PC.0'))) (let ((__expr16 (and _PC.1' __expr15))) (let ((__expr17 (not _PC.2'))) (let ((__expr18 (and __expr17 __expr16))) (let ((__expr19 (and _PC.3' __expr18))) (let ((__expr20 (and __expr19 __expr14))) (let ((__expr1 (not _PC.2))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 _PC.0))) (let ((__expr4 (and __expr3 __expr1))) (let ((__expr5 (and __expr4 _PC.3))) (let ((__expr21 (and __expr5 __expr20))) (let ((__expr22 (bvslt #b00000000000000000000000000000000 fb__6$main))) (let ((__expr23 ((_ extract 31 31) fb__6$main))) (let ((__expr24 (= __expr23 #b1))) (let ((__expr25 (and __expr24 __expr22))) (let ((__expr26 (= __BLAST_NONDET__2$main' __BLAST_NONDET__2$main))) (let ((__expr27 (and __expr26 __expr25))) (let ((__expr28 (= fb__6$main' fb__6$main))) (let ((__expr29 (and __expr28 __expr27))) (let ((__expr30 (and __expr13 __expr29))) (let ((__expr31 (= fbuflen__4$main' fbuflen__4$main))) (let ((__expr32 (and __expr31 __expr30))) (let ((__expr33 (not _PC.1'))) (let ((__expr34 (and __expr33 __expr15))) (let ((__expr35 (and _PC.2' __expr34))) (let ((__expr36 (not _PC.3'))) (let ((__expr37 (and __expr36 __expr35))) (let ((__expr38 (and __expr37 __expr32))) (let ((__expr39 (not _PC.0))) (let ((__expr40 (and _PC.1 __expr39))) (let ((__expr41 (and __expr1 __expr40))) (let ((__expr42 (and _PC.3 __expr41))) (let ((__expr43 (and __expr42 __expr38))) (let ((__expr44 (or __expr43 __expr21))) (let ((__expr45 (bvslt fb__6$main fbuflen__4$main))) (let ((__expr46 (not __expr45))) (let ((__expr47 (not __expr24))) (let ((__expr48 (and __expr47 __expr22))) (let ((__expr49 (and __expr48 __expr46))) (let ((__expr50 (and __expr26 __expr49))) (let ((__expr51 (and __expr28 __expr50))) (let ((__expr52 (and __expr13 __expr51))) (let ((__expr53 (and __expr31 __expr52))) (let ((__expr54 (and __expr33 _PC.0'))) (let ((__expr55 (and _PC.2' __expr54))) (let ((__expr56 (and __expr55 __expr36))) (let ((__expr57 (and __expr56 __expr53))) (let ((__expr58 (and __expr57 __expr42))) (let ((__expr59 (or __expr58 __expr44))) (let ((__expr60 (and __expr3 _PC.2))) (let ((__expr61 (not _PC.3))) (let ((__expr62 (and __expr61 __expr60))) (let ((__expr63 (and __expr26 __expr28))) (let ((__expr64 (and __expr63 __expr13))) (let ((__expr65 (and __expr64 __expr31))) (let ((__expr66 (and __expr17 __expr34))) (let ((__expr67 (and __expr66 _PC.3'))) (let ((__expr68 (and __expr67 __expr65))) (let ((__expr69 (and __expr68 __expr62))) (let ((__expr70 (or __expr69 __expr59))) (let ((__expr71 (and __expr2 __expr39))) (let ((__expr72 (and _PC.2 __expr71))) (let ((__expr73 (and __expr72 __expr61))) (let ((__expr74 (and __expr68 __expr73))) (let ((__expr75 (or __expr74 __expr70))) (let ((__expr76 (and __expr1 __expr71))) (let ((__expr77 (and _PC.3 __expr76))) (let ((__expr78 (and __expr67 __expr77))) (let ((__expr79 (or __expr78 __expr75))) __expr79))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((|__NONDET_INLINE_INIT__3__5$main#0| (_ BitVec 32)) (|__NONDET_INLINE_INIT__5__6$main#1| (_ BitVec 32))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (_PC.3 Bool) (__BLAST_NONDET__2$main (_ BitVec 32)) (__RET__$main (_ BitVec 32)) (fb__6$main (_ BitVec 32)) (fbuflen__4$main (_ BitVec 32))) 
   :local () 
   :reachable (rch_1 (not (let ((__expr39 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr71 (and __expr2 __expr39))) (let ((__expr1 (not _PC.2))) (let ((__expr76 (and __expr1 __expr71))) (let ((__expr77 (and _PC.3 __expr76))) (let ((__expr80 (not __expr77))) __expr80)))))))))
   :query (qry_rch_1 (rch_1)))