(set-logic QF_BV)
(define-system main 
   :input ((|__NONDET_INLINE_INIT__10__10$main#1| (_ BitVec 32)) (|__NONDET_INLINE_INIT__12__11$main#2| (_ BitVec 32)) (|__NONDET_INLINE_INIT__8__9$main#0| (_ BitVec 32))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (_PC.3 Bool) (__RET__$main (_ BitVec 32)) (i__1$main (_ BitVec 32)) (j__3$main (_ BitVec 32)) (k__5$main (_ BitVec 32)) (l__9$main (_ BitVec 32)) (m__11$main (_ BitVec 32)) (n__7$main (_ BitVec 32))) 
   :local () 
   :init (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) (let ((__expr6 (not _PC.3))) (let ((__expr7 (and __expr6 __expr5))) __expr7))))))) 
   :trans (let ((__expr8 (= n__7$main' |__NONDET_INLINE_INIT__8__9$main#0|))) (let ((__expr9 (= l__9$main' |__NONDET_INLINE_INIT__10__10$main#1|))) (let ((__expr10 (and __expr9 __expr8))) (let ((__expr11 (= m__11$main' |__NONDET_INLINE_INIT__12__11$main#2|))) (let ((__expr12 (and __expr11 __expr10))) (let ((__expr13 (bvmul #b00000000000000000000000000000011 n__7$main'))) (let ((__expr14 (bvadd m__11$main' l__9$main'))) (let ((__expr15 (bvslt __expr14 __expr13))) (let ((__expr16 (not __expr15))) (let ((__expr17 (and __expr16 __expr12))) (let ((__expr18 (= i__1$main' #b00000000000000000000000000000000))) (let ((__expr19 (and __expr18 __expr17))) (let ((__expr20 (= j__3$main' j__3$main))) (let ((__expr21 (and __expr20 __expr19))) (let ((__expr22 (= __RET__$main __RET__$main'))) (let ((__expr23 (and __expr22 __expr21))) (let ((__expr24 (= k__5$main' k__5$main))) (let ((__expr25 (and __expr24 __expr23))) (let ((__expr26 (not _PC.2'))) (let ((__expr27 (not _PC.1'))) (let ((__expr28 (and _PC.0' __expr27))) (let ((__expr29 (and __expr28 __expr26))) (let ((__expr30 (not _PC.3'))) (let ((__expr31 (and __expr30 __expr29))) (let ((__expr32 (and __expr31 __expr25))) (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) (let ((__expr6 (not _PC.3))) (let ((__expr7 (and __expr6 __expr5))) (let ((__expr33 (and __expr7 __expr32))) (let ((__expr34 (and __expr2 _PC.0))) (let ((__expr35 (and __expr4 __expr34))) (let ((__expr36 (and __expr6 __expr35))) (let ((__expr37 (bvslt i__1$main n__7$main))) (let ((__expr38 (bvshl i__1$main #b00000000000000000000000000000001))) (let ((__expr39 (= j__3$main' __expr38))) (let ((__expr40 (and __expr39 __expr37))) (let ((__expr41 (and __expr22 __expr40))) (let ((__expr42 (and __expr24 __expr41))) (let ((__expr43 (= n__7$main' n__7$main))) (let ((__expr44 (and __expr43 __expr42))) (let ((__expr45 (= l__9$main' l__9$main))) (let ((__expr46 (and __expr45 __expr44))) (let ((__expr47 (= m__11$main' m__11$main))) (let ((__expr48 (and __expr47 __expr46))) (let ((__expr49 (= i__1$main' i__1$main))) (let ((__expr50 (and __expr49 __expr48))) (let ((__expr51 (not _PC.0'))) (let ((__expr52 (and __expr27 __expr51))) (let ((__expr53 (and _PC.2' __expr52))) (let ((__expr54 (and __expr30 __expr53))) (let ((__expr55 (and __expr54 __expr50))) (let ((__expr56 (and __expr55 __expr36))) (let ((__expr57 (or __expr56 __expr33))) (let ((__expr58 (bvmul #b00000000000000000000000000000011 i__1$main))) (let ((__expr59 (bvslt j__3$main __expr58))) (let ((__expr60 (not __expr59))) (let ((__expr61 (bvadd #b00000000000000000000000000000001 i__1$main))) (let ((__expr62 (= i__1$main' __expr61))) (let ((__expr63 (and __expr62 __expr60))) (let ((__expr64 (and __expr20 __expr63))) (let ((__expr65 (and __expr22 __expr64))) (let ((__expr66 (and __expr24 __expr65))) (let ((__expr67 (and __expr43 __expr66))) (let ((__expr68 (and __expr45 __expr67))) (let ((__expr69 (and __expr47 __expr68))) (let ((__expr70 (and __expr31 __expr69))) (let ((__expr71 (and _PC.2 __expr3))) (let ((__expr72 (and __expr6 __expr71))) (let ((__expr73 (and __expr72 __expr70))) (let ((__expr74 (or __expr73 __expr57))) (let ((__expr75 (= k__5$main' i__1$main))) (let ((__expr76 (and __expr75 __expr59))) (let ((__expr77 (and __expr20 __expr76))) (let ((__expr78 (and __expr22 __expr77))) (let ((__expr79 (and __expr43 __expr78))) (let ((__expr80 (and __expr45 __expr79))) (let ((__expr81 (and __expr47 __expr80))) (let ((__expr82 (and __expr49 __expr81))) (let ((__expr83 (and _PC.2' __expr28))) (let ((__expr84 (and __expr30 __expr83))) (let ((__expr85 (and __expr84 __expr82))) (let ((__expr86 (and __expr85 __expr72))) (let ((__expr87 (or __expr86 __expr74))) (let ((__expr88 (bvslt k__5$main j__3$main))) (let ((__expr89 (not __expr88))) (let ((__expr90 (bvadd #b00000000000000000000000000000001 j__3$main))) (let ((__expr91 (= j__3$main' __expr90))) (let ((__expr92 (and __expr91 __expr89))) (let ((__expr93 (and __expr22 __expr92))) (let ((__expr94 (and __expr24 __expr93))) (let ((__expr95 (and __expr43 __expr94))) (let ((__expr96 (and __expr45 __expr95))) (let ((__expr97 (and __expr47 __expr96))) (let ((__expr98 (and __expr49 __expr97))) (let ((__expr99 (and __expr54 __expr98))) (let ((__expr100 (and _PC.2 __expr34))) (let ((__expr101 (and __expr6 __expr100))) (let ((__expr102 (and __expr101 __expr99))) (let ((__expr103 (or __expr102 __expr87))) (let ((__expr104 (bvneg i__1$main))) (let ((__expr105 (bvadd k__5$main __expr104))) (let ((__expr106 (bvshl n__7$main #b00000000000000000000000000000001))) (let ((__expr107 (bvslt __expr106 __expr105))) (let ((__expr108 (and __expr107 __expr88))) (let ((__expr109 (and __expr20 __expr108))) (let ((__expr110 (and __expr22 __expr109))) (let ((__expr111 (and __expr24 __expr110))) (let ((__expr112 (and __expr43 __expr111))) (let ((__expr113 (and __expr45 __expr112))) (let ((__expr114 (and __expr47 __expr113))) (let ((__expr115 (and __expr49 __expr114))) (let ((__expr116 (and _PC.1' __expr51))) (let ((__expr117 (and _PC.2' __expr116))) (let ((__expr118 (and __expr30 __expr117))) (let ((__expr119 (and __expr118 __expr115))) (let ((__expr120 (and __expr101 __expr119))) (let ((__expr121 (or __expr120 __expr103))) (let ((__expr122 (not __expr107))) (let ((__expr123 (and __expr122 __expr88))) (let ((__expr124 (bvadd #b00000000000000000000000000000001 k__5$main))) (let ((__expr125 (= k__5$main' __expr124))) (let ((__expr126 (and __expr125 __expr123))) (let ((__expr127 (and __expr20 __expr126))) (let ((__expr128 (and __expr22 __expr127))) (let ((__expr129 (and __expr43 __expr128))) (let ((__expr130 (and __expr45 __expr129))) (let ((__expr131 (and __expr47 __expr130))) (let ((__expr132 (and __expr49 __expr131))) (let ((__expr133 (and __expr84 __expr132))) (let ((__expr134 (and __expr133 __expr101))) (let ((__expr135 (or __expr134 __expr121))) (let ((__expr136 (and _PC.1 __expr1))) (let ((__expr137 (and _PC.2 __expr136))) (let ((__expr138 (and __expr6 __expr137))) (let ((__expr139 (and __expr20 __expr22))) (let ((__expr140 (and __expr139 __expr24))) (let ((__expr141 (and __expr43 __expr140))) (let ((__expr142 (and __expr45 __expr141))) (let ((__expr143 (and __expr47 __expr142))) (let ((__expr144 (and __expr143 __expr49))) (let ((__expr145 (and _PC.0' _PC.1'))) (let ((__expr146 (and __expr145 _PC.2'))) (let ((__expr147 (and __expr146 __expr30))) (let ((__expr148 (and __expr147 __expr144))) (let ((__expr149 (and __expr148 __expr138))) (let ((__expr150 (or __expr149 __expr135))) (let ((__expr151 (and _PC.1 _PC.0))) (let ((__expr152 (and _PC.2 __expr151))) (let ((__expr153 (and __expr6 __expr152))) (let ((__expr154 (and __expr147 __expr153))) (let ((__expr155 (or __expr154 __expr150))) __expr155))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((|__NONDET_INLINE_INIT__10__10$main#1| (_ BitVec 32)) (|__NONDET_INLINE_INIT__12__11$main#2| (_ BitVec 32)) (|__NONDET_INLINE_INIT__8__9$main#0| (_ BitVec 32))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (_PC.3 Bool) (__RET__$main (_ BitVec 32)) (i__1$main (_ BitVec 32)) (j__3$main (_ BitVec 32)) (k__5$main (_ BitVec 32)) (l__9$main (_ BitVec 32)) (m__11$main (_ BitVec 32)) (n__7$main (_ BitVec 32))) 
   :local () 
   :reachable (rch_1 (not (let ((__expr151 (and _PC.1 _PC.0))) (let ((__expr152 (and _PC.2 __expr151))) (let ((__expr6 (not _PC.3))) (let ((__expr153 (and __expr6 __expr152))) (let ((__expr156 (not __expr153))) __expr156)))))))
   :query (qry_rch_1 (rch_1)))