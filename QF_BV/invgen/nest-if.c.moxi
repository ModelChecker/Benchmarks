(set-logic QF_BV)
(define-system main 
   :input ((|__NONDET_INLINE_INIT__6__5$main#0| (_ BitVec 32))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (_PC.3 Bool) (__RET__$main (_ BitVec 32)) (i__1$main (_ BitVec 32)) (k__3$main (_ BitVec 32)) (n__5$main (_ BitVec 32))) 
   :local () 
   :init (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) (let ((__expr6 (not _PC.3))) (let ((__expr7 (and __expr6 __expr5))) __expr7))))))) 
   :trans (let ((__expr8 (= n__5$main' |__NONDET_INLINE_INIT__6__5$main#0|))) (let ((__expr9 (= k__3$main' #b00000000000000000000000000000001))) (let ((__expr10 (and __expr9 __expr8))) (let ((__expr11 (= __RET__$main __RET__$main'))) (let ((__expr12 (and __expr11 __expr10))) (let ((__expr13 (= i__1$main' i__1$main))) (let ((__expr14 (and __expr13 __expr12))) (let ((__expr15 (not _PC.2'))) (let ((__expr16 (not _PC.1'))) (let ((__expr17 (and _PC.0' __expr16))) (let ((__expr18 (and __expr17 __expr15))) (let ((__expr19 (not _PC.3'))) (let ((__expr20 (and __expr19 __expr18))) (let ((__expr21 (and __expr20 __expr14))) (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) (let ((__expr6 (not _PC.3))) (let ((__expr7 (and __expr6 __expr5))) (let ((__expr22 (and __expr7 __expr21))) (let ((__expr23 (and __expr2 _PC.0))) (let ((__expr24 (and __expr4 __expr23))) (let ((__expr25 (and __expr6 __expr24))) (let ((__expr26 (bvslt k__3$main n__5$main))) (let ((__expr27 (= i__1$main' #b00000000000000000000000000000001))) (let ((__expr28 (and __expr27 __expr26))) (let ((__expr29 (and __expr11 __expr28))) (let ((__expr30 (= k__3$main k__3$main'))) (let ((__expr31 (and __expr30 __expr29))) (let ((__expr32 (= n__5$main' n__5$main))) (let ((__expr33 (and __expr32 __expr31))) (let ((__expr34 (and _PC.0' _PC.1'))) (let ((__expr35 (and __expr34 __expr15))) (let ((__expr36 (and __expr19 __expr35))) (let ((__expr37 (and __expr36 __expr33))) (let ((__expr38 (and __expr37 __expr25))) (let ((__expr39 (or __expr38 __expr22))) (let ((__expr40 (bvslt i__1$main n__5$main))) (let ((__expr41 (not __expr40))) (let ((__expr42 (and __expr11 __expr41))) (let ((__expr43 (and __expr13 __expr42))) (let ((__expr44 (and __expr30 __expr43))) (let ((__expr45 (and __expr32 __expr44))) (let ((__expr46 (and _PC.2' __expr17))) (let ((__expr47 (and __expr19 __expr46))) (let ((__expr48 (and __expr47 __expr45))) (let ((__expr49 (and _PC.1 _PC.0))) (let ((__expr50 (and __expr4 __expr49))) (let ((__expr51 (and __expr6 __expr50))) (let ((__expr52 (and __expr51 __expr48))) (let ((__expr53 (or __expr52 __expr39))) (let ((__expr54 (bvslt k__3$main #b00000000000000000000000000000001))) (let ((__expr55 (and __expr54 __expr40))) (let ((__expr56 (and __expr11 __expr55))) (let ((__expr57 (and __expr13 __expr56))) (let ((__expr58 (and __expr30 __expr57))) (let ((__expr59 (and __expr32 __expr58))) (let ((__expr60 (not _PC.0'))) (let ((__expr61 (and _PC.1' __expr60))) (let ((__expr62 (and _PC.2' __expr61))) (let ((__expr63 (and __expr19 __expr62))) (let ((__expr64 (and __expr63 __expr59))) (let ((__expr65 (and __expr51 __expr64))) (let ((__expr66 (or __expr65 __expr53))) (let ((__expr67 (not __expr54))) (let ((__expr68 (and __expr67 __expr40))) (let ((__expr69 (bvadd #b00000000000000000000000000000001 i__1$main))) (let ((__expr70 (= i__1$main' __expr69))) (let ((__expr71 (and __expr70 __expr68))) (let ((__expr72 (and __expr11 __expr71))) (let ((__expr73 (and __expr30 __expr72))) (let ((__expr74 (and __expr32 __expr73))) (let ((__expr75 (and __expr36 __expr74))) (let ((__expr76 (and __expr75 __expr51))) (let ((__expr77 (or __expr76 __expr66))) (let ((__expr78 (and _PC.1 __expr1))) (let ((__expr79 (and _PC.2 __expr78))) (let ((__expr80 (and __expr6 __expr79))) (let ((__expr81 (and __expr11 __expr13))) (let ((__expr82 (and __expr81 __expr30))) (let ((__expr83 (and __expr32 __expr82))) (let ((__expr84 (and __expr34 _PC.2'))) (let ((__expr85 (and __expr84 __expr19))) (let ((__expr86 (and __expr85 __expr83))) (let ((__expr87 (and __expr86 __expr80))) (let ((__expr88 (or __expr87 __expr77))) (let ((__expr89 (and _PC.2 __expr23))) (let ((__expr90 (and __expr6 __expr89))) (let ((__expr91 (bvadd #b00000000000000000000000000000001 k__3$main))) (let ((__expr92 (= __expr91 k__3$main'))) (let ((__expr93 (and __expr92 __expr11))) (let ((__expr94 (and __expr93 __expr13))) (let ((__expr95 (and __expr94 __expr32))) (let ((__expr96 (and __expr20 __expr95))) (let ((__expr97 (and __expr96 __expr90))) (let ((__expr98 (or __expr97 __expr88))) (let ((__expr99 (and _PC.2 __expr49))) (let ((__expr100 (and __expr6 __expr99))) (let ((__expr101 (and __expr85 __expr100))) (let ((__expr102 (or __expr101 __expr98))) __expr102)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((|__NONDET_INLINE_INIT__6__5$main#0| (_ BitVec 32))) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (_PC.3 Bool) (__RET__$main (_ BitVec 32)) (i__1$main (_ BitVec 32)) (k__3$main (_ BitVec 32)) (n__5$main (_ BitVec 32))) 
   :local () 
   :reachable (rch_1 (not (let ((__expr49 (and _PC.1 _PC.0))) (let ((__expr99 (and _PC.2 __expr49))) (let ((__expr6 (not _PC.3))) (let ((__expr100 (and __expr6 __expr99))) (let ((__expr103 (not __expr100))) __expr103)))))))
   :query (qry_rch_1 (rch_1)))