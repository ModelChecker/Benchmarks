(set-logic QF_LIA)
(define-system main 
   :input ((|__NONDET_INLINE_INIT__2__3$main#0| Int)) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__RET__$main Int) (i__5$main Int) (m__3$main Int) (n__1$main Int)) 
   :local () 
   :init (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) __expr5))))) 
   :trans (let ((__expr6 (= n__1$main' |__NONDET_INLINE_INIT__2__3$main#0|))) (let ((__expr7 (= i__5$main' 1))) (let ((__expr8 (and __expr7 __expr6))) (let ((__expr9 (= m__3$main' 10))) (let ((__expr10 (and __expr9 __expr8))) (let ((__expr11 (= __RET__$main __RET__$main'))) (let ((__expr12 (and __expr11 __expr10))) (let ((__expr13 (not _PC.2'))) (let ((__expr14 (not _PC.1'))) (let ((__expr15 (and __expr14 _PC.0'))) (let ((__expr16 (and __expr15 __expr13))) (let ((__expr17 (and __expr16 __expr12))) (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) (let ((__expr18 (and __expr5 __expr17))) (let ((__expr19 (<= i__5$main 0))) (let ((__expr20 (<= n__1$main i__5$main))) (let ((__expr21 (and __expr20 __expr19))) (let ((__expr22 (and __expr11 __expr21))) (let ((__expr23 (= m__3$main' m__3$main))) (let ((__expr24 (and __expr23 __expr22))) (let ((__expr25 (= n__1$main' n__1$main))) (let ((__expr26 (and __expr25 __expr24))) (let ((__expr27 (= i__5$main' i__5$main))) (let ((__expr28 (and __expr27 __expr26))) (let ((__expr29 (not _PC.0'))) (let ((__expr30 (and _PC.1' __expr29))) (let ((__expr31 (and __expr13 __expr30))) (let ((__expr32 (and __expr31 __expr28))) (let ((__expr33 (and __expr2 _PC.0))) (let ((__expr34 (and __expr4 __expr33))) (let ((__expr35 (and __expr34 __expr32))) (let ((__expr36 (or __expr35 __expr18))) (let ((__expr37 (not __expr20))) (let ((__expr38 (and __expr11 __expr37))) (let ((__expr39 (and __expr23 __expr38))) (let ((__expr40 (and __expr25 __expr39))) (let ((__expr41 (and __expr27 __expr40))) (let ((__expr42 (and __expr14 __expr29))) (let ((__expr43 (and _PC.2' __expr42))) (let ((__expr44 (and __expr43 __expr41))) (let ((__expr45 (and __expr44 __expr34))) (let ((__expr46 (or __expr45 __expr36))) (let ((__expr47 (<= m__3$main 0))) (let ((__expr48 (and __expr11 __expr47))) (let ((__expr49 (and __expr23 __expr48))) (let ((__expr50 (and __expr25 __expr49))) (let ((__expr51 (and __expr27 __expr50))) (let ((__expr52 (and __expr16 __expr51))) (let ((__expr53 (and _PC.2 __expr3))) (let ((__expr54 (and __expr53 __expr52))) (let ((__expr55 (or __expr54 __expr46))) (let ((__expr56 (* (- 1) m__3$main))) (let ((__expr57 (+ m__3$main' __expr56))) (let ((__expr58 (= __expr57 (- 1)))) (let ((__expr59 (not __expr47))) (let ((__expr60 (and __expr59 __expr58))) (let ((__expr61 (* (- 2) i__5$main))) (let ((__expr62 (+ i__5$main' __expr61))) (let ((__expr63 (= __expr62 0))) (let ((__expr64 (and __expr63 __expr60))) (let ((__expr65 (and __expr11 __expr64))) (let ((__expr66 (and __expr25 __expr65))) (let ((__expr67 (and __expr43 __expr66))) (let ((__expr68 (and __expr67 __expr53))) (let ((__expr69 (or __expr68 __expr55))) (let ((__expr70 (and _PC.1 __expr1))) (let ((__expr71 (and __expr4 __expr70))) (let ((__expr72 (and __expr23 __expr11))) (let ((__expr73 (and __expr72 __expr25))) (let ((__expr74 (and __expr73 __expr27))) (let ((__expr75 (and __expr15 _PC.2'))) (let ((__expr76 (and __expr75 __expr74))) (let ((__expr77 (and __expr76 __expr71))) (let ((__expr78 (or __expr77 __expr69))) (let ((__expr79 (and _PC.2 __expr33))) (let ((__expr80 (and __expr75 __expr79))) (let ((__expr81 (or __expr80 __expr78))) __expr81))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((|__NONDET_INLINE_INIT__2__3$main#0| Int)) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__RET__$main Int) (i__5$main Int) (m__3$main Int) (n__1$main Int)) 
   :local () 
   :reachable (rch_1 (not (let ((__expr2 (not _PC.1))) (let ((__expr33 (and __expr2 _PC.0))) (let ((__expr79 (and _PC.2 __expr33))) (let ((__expr82 (not __expr79))) __expr82))))))
   :query (qry_rch_1 (rch_1)))