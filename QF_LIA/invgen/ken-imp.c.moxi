(set-logic QF_LIA)
(define-system main 
   :input ((|__NONDET_INLINE_INIT__2__4$main#0| Int) (|__NONDET_INLINE_INIT__4__5$main#1| Int)) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__RET__$main Int) (i__1$main Int) (j__3$main Int) (x__5$main Int) (y__7$main Int)) 
   :local () 
   :init (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) __expr5))))) 
   :trans (let ((__expr6 (= i__1$main' |__NONDET_INLINE_INIT__2__4$main#0|))) (let ((__expr7 (= j__3$main' |__NONDET_INLINE_INIT__4__5$main#1|))) (let ((__expr8 (and __expr7 __expr6))) (let ((__expr9 (= x__5$main' i__1$main'))) (let ((__expr10 (and __expr9 __expr8))) (let ((__expr11 (= j__3$main' y__7$main'))) (let ((__expr12 (and __expr11 __expr10))) (let ((__expr13 (= __RET__$main __RET__$main'))) (let ((__expr14 (and __expr13 __expr12))) (let ((__expr15 (not _PC.2'))) (let ((__expr16 (not _PC.1'))) (let ((__expr17 (and __expr16 _PC.0'))) (let ((__expr18 (and __expr17 __expr15))) (let ((__expr19 (and __expr18 __expr14))) (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) (let ((__expr20 (and __expr5 __expr19))) (let ((__expr21 (and __expr2 _PC.0))) (let ((__expr22 (and __expr4 __expr21))) (let ((__expr23 (= i__1$main' i__1$main))) (let ((__expr24 (* (- 1) x__5$main'))) (let ((__expr25 (+ x__5$main __expr24))) (let ((__expr26 (= __expr25 1))) (let ((__expr27 (= x__5$main 0))) (let ((__expr28 (not __expr27))) (let ((__expr29 (and __expr28 __expr26))) (let ((__expr30 (* (- 1) y__7$main'))) (let ((__expr31 (+ y__7$main __expr30))) (let ((__expr32 (= __expr31 1))) (let ((__expr33 (and __expr32 __expr29))) (let ((__expr34 (= j__3$main' j__3$main))) (let ((__expr35 (and __expr34 __expr33))) (let ((__expr36 (and __expr35 __expr13))) (let ((__expr37 (and __expr36 __expr23))) (let ((__expr38 (and __expr18 __expr37))) (let ((__expr39 (and __expr38 __expr22))) (let ((__expr40 (or __expr39 __expr20))) __expr40)))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((|__NONDET_INLINE_INIT__2__4$main#0| Int) (|__NONDET_INLINE_INIT__4__5$main#1| Int)) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__RET__$main Int) (i__1$main Int) (j__3$main Int) (x__5$main Int) (y__7$main Int)) 
   :local () 
   :reachable (rch_1 (not (let ((__expr41 (and _PC.1 _PC.0))) (let ((__expr4 (not _PC.2))) (let ((__expr42 (and __expr4 __expr41))) (let ((__expr43 (not __expr42))) __expr43))))))
   :query (qry_rch_1 (rch_1)))