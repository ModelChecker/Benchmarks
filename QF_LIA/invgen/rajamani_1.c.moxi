(set-logic QF_LIA)
(define-system main 
   :input ((|__NONDET__11$main#0| Int) (|__NONDET__11$main#2| Int) (|__NONDET__12$main#3| Int) (|__NONDET__13$main#4| Int)) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__RET__$main Int) (w__8$main Int) (x__2$main Int) (y__4$main Int) (z__6$main Int)) 
   :local () 
   :init (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) __expr5))))) 
   :trans (let ((__expr6 (= x__2$main' 0))) (let ((__expr7 (= y__4$main' 0))) (let ((__expr8 (and __expr7 __expr6))) (let ((__expr9 (= z__6$main' 0))) (let ((__expr10 (and __expr9 __expr8))) (let ((__expr11 (= w__8$main' 0))) (let ((__expr12 (and __expr11 __expr10))) (let ((__expr13 (= __RET__$main' __RET__$main))) (let ((__expr14 (and __expr13 __expr12))) (let ((__expr15 (not _PC.2'))) (let ((__expr16 (not _PC.1'))) (let ((__expr17 (and __expr16 _PC.0'))) (let ((__expr18 (and __expr17 __expr15))) (let ((__expr19 (and __expr18 __expr14))) (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) (let ((__expr20 (and __expr5 __expr19))) (let ((__expr21 (= |__NONDET__11$main#0| 0))) (let ((__expr22 (<= 4 x__2$main))) (let ((__expr23 (and __expr22 __expr21))) (let ((__expr24 (<= 3 y__4$main))) (let ((__expr25 (not __expr24))) (let ((__expr26 (and __expr25 __expr23))) (let ((__expr27 (and __expr13 __expr26))) (let ((__expr28 (= z__6$main' z__6$main))) (let ((__expr29 (and __expr28 __expr27))) (let ((__expr30 (= x__2$main' x__2$main))) (let ((__expr31 (and __expr30 __expr29))) (let ((__expr32 (= w__8$main' w__8$main))) (let ((__expr33 (and __expr32 __expr31))) (let ((__expr34 (= y__4$main' y__4$main))) (let ((__expr35 (and __expr34 __expr33))) (let ((__expr36 (not _PC.0'))) (let ((__expr37 (and _PC.1' __expr36))) (let ((__expr38 (and __expr15 __expr37))) (let ((__expr39 (and __expr38 __expr35))) (let ((__expr40 (and __expr2 _PC.0))) (let ((__expr41 (and __expr4 __expr40))) (let ((__expr42 (and __expr41 __expr39))) (let ((__expr43 (or __expr42 __expr20))) (let ((__expr44 (= |__NONDET__12$main#3| 0))) (let ((__expr45 (not __expr44))) (let ((__expr46 (= |__NONDET__11$main#2| 0))) (let ((__expr47 (not __expr46))) (let ((__expr48 (and __expr47 __expr45))) (let ((__expr49 (* (- 1) x__2$main))) (let ((__expr50 (+ x__2$main' __expr49))) (let ((__expr51 (= __expr50 1))) (let ((__expr52 (and __expr51 __expr48))) (let ((__expr53 (* (- 1) y__4$main))) (let ((__expr54 (+ y__4$main' __expr53))) (let ((__expr55 (= __expr54 100))) (let ((__expr56 (and __expr55 __expr52))) (let ((__expr57 (= |__NONDET__13$main#4| 0))) (let ((__expr58 (not __expr57))) (let ((__expr59 (and __expr47 __expr44))) (let ((__expr60 (and __expr59 __expr58))) (let ((__expr61 (and __expr60 __expr22))) (let ((__expr62 (and __expr61 __expr51))) (let ((__expr63 (= __expr54 1))) (let ((__expr64 (and __expr63 __expr62))) (let ((__expr65 (not __expr22))) (let ((__expr66 (and __expr60 __expr65))) (let ((__expr67 (and __expr30 __expr66))) (let ((__expr68 (and __expr34 __expr67))) (let ((__expr69 (or __expr68 __expr64))) (let ((__expr70 (+ y__4$main' y__4$main))) (let ((__expr71 (= __expr70 0))) (let ((__expr72 (and __expr59 __expr57))) (let ((__expr73 (* 10 w__8$main))) (let ((__expr74 (+ __expr73 __expr53))) (let ((__expr75 (<= __expr74 (- 1)))) (let ((__expr76 (and __expr75 __expr72))) (let ((__expr77 (* (- 100) x__2$main))) (let ((__expr78 (+ z__6$main __expr77))) (let ((__expr79 (<= 0 __expr78))) (let ((__expr80 (and __expr79 __expr76))) (let ((__expr81 (and __expr80 __expr71))) (let ((__expr82 (not __expr79))) (let ((__expr83 (and __expr82 __expr76))) (let ((__expr84 (and __expr34 __expr83))) (let ((__expr85 (or __expr84 __expr81))) (let ((__expr86 (not __expr75))) (let ((__expr87 (and __expr86 __expr72))) (let ((__expr88 (and __expr34 __expr87))) (let ((__expr89 (or __expr88 __expr85))) (let ((__expr90 (and __expr30 __expr89))) (let ((__expr91 (or __expr90 __expr69))) (let ((__expr92 (or __expr91 __expr56))) (let ((__expr93 (* (- 1) w__8$main))) (let ((__expr94 (+ w__8$main' __expr93))) (let ((__expr95 (= __expr94 1))) (let ((__expr96 (and __expr95 __expr92))) (let ((__expr97 (* (- 1) z__6$main))) (let ((__expr98 (+ z__6$main' __expr97))) (let ((__expr99 (= __expr98 10))) (let ((__expr100 (and __expr99 __expr96))) (let ((__expr101 (and __expr13 __expr100))) (let ((__expr102 (and __expr18 __expr101))) (let ((__expr103 (and __expr102 __expr41))) (let ((__expr104 (or __expr103 __expr43))) (let ((__expr105 (and _PC.1 __expr1))) (let ((__expr106 (and __expr4 __expr105))) (let ((__expr107 (and __expr28 __expr13))) (let ((__expr108 (and __expr107 __expr30))) (let ((__expr109 (and __expr108 __expr32))) (let ((__expr110 (and __expr109 __expr34))) (let ((__expr111 (and __expr16 __expr36))) (let ((__expr112 (and __expr111 _PC.2'))) (let ((__expr113 (and __expr112 __expr110))) (let ((__expr114 (and __expr113 __expr106))) (let ((__expr115 (or __expr114 __expr104))) (let ((__expr116 (and _PC.2 __expr3))) (let ((__expr117 (and __expr112 __expr116))) (let ((__expr118 (or __expr117 __expr115))) __expr118)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((|__NONDET__11$main#0| Int) (|__NONDET__11$main#2| Int) (|__NONDET__12$main#3| Int) (|__NONDET__13$main#4| Int)) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__RET__$main Int) (w__8$main Int) (x__2$main Int) (y__4$main Int) (z__6$main Int)) 
   :local () 
   :reachable (rch_1 (not (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr116 (and _PC.2 __expr3))) (let ((__expr119 (not __expr116))) __expr119)))))))
   :query (qry_rch_1 (rch_1)))