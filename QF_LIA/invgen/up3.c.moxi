(set-logic QF_LIA)
(define-system main 
   :input ((__NONDET_INLINE_INIT__2__4_dollar_main#0 Int)) 
   :output ((_PC_dot_0 Bool) (_PC_dot_1 Bool) (_PC_dot_2 Bool) (__RET___dollar_main Int) (i__3_dollar_main Int) (j__7_dollar_main Int) (k__5_dollar_main Int) (n__1_dollar_main Int)) 
   :local () 
   :init (let ((__expr1 (not _PC_dot_0))) (let ((__expr2 (not _PC_dot_1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (and __expr3 _PC_dot_2))) __expr4)))) 
   :trans (let ((__expr5 (= n__1_dollar_main' __NONDET_INLINE_INIT__2__4_dollar_main#0))) (let ((__expr6 (= i__3_dollar_main' 0))) (let ((__expr7 (and __expr6 __expr5))) (let ((__expr8 (= k__5_dollar_main' 0))) (let ((__expr9 (and __expr8 __expr7))) (let ((__expr10 (= j__7_dollar_main j__7_dollar_main'))) (let ((__expr11 (and __expr10 __expr9))) (let ((__expr12 (= __RET___dollar_main __RET___dollar_main'))) (let ((__expr13 (and __expr12 __expr11))) (let ((__expr14 (not _PC_dot_0'))) (let ((__expr15 (not _PC_dot_1'))) (let ((__expr16 (and __expr15 __expr14))) (let ((__expr17 (not _PC_dot_2'))) (let ((__expr18 (and __expr17 __expr16))) (let ((__expr19 (and __expr18 __expr13))) (let ((__expr1 (not _PC_dot_0))) (let ((__expr2 (not _PC_dot_1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (and __expr3 _PC_dot_2))) (let ((__expr20 (and __expr4 __expr19))) (let ((__expr21 (= j__7_dollar_main' 0))) (let ((__expr22 (<= n__1_dollar_main i__3_dollar_main))) (let ((__expr23 (and __expr22 __expr21))) (let ((__expr24 (= i__3_dollar_main' i__3_dollar_main))) (let ((__expr25 (and __expr24 __expr23))) (let ((__expr26 (and __expr12 __expr25))) (let ((__expr27 (= k__5_dollar_main k__5_dollar_main'))) (let ((__expr28 (and __expr27 __expr26))) (let ((__expr29 (= n__1_dollar_main n__1_dollar_main'))) (let ((__expr30 (and __expr29 __expr28))) (let ((__expr31 (and __expr15 _PC_dot_0'))) (let ((__expr32 (and __expr31 __expr17))) (let ((__expr33 (and __expr32 __expr30))) (let ((__expr34 (not _PC_dot_2))) (let ((__expr35 (and __expr3 __expr34))) (let ((__expr36 (and __expr35 __expr33))) (let ((__expr37 (or __expr36 __expr20))) (let ((__expr38 (* (- 1) i__3_dollar_main))) (let ((__expr39 (+ i__3_dollar_main' __expr38))) (let ((__expr40 (= __expr39 2))) (let ((__expr41 (not __expr22))) (let ((__expr42 (and __expr41 __expr40))) (let ((__expr43 (* (- 1) k__5_dollar_main'))) (let ((__expr44 (+ k__5_dollar_main __expr43))) (let ((__expr45 (= __expr44 (- 1)))) (let ((__expr46 (and __expr45 __expr42))) (let ((__expr47 (and __expr10 __expr46))) (let ((__expr48 (and __expr12 __expr47))) (let ((__expr49 (and __expr29 __expr48))) (let ((__expr50 (and __expr18 __expr49))) (let ((__expr51 (and __expr50 __expr35))) (let ((__expr52 (or __expr51 __expr37))) (let ((__expr53 (and __expr2 _PC_dot_0))) (let ((__expr54 (and __expr53 __expr34))) (let ((__expr55 (* (- 1) j__7_dollar_main'))) (let ((__expr56 (+ j__7_dollar_main __expr55))) (let ((__expr57 (= __expr56 (- 2)))) (let ((__expr58 (<= n__1_dollar_main j__7_dollar_main))) (let ((__expr59 (not __expr58))) (let ((__expr60 (and __expr59 __expr57))) (let ((__expr61 (= __expr44 1))) (let ((__expr62 (and __expr61 __expr60))) (let ((__expr63 (and __expr24 __expr62))) (let ((__expr64 (and __expr63 __expr12))) (let ((__expr65 (and __expr64 __expr29))) (let ((__expr66 (and __expr32 __expr65))) (let ((__expr67 (and __expr66 __expr54))) (let ((__expr68 (or __expr67 __expr52))) __expr68)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((__NONDET_INLINE_INIT__2__4_dollar_main#0 Int)) 
   :output ((_PC_dot_0 Bool) (_PC_dot_1 Bool) (_PC_dot_2 Bool) (__RET___dollar_main Int) (i__3_dollar_main Int) (j__7_dollar_main Int) (k__5_dollar_main Int) (n__1_dollar_main Int)) 
   :local () 
   :reachable (rch_1 (not (let ((__expr69 (and _PC_dot_1 _PC_dot_0))) (let ((__expr34 (not _PC_dot_2))) (let ((__expr70 (and __expr34 __expr69))) (let ((__expr71 (not __expr70))) __expr71))))))
   :query (qry_rch_1 (rch_1)))