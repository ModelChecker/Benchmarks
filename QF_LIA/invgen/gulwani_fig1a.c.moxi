(set-logic QF_LIA)
(define-system main 
   :input ((__NONDET_INLINE_INIT__4__3_dollar_main#0 Int)) 
   :output ((_PC_dot_0 Bool) (_PC_dot_1 Bool) (_PC_dot_2 Bool) (__RET___dollar_main Int) (x__1_dollar_main Int) (y__3_dollar_main Int)) 
   :local () 
   :init (let ((__expr1 (not _PC_dot_0))) (let ((__expr2 (not _PC_dot_1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC_dot_2))) (let ((__expr5 (and __expr4 __expr3))) __expr5))))) 
   :trans (let ((__expr6 (= y__3_dollar_main' __NONDET_INLINE_INIT__4__3_dollar_main#0))) (let ((__expr7 (= x__1_dollar_main' (- 50)))) (let ((__expr8 (and __expr7 __expr6))) (let ((__expr9 (= __RET___dollar_main __RET___dollar_main'))) (let ((__expr10 (and __expr9 __expr8))) (let ((__expr11 (not _PC_dot_2'))) (let ((__expr12 (not _PC_dot_1'))) (let ((__expr13 (and __expr12 _PC_dot_0'))) (let ((__expr14 (and __expr13 __expr11))) (let ((__expr15 (and __expr14 __expr10))) (let ((__expr1 (not _PC_dot_0))) (let ((__expr2 (not _PC_dot_1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC_dot_2))) (let ((__expr5 (and __expr4 __expr3))) (let ((__expr16 (and __expr5 __expr15))) (let ((__expr17 (<= y__3_dollar_main 0))) (let ((__expr18 (<= 0 x__1_dollar_main))) (let ((__expr19 (and __expr18 __expr17))) (let ((__expr20 (= y__3_dollar_main' y__3_dollar_main))) (let ((__expr21 (and __expr20 __expr19))) (let ((__expr22 (and __expr9 __expr21))) (let ((__expr23 (= x__1_dollar_main' x__1_dollar_main))) (let ((__expr24 (and __expr23 __expr22))) (let ((__expr25 (not _PC_dot_0'))) (let ((__expr26 (and _PC_dot_1' __expr25))) (let ((__expr27 (and __expr11 __expr26))) (let ((__expr28 (and __expr27 __expr24))) (let ((__expr29 (and __expr2 _PC_dot_0))) (let ((__expr30 (and __expr4 __expr29))) (let ((__expr31 (and __expr30 __expr28))) (let ((__expr32 (or __expr31 __expr16))) (let ((__expr33 (* (- 1) x__1_dollar_main'))) (let ((__expr34 (+ __expr33 x__1_dollar_main))) (let ((__expr35 (+ y__3_dollar_main __expr34))) (let ((__expr36 (= __expr35 0))) (let ((__expr37 (not __expr18))) (let ((__expr38 (and __expr37 __expr36))) (let ((__expr39 (* (- 1) y__3_dollar_main))) (let ((__expr40 (+ y__3_dollar_main' __expr39))) (let ((__expr41 (= __expr40 1))) (let ((__expr42 (and __expr41 __expr38))) (let ((__expr43 (and __expr9 __expr42))) (let ((__expr44 (and __expr14 __expr43))) (let ((__expr45 (and __expr44 __expr30))) (let ((__expr46 (or __expr45 __expr32))) (let ((__expr47 (and _PC_dot_1 __expr1))) (let ((__expr48 (and __expr4 __expr47))) (let ((__expr49 (and __expr20 __expr9))) (let ((__expr50 (and __expr49 __expr23))) (let ((__expr51 (and __expr12 __expr25))) (let ((__expr52 (and __expr51 _PC_dot_2'))) (let ((__expr53 (and __expr52 __expr50))) (let ((__expr54 (and __expr53 __expr48))) (let ((__expr55 (or __expr54 __expr46))) (let ((__expr56 (and _PC_dot_2 __expr3))) (let ((__expr57 (and __expr52 __expr56))) (let ((__expr58 (or __expr57 __expr55))) __expr58)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((__NONDET_INLINE_INIT__4__3_dollar_main#0 Int)) 
   :output ((_PC_dot_0 Bool) (_PC_dot_1 Bool) (_PC_dot_2 Bool) (__RET___dollar_main Int) (x__1_dollar_main Int) (y__3_dollar_main Int)) 
   :local () 
   :reachable (rch_1 (not (let ((__expr1 (not _PC_dot_0))) (let ((__expr2 (not _PC_dot_1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr56 (and _PC_dot_2 __expr3))) (let ((__expr59 (not __expr56))) __expr59)))))))
   :query (qry_rch_1 (rch_1)))