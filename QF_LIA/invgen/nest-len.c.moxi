(set-logic QF_LIA)
(define-system main 
   :input ((|__NONDET_INLINE_INIT__6__5$main#0| Int)) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (_PC.3 Bool) (__RET__$main Int) (i__1$main Int) (k__3$main Int) (n__5$main Int)) 
   :local () 
   :init (let ((__expr1 (not _PC.3))) (let ((__expr2 (not _PC.2))) (let ((__expr3 (not _PC.0))) (let ((__expr4 (and __expr3 _PC.1))) (let ((__expr5 (and __expr4 __expr2))) (let ((__expr6 (and __expr5 __expr1))) __expr6)))))) 
   :trans (let ((__expr7 (= n__5$main' |__NONDET_INLINE_INIT__6__5$main#0|))) (let ((__expr8 (= k__3$main' 1))) (let ((__expr9 (and __expr8 __expr7))) (let ((__expr10 (= __RET__$main __RET__$main'))) (let ((__expr11 (and __expr10 __expr9))) (let ((__expr12 (= i__1$main' i__1$main))) (let ((__expr13 (and __expr12 __expr11))) (let ((__expr14 (and _PC.1' _PC.0'))) (let ((__expr15 (not _PC.2'))) (let ((__expr16 (and __expr15 __expr14))) (let ((__expr17 (not _PC.3'))) (let ((__expr18 (and __expr17 __expr16))) (let ((__expr19 (and __expr18 __expr13))) (let ((__expr1 (not _PC.3))) (let ((__expr2 (not _PC.2))) (let ((__expr3 (not _PC.0))) (let ((__expr4 (and __expr3 _PC.1))) (let ((__expr5 (and __expr4 __expr2))) (let ((__expr6 (and __expr5 __expr1))) (let ((__expr20 (and __expr6 __expr19))) (let ((__expr21 (<= 1 k__3$main))) (let ((__expr22 (not __expr21))) (let ((__expr23 (<= n__5$main k__3$main))) (let ((__expr24 (not __expr23))) (let ((__expr25 (and __expr24 __expr22))) (let ((__expr26 (and __expr10 __expr25))) (let ((__expr27 (and __expr12 __expr26))) (let ((__expr28 (= k__3$main' k__3$main))) (let ((__expr29 (and __expr28 __expr27))) (let ((__expr30 (= n__5$main' n__5$main))) (let ((__expr31 (and __expr30 __expr29))) (let ((__expr32 (not _PC.1'))) (let ((__expr33 (and __expr32 _PC.0'))) (let ((__expr34 (and __expr33 _PC.2'))) (let ((__expr35 (and __expr17 __expr34))) (let ((__expr36 (and __expr35 __expr31))) (let ((__expr37 (and _PC.0 _PC.1))) (let ((__expr38 (and __expr2 __expr37))) (let ((__expr39 (and __expr1 __expr38))) (let ((__expr40 (and __expr39 __expr36))) (let ((__expr41 (or __expr40 __expr20))) (let ((__expr42 (and __expr24 __expr21))) (let ((__expr43 (= i__1$main' 1))) (let ((__expr44 (and __expr43 __expr42))) (let ((__expr45 (and __expr10 __expr44))) (let ((__expr46 (and __expr28 __expr45))) (let ((__expr47 (and __expr30 __expr46))) (let ((__expr48 (not _PC.0'))) (let ((__expr49 (and _PC.1' __expr48))) (let ((__expr50 (and _PC.2' __expr49))) (let ((__expr51 (and __expr17 __expr50))) (let ((__expr52 (and __expr51 __expr47))) (let ((__expr53 (and __expr52 __expr39))) (let ((__expr54 (or __expr53 __expr41))) (let ((__expr55 (and _PC.2' __expr14))) (let ((__expr56 (and __expr17 __expr55))) (let ((__expr57 (<= n__5$main i__1$main))) (let ((__expr58 (and __expr57 __expr43))) (let ((__expr59 (and __expr10 __expr58))) (let ((__expr60 (and __expr28 __expr59))) (let ((__expr61 (and __expr30 __expr60))) (let ((__expr62 (and __expr61 __expr56))) (let ((__expr63 (and __expr4 _PC.2))) (let ((__expr64 (and __expr1 __expr63))) (let ((__expr65 (and __expr64 __expr62))) (let ((__expr66 (or __expr65 __expr54))) (let ((__expr67 (* (- 1) i__1$main))) (let ((__expr68 (+ i__1$main' __expr67))) (let ((__expr69 (= __expr68 1))) (let ((__expr70 (not __expr57))) (let ((__expr71 (and __expr70 __expr69))) (let ((__expr72 (and __expr10 __expr71))) (let ((__expr73 (and __expr28 __expr72))) (let ((__expr74 (and __expr30 __expr73))) (let ((__expr75 (and __expr74 __expr51))) (let ((__expr76 (and __expr75 __expr64))) (let ((__expr77 (or __expr76 __expr66))) (let ((__expr78 (and __expr32 __expr48))) (let ((__expr79 (and __expr15 __expr78))) (let ((__expr80 (and _PC.3' __expr79))) (let ((__expr81 (and __expr61 __expr80))) (let ((__expr82 (and _PC.2 __expr37))) (let ((__expr83 (and __expr1 __expr82))) (let ((__expr84 (and __expr83 __expr81))) (let ((__expr85 (or __expr84 __expr77))) (let ((__expr86 (and __expr74 __expr56))) (let ((__expr87 (and __expr86 __expr83))) (let ((__expr88 (or __expr87 __expr85))) (let ((__expr89 (and __expr33 __expr15))) (let ((__expr90 (and __expr89 _PC.3'))) (let ((__expr91 (and __expr61 __expr90))) (let ((__expr92 (not _PC.1))) (let ((__expr93 (and __expr3 __expr92))) (let ((__expr94 (and __expr2 __expr93))) (let ((__expr95 (and _PC.3 __expr94))) (let ((__expr96 (and __expr95 __expr91))) (let ((__expr97 (or __expr96 __expr88))) (let ((__expr98 (and __expr74 __expr80))) (let ((__expr99 (and __expr98 __expr95))) (let ((__expr100 (or __expr99 __expr97))) (let ((__expr101 (and __expr15 __expr49))) (let ((__expr102 (and _PC.3' __expr101))) (let ((__expr103 (and __expr61 __expr102))) (let ((__expr104 (and _PC.0 __expr92))) (let ((__expr105 (and __expr2 __expr104))) (let ((__expr106 (and _PC.3 __expr105))) (let ((__expr107 (and __expr106 __expr103))) (let ((__expr108 (or __expr107 __expr100))) (let ((__expr109 (and __expr74 __expr90))) (let ((__expr110 (and __expr109 __expr106))) (let ((__expr111 (or __expr110 __expr108))) (let ((__expr112 (and _PC.3' __expr16))) (let ((__expr113 (and __expr112 __expr61))) (let ((__expr114 (and __expr5 _PC.3))) (let ((__expr115 (and __expr114 __expr113))) (let ((__expr116 (or __expr115 __expr111))) (let ((__expr117 (and __expr74 __expr102))) (let ((__expr118 (and __expr117 __expr114))) (let ((__expr119 (or __expr118 __expr116))) (let ((__expr120 (and __expr17 __expr79))) (let ((__expr121 (and __expr120 __expr61))) (let ((__expr122 (and _PC.3 __expr38))) (let ((__expr123 (and __expr122 __expr121))) (let ((__expr124 (or __expr123 __expr119))) (let ((__expr125 (and __expr74 __expr112))) (let ((__expr126 (and __expr125 __expr122))) (let ((__expr127 (or __expr126 __expr124))) (let ((__expr128 (* (- 1) k__3$main))) (let ((__expr129 (+ k__3$main' __expr128))) (let ((__expr130 (= __expr129 1))) (let ((__expr131 (and __expr57 __expr130))) (let ((__expr132 (and __expr10 __expr131))) (let ((__expr133 (and __expr12 __expr132))) (let ((__expr134 (and __expr30 __expr133))) (let ((__expr135 (and __expr18 __expr134))) (let ((__expr136 (and __expr1 __expr94))) (let ((__expr137 (and __expr136 __expr135))) (let ((__expr138 (or __expr137 __expr127))) (let ((__expr139 (and __expr120 __expr74))) (let ((__expr140 (and __expr139 __expr136))) (let ((__expr141 (or __expr140 __expr138))) (let ((__expr142 (and _PC.2 __expr104))) (let ((__expr143 (and __expr1 __expr142))) (let ((__expr144 (and __expr12 __expr10))) (let ((__expr145 (and __expr144 __expr28))) (let ((__expr146 (and __expr145 __expr30))) (let ((__expr147 (and __expr89 __expr17))) (let ((__expr148 (and __expr147 __expr146))) (let ((__expr149 (and __expr148 __expr143))) (let ((__expr150 (or __expr149 __expr141))) (let ((__expr151 (and __expr1 __expr105))) (let ((__expr152 (and __expr147 __expr151))) (let ((__expr153 (or __expr152 __expr150))) __expr153))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((|__NONDET_INLINE_INIT__6__5$main#0| Int)) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (_PC.3 Bool) (__RET__$main Int) (i__1$main Int) (k__3$main Int) (n__5$main Int)) 
   :local () 
   :reachable (rch_1 (not (let ((__expr92 (not _PC.1))) (let ((__expr104 (and _PC.0 __expr92))) (let ((__expr2 (not _PC.2))) (let ((__expr105 (and __expr2 __expr104))) (let ((__expr1 (not _PC.3))) (let ((__expr151 (and __expr1 __expr105))) (let ((__expr154 (not __expr151))) __expr154)))))))))
   :query (qry_rch_1 (rch_1)))