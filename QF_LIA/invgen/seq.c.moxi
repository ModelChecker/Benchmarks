(set-logic QF_LIA)
(define-system main 
   :input ((|__NONDET_INLINE_INIT__2__6$main#0| Int) (|__NONDET_INLINE_INIT__4__7$main#1| Int)) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__RET__$main Int) (i0__5$main Int) (i1__9$main Int) (j1__11$main Int) (k__7$main Int) (n0__1$main Int) (n1__3$main Int)) 
   :local () 
   :init (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) __expr5))))) 
   :trans (let ((__expr6 (= n0__1$main' |__NONDET_INLINE_INIT__2__6$main#0|))) (let ((__expr7 (= n1__3$main' |__NONDET_INLINE_INIT__4__7$main#1|))) (let ((__expr8 (and __expr7 __expr6))) (let ((__expr9 (= i0__5$main' 0))) (let ((__expr10 (and __expr9 __expr8))) (let ((__expr11 (= k__7$main' 0))) (let ((__expr12 (and __expr11 __expr10))) (let ((__expr13 (= i1__9$main' i1__9$main))) (let ((__expr14 (and __expr13 __expr12))) (let ((__expr15 (= __RET__$main __RET__$main'))) (let ((__expr16 (and __expr15 __expr14))) (let ((__expr17 (= j1__11$main j1__11$main'))) (let ((__expr18 (and __expr17 __expr16))) (let ((__expr19 (not _PC.1'))) (let ((__expr20 (and _PC.0' __expr19))) (let ((__expr21 (not _PC.2'))) (let ((__expr22 (and __expr21 __expr20))) (let ((__expr23 (and __expr22 __expr18))) (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) (let ((__expr24 (and __expr5 __expr23))) (let ((__expr25 (= i1__9$main' 0))) (let ((__expr26 (<= n0__1$main i0__5$main))) (let ((__expr27 (and __expr26 __expr25))) (let ((__expr28 (= k__7$main k__7$main'))) (let ((__expr29 (and __expr28 __expr27))) (let ((__expr30 (= n0__1$main' n0__1$main))) (let ((__expr31 (and __expr30 __expr29))) (let ((__expr32 (= i0__5$main' i0__5$main))) (let ((__expr33 (and __expr32 __expr31))) (let ((__expr34 (and __expr15 __expr33))) (let ((__expr35 (= n1__3$main n1__3$main'))) (let ((__expr36 (and __expr35 __expr34))) (let ((__expr37 (and __expr17 __expr36))) (let ((__expr38 (not _PC.0'))) (let ((__expr39 (and _PC.1' __expr38))) (let ((__expr40 (and __expr21 __expr39))) (let ((__expr41 (and __expr40 __expr37))) (let ((__expr42 (and __expr2 _PC.0))) (let ((__expr43 (and __expr4 __expr42))) (let ((__expr44 (and __expr43 __expr41))) (let ((__expr45 (or __expr44 __expr24))) (let ((__expr46 (* (- 1) i0__5$main))) (let ((__expr47 (+ i0__5$main' __expr46))) (let ((__expr48 (= __expr47 1))) (let ((__expr49 (not __expr26))) (let ((__expr50 (and __expr49 __expr48))) (let ((__expr51 (* (- 1) k__7$main'))) (let ((__expr52 (+ k__7$main __expr51))) (let ((__expr53 (= __expr52 (- 1)))) (let ((__expr54 (and __expr53 __expr50))) (let ((__expr55 (and __expr30 __expr54))) (let ((__expr56 (and __expr13 __expr55))) (let ((__expr57 (and __expr15 __expr56))) (let ((__expr58 (and __expr35 __expr57))) (let ((__expr59 (and __expr17 __expr58))) (let ((__expr60 (and __expr22 __expr59))) (let ((__expr61 (and __expr60 __expr43))) (let ((__expr62 (or __expr61 __expr45))) (let ((__expr63 (= j1__11$main' 0))) (let ((__expr64 (<= n1__3$main i1__9$main))) (let ((__expr65 (and __expr64 __expr63))) (let ((__expr66 (and __expr28 __expr65))) (let ((__expr67 (and __expr30 __expr66))) (let ((__expr68 (and __expr32 __expr67))) (let ((__expr69 (and __expr13 __expr68))) (let ((__expr70 (and __expr15 __expr69))) (let ((__expr71 (and __expr35 __expr70))) (let ((__expr72 (and _PC.0' _PC.1'))) (let ((__expr73 (and __expr72 __expr21))) (let ((__expr74 (and __expr73 __expr71))) (let ((__expr75 (and _PC.1 __expr1))) (let ((__expr76 (and __expr4 __expr75))) (let ((__expr77 (and __expr76 __expr74))) (let ((__expr78 (or __expr77 __expr62))) (let ((__expr79 (* (- 1) i1__9$main))) (let ((__expr80 (+ i1__9$main' __expr79))) (let ((__expr81 (= __expr80 1))) (let ((__expr82 (not __expr64))) (let ((__expr83 (and __expr82 __expr81))) (let ((__expr84 (and __expr83 __expr53))) (let ((__expr85 (and __expr30 __expr84))) (let ((__expr86 (and __expr32 __expr85))) (let ((__expr87 (and __expr15 __expr86))) (let ((__expr88 (and __expr35 __expr87))) (let ((__expr89 (and __expr88 __expr17))) (let ((__expr90 (and __expr40 __expr89))) (let ((__expr91 (and __expr90 __expr76))) (let ((__expr92 (or __expr91 __expr78))) (let ((__expr93 (and _PC.1 _PC.0))) (let ((__expr94 (and __expr4 __expr93))) (let ((__expr95 (* (- 1) j1__11$main'))) (let ((__expr96 (+ j1__11$main __expr95))) (let ((__expr97 (= __expr96 (- 1)))) (let ((__expr98 (* (- 1) j1__11$main))) (let ((__expr99 (+ __expr98 n1__3$main))) (let ((__expr100 (+ n0__1$main __expr99))) (let ((__expr101 (<= __expr100 0))) (let ((__expr102 (not __expr101))) (let ((__expr103 (and __expr102 __expr97))) (let ((__expr104 (= __expr52 1))) (let ((__expr105 (and __expr104 __expr103))) (let ((__expr106 (and __expr30 __expr105))) (let ((__expr107 (and __expr106 __expr32))) (let ((__expr108 (and __expr107 __expr13))) (let ((__expr109 (and __expr108 __expr15))) (let ((__expr110 (and __expr109 __expr35))) (let ((__expr111 (and __expr73 __expr110))) (let ((__expr112 (and __expr111 __expr94))) (let ((__expr113 (or __expr112 __expr92))) __expr113))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((|__NONDET_INLINE_INIT__2__6$main#0| Int) (|__NONDET_INLINE_INIT__4__7$main#1| Int)) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__RET__$main Int) (i0__5$main Int) (i1__9$main Int) (j1__11$main Int) (k__7$main Int) (n0__1$main Int) (n1__3$main Int)) 
   :local () 
   :reachable (rch_1 (not (let ((__expr2 (not _PC.1))) (let ((__expr42 (and __expr2 _PC.0))) (let ((__expr114 (and _PC.2 __expr42))) (let ((__expr115 (not __expr114))) __expr115))))))
   :query (qry_rch_1 (rch_1)))