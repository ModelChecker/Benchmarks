(set-logic QF_LIA)
(define-system main 
   :input ((|__NONDET_INLINE_INIT__3__5$main#0| Int) (|__NONDET_INLINE_INIT__3__5$main#1| Int)) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__RET__$main Int) (out__6$main Int) (outfilelen__2$main Int)) 
   :local () 
   :init (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) __expr5))))) 
   :trans (let ((__expr6 (= outfilelen__2$main' |__NONDET_INLINE_INIT__3__5$main#0|))) (let ((__expr7 (= out__6$main' 0))) (let ((__expr8 (and __expr7 __expr6))) (let ((__expr9 (<= outfilelen__2$main' 0))) (let ((__expr10 (not __expr9))) (let ((__expr11 (and __expr10 __expr8))) (let ((__expr12 (<= 0 out__6$main'))) (let ((__expr13 (not __expr12))) (let ((__expr14 (and __expr13 __expr11))) (let ((__expr15 (= __RET__$main' __RET__$main))) (let ((__expr16 (and __expr15 __expr14))) (let ((__expr17 (not _PC.1'))) (let ((__expr18 (and __expr17 _PC.0'))) (let ((__expr19 (not _PC.2'))) (let ((__expr20 (and __expr19 __expr18))) (let ((__expr21 (and __expr20 __expr16))) (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr4 (not _PC.2))) (let ((__expr5 (and __expr4 __expr3))) (let ((__expr22 (and __expr5 __expr21))) (let ((__expr23 (<= outfilelen__2$main' out__6$main'))) (let ((__expr24 (= outfilelen__2$main' |__NONDET_INLINE_INIT__3__5$main#1|))) (let ((__expr25 (and __expr24 __expr7))) (let ((__expr26 (and __expr25 __expr10))) (let ((__expr27 (and __expr26 __expr12))) (let ((__expr28 (and __expr27 __expr23))) (let ((__expr29 (and __expr15 __expr28))) (let ((__expr30 (not _PC.0'))) (let ((__expr31 (and _PC.1' __expr30))) (let ((__expr32 (and __expr31 __expr19))) (let ((__expr33 (and __expr32 __expr29))) (let ((__expr34 (and __expr5 __expr33))) (let ((__expr35 (or __expr34 __expr22))) (let ((__expr36 (and _PC.1 __expr1))) (let ((__expr37 (and __expr4 __expr36))) (let ((__expr38 (= outfilelen__2$main' outfilelen__2$main))) (let ((__expr39 (= out__6$main' out__6$main))) (let ((__expr40 (and __expr39 __expr38))) (let ((__expr41 (and __expr40 __expr15))) (let ((__expr42 (and __expr17 __expr30))) (let ((__expr43 (and __expr42 _PC.2'))) (let ((__expr44 (and __expr43 __expr41))) (let ((__expr45 (and __expr44 __expr37))) (let ((__expr46 (or __expr45 __expr35))) (let ((__expr47 (and __expr2 _PC.0))) (let ((__expr48 (and __expr4 __expr47))) (let ((__expr49 (and __expr44 __expr48))) (let ((__expr50 (or __expr49 __expr46))) (let ((__expr51 (and _PC.2 __expr3))) (let ((__expr52 (and __expr43 __expr51))) (let ((__expr53 (or __expr52 __expr50))) __expr53))))))))))))))))))))))))))))))))))))))))))))))))))))) 
   :inv true )
(check-system main 
   :input ((|__NONDET_INLINE_INIT__3__5$main#0| Int) (|__NONDET_INLINE_INIT__3__5$main#1| Int)) 
   :output ((_PC.0 Bool) (_PC.1 Bool) (_PC.2 Bool) (__RET__$main Int) (out__6$main Int) (outfilelen__2$main Int)) 
   :local () 
   :reachable (rch_1 (not (let ((__expr1 (not _PC.0))) (let ((__expr2 (not _PC.1))) (let ((__expr3 (and __expr2 __expr1))) (let ((__expr51 (and _PC.2 __expr3))) (let ((__expr54 (not __expr51))) __expr54)))))))
   :query (qry_rch_1 (rch_1)))