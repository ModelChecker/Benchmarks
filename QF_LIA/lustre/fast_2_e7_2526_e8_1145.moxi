(set-logic QF_LIA)
(define-system PosEdge 
   :input ((_X_ Bool)) 
   :output ((_Y_ Bool) (flby Bool)) 
   :local () 
   :init (= flby false) 
   :trans (= flby' (and _X_' (not _X_))) 
   :inv (= _Y_ flby) )
(define-system one_button 
   :input ((ccseti Bool) (ccsetd Bool) (ccr Bool)) 
   :output ((ob Bool)) 
   :local () 
   :init true 
   :trans true 
   :inv (= ob (or (or (and (and ccseti (not ccsetd)) (not ccr)) (and (and (not ccseti) ccsetd) (not ccr))) (and (and (not ccseti) (not ccsetd)) ccr))) )
(define-system AtLeastOnceSince 
   :input ((_X_ Bool) (_Y_ Bool)) 
   :output ((XsinceY Bool) (flby Bool) (ite Bool)) 
   :local () 
   :init (= flby true) 
   :trans (= flby' (or _X_' XsinceY)) 
   :inv (and (and (=> _Y_ (= ite _X_)) (=> (not _Y_) (= ite flby))) (= XsinceY ite)) )
(define-system prev_no_button 
   :input ((ccseti Bool) (ccsetd Bool) (ccr Bool)) 
   :output ((pnb Bool) (flby Bool)) 
   :local () 
   :init (= flby true) 
   :trans (= flby' (and (and (not ccseti) (not ccsetd)) (not ccr))) 
   :inv (= pnb flby) )
(define-system one_button_accept 
   :input ((ccseti Bool) (ccsetd Bool) (ccr Bool) (ccont Bool) (cca Bool)) 
   :output ((oba Bool) (ob Bool) (pnb Bool) (ite Bool) (ite2 Bool)) 
   :local ((call_prev_no_button.ccseti Bool) (call_prev_no_button.ccsetd Bool) (call_prev_no_button.ccr Bool) (call_prev_no_button.pnb Bool) (call_prev_no_button.flby Bool) (call_one_button.ccseti Bool) (call_one_button.ccsetd Bool) (call_one_button.ccr Bool) (call_one_button.ob Bool) (call_PosEdge._X_ Bool) (call_PosEdge._Y_ Bool) (call_PosEdge.flby Bool) (call_AtLeastOnceSince._X_ Bool) (call_AtLeastOnceSince._Y_ Bool) (call_AtLeastOnceSince.XsinceY Bool) (call_AtLeastOnceSince.flby Bool) (call_AtLeastOnceSince.ite Bool)) 
   :init true 
   :trans true 
   :inv (and (and (and (=> (not ccr) (= ite true)) (=> (not (not ccr)) (= ite call_AtLeastOnceSince.XsinceY))) (and (=> (and pnb ob) (= ite2 ite)) (=> (not (and pnb ob)) (= ite2 false)))) (= oba ite2) (= ob call_one_button.ob) (= pnb call_prev_no_button.pnb) (= call_prev_no_button.ccseti ccseti) (= call_prev_no_button.ccsetd ccsetd) (= call_prev_no_button.ccr ccr) (= call_one_button.ccseti ccseti) (= call_one_button.ccsetd ccsetd) (= call_one_button.ccr ccr) (= call_PosEdge._X_ ccont) (= call_AtLeastOnceSince._X_ cca) (= call_AtLeastOnceSince._Y_ call_PosEdge._Y_)) 
   :subsys (call_prev_no_button (prev_no_button call_prev_no_button.ccseti call_prev_no_button.ccsetd call_prev_no_button.ccr call_prev_no_button.pnb call_prev_no_button.flby))
   :subsys (call_one_button (one_button call_one_button.ccseti call_one_button.ccsetd call_one_button.ccr call_one_button.ob))
   :subsys (call_PosEdge (PosEdge call_PosEdge._X_ call_PosEdge._Y_ call_PosEdge.flby))
   :subsys (call_AtLeastOnceSince (AtLeastOnceSince call_AtLeastOnceSince._X_ call_AtLeastOnceSince._Y_ call_AtLeastOnceSince.XsinceY call_AtLeastOnceSince.flby call_AtLeastOnceSince.ite)))
(define-system Edge 
   :input ((_X_ Bool)) 
   :output ((_Y_ Bool) (flby Bool)) 
   :local () 
   :init (= flby false) 
   :trans (= flby' (or (and _X_' (not _X_)) (and (not _X_') _X_))) 
   :inv (= _Y_ flby) )
(define-system MoreThanTwoSec 
   :input ((_X_ Bool)) 
   :output ((_Y_ Bool) (flby Bool) (flby2 Bool)) 
   :local () 
   :init (and (= flby false) (= flby2 false)) 
   :trans (and (= flby' (and _X_ _X_')) (= flby2' (and flby _X_'))) 
   :inv (= _Y_ flby2) )
(define-system MoreThanOneSec 
   :input ((_X_ Bool)) 
   :output ((_Y_ Bool) (flby Bool)) 
   :local () 
   :init (= flby false) 
   :trans (= flby' (and _X_ _X_')) 
   :inv (= _Y_ flby) )
(define-system cc_allowed 
   :input ((ccont Bool) (igsw Bool) (bpa Bool) (cccanc Bool) (battok Bool) (gearok Bool) (qfok Bool) (sdok Bool) (accok Bool) (vs Int)) 
   :output ((ccall Bool)) 
   :local ((call_MoreThanOneSec._X_ Bool) (call_MoreThanOneSec._Y_ Bool) (call_MoreThanOneSec.flby Bool) (call_MoreThanTwoSec._X_ Bool) (call_MoreThanTwoSec._Y_ Bool) (call_MoreThanTwoSec.flby Bool) (call_MoreThanTwoSec.flby2 Bool)) 
   :init true 
   :trans true 
   :inv (and (= ccall (and (and (and (and (and (and (and (and (and ccont (not bpa)) battok) gearok) qfok) call_MoreThanOneSec._Y_) (<= 35 vs)) (<= vs 200)) call_MoreThanTwoSec._Y_) (not cccanc))) (= call_MoreThanOneSec._X_ sdok) (= call_MoreThanTwoSec._X_ accok)) 
   :subsys (call_MoreThanOneSec (MoreThanOneSec call_MoreThanOneSec._X_ call_MoreThanOneSec._Y_ call_MoreThanOneSec.flby))
   :subsys (call_MoreThanTwoSec (MoreThanTwoSec call_MoreThanTwoSec._X_ call_MoreThanTwoSec._Y_ call_MoreThanTwoSec.flby call_MoreThanTwoSec.flby2)))
(define-system _main_ 
   :input ((igsw Bool) (ccd Bool) (cconoff Bool) (bpa Bool) (cccanc Bool) (battok Bool) (gearok Bool) (qfok Bool) (sdok Bool) (accok Bool) (ccseti Bool) (ccsetd Bool) (ccr Bool) (vs Int)) 
   :output ((ccont Bool) (cca Bool) (ccall Bool) (ite Bool) (ite2 Bool) (flby Bool) (param Bool) (ite3 Bool) (ite4 Bool) (flby2 Bool)) 
   :local ((call_Edge._X_ Bool) (call_Edge._Y_ Bool) (call_Edge.flby Bool) (call_PosEdge._X_ Bool) (call_PosEdge._Y_ Bool) (call_PosEdge.flby Bool) (call_PosEdge2._X_ Bool) (call_PosEdge2._Y_ Bool) (call_PosEdge2.flby Bool) (call_cc_allowed.ccont Bool) (call_cc_allowed.igsw Bool) (call_cc_allowed.bpa Bool) (call_cc_allowed.cccanc Bool) (call_cc_allowed.battok Bool) (call_cc_allowed.gearok Bool) (call_cc_allowed.qfok Bool) (call_cc_allowed.sdok Bool) (call_cc_allowed.accok Bool) (call_cc_allowed.vs Int) (call_cc_allowed.ccall Bool) (call_one_button_accept.ccseti Bool) (call_one_button_accept.ccsetd Bool) (call_one_button_accept.ccr Bool) (call_one_button_accept.ccont Bool) (call_one_button_accept.cca Bool) (call_one_button_accept.oba Bool) (call_one_button_accept.ob Bool) (call_one_button_accept.pnb Bool) (call_one_button_accept.ite Bool) (call_one_button_accept.ite2 Bool)) 
   :init (and (=> (not ccall) (= ite3 false)) (= flby false) (= flby2 false)) 
   :trans (and (and (and (and (=> (and (not ccont) call_PosEdge2._Y_') (= ite' true)) (=> (not (and (not ccont) call_PosEdge2._Y_')) (= ite' ccont))) (and (=> (or (or call_Edge._Y_' ccd') (and ccont call_PosEdge._Y_')) (= ite2' false)) (=> (not (or (or call_Edge._Y_' ccd') (and ccont call_PosEdge._Y_'))) (= ite2' ite')))) (and (=> (not ccall') (= ite3' false)) (=> (not (not ccall')) (= ite3' cca)))) (= flby' ite2') (= param' cca) (= flby2' ite4')) 
   :inv (and (and (=> (and call_one_button_accept.oba ccall) (= ite4 true)) (=> (not (and call_one_button_accept.oba ccall)) (= ite4 ite3))) (= ccont flby) (= cca flby2) (= ccall call_cc_allowed.ccall) (= call_Edge._X_ igsw) (= call_PosEdge._X_ cconoff) (= call_PosEdge2._X_ cconoff) (= call_cc_allowed.ccont ccont) (= call_cc_allowed.igsw igsw) (= call_cc_allowed.bpa bpa) (= call_cc_allowed.cccanc cccanc) (= call_cc_allowed.battok battok) (= call_cc_allowed.gearok gearok) (= call_cc_allowed.qfok qfok) (= call_cc_allowed.sdok sdok) (= call_cc_allowed.accok accok) (= call_cc_allowed.vs vs) (= call_one_button_accept.ccseti ccseti) (= call_one_button_accept.ccsetd ccsetd) (= call_one_button_accept.ccr ccr) (= call_one_button_accept.ccont ccont) (= call_one_button_accept.cca param)) 
   :subsys (call_Edge (Edge call_Edge._X_ call_Edge._Y_ call_Edge.flby))
   :subsys (call_PosEdge (PosEdge call_PosEdge._X_ call_PosEdge._Y_ call_PosEdge.flby))
   :subsys (call_PosEdge2 (PosEdge call_PosEdge2._X_ call_PosEdge2._Y_ call_PosEdge2.flby))
   :subsys (call_cc_allowed (cc_allowed call_cc_allowed.ccont call_cc_allowed.igsw call_cc_allowed.bpa call_cc_allowed.cccanc call_cc_allowed.battok call_cc_allowed.gearok call_cc_allowed.qfok call_cc_allowed.sdok call_cc_allowed.accok call_cc_allowed.vs call_cc_allowed.ccall))
   :subsys (call_one_button_accept (one_button_accept call_one_button_accept.ccseti call_one_button_accept.ccsetd call_one_button_accept.ccr call_one_button_accept.ccont call_one_button_accept.cca call_one_button_accept.oba call_one_button_accept.ob call_one_button_accept.pnb call_one_button_accept.ite call_one_button_accept.ite2)))
(define-system main 
   :input () 
   :output ((param_gearok Bool) (_OK_ Bool) (p1 Bool) (p2 Bool) (p3 Bool) (p4 Bool) (param_qfok Bool) (ccont Bool) (cca Bool) (env Bool) (flby Bool) (ite Bool) (param_sdok Bool) (ite2 Bool) (ite3 Bool) (ite4 Bool) (param_accok Bool) (param_ccseti Bool) (param_igsw Bool) (param_ccsetd Bool) (param_ccd Bool) (param_ccr Bool) (param_cconoff Bool) (param_vs Int) (param_bpa Bool) (param_cccanc Bool) (param_battok Bool)) 
   :local ((call_PosEdge._X_ Bool) (call_PosEdge._Y_ Bool) (call_PosEdge.flby Bool) (call_PosEdge2._X_ Bool) (call_PosEdge2._Y_ Bool) (call_PosEdge2.flby Bool) (call_PosEdge3._X_ Bool) (call_PosEdge3._Y_ Bool) (call_PosEdge3.flby Bool) (call_PosEdge4._X_ Bool) (call_PosEdge4._Y_ Bool) (call_PosEdge4.flby Bool) (call_cc_allowed.ccont Bool) (call_cc_allowed.igsw Bool) (call_cc_allowed.bpa Bool) (call_cc_allowed.cccanc Bool) (call_cc_allowed.battok Bool) (call_cc_allowed.gearok Bool) (call_cc_allowed.qfok Bool) (call_cc_allowed.sdok Bool) (call_cc_allowed.accok Bool) (call_cc_allowed.vs Int) (call_cc_allowed.ccall Bool) (call_PosEdge5._X_ Bool) (call_PosEdge5._Y_ Bool) (call_PosEdge5.flby Bool) (call_Edge._X_ Bool) (call_Edge._Y_ Bool) (call_Edge.flby Bool) (call_PosEdge6._X_ Bool) (call_PosEdge6._Y_ Bool) (call_PosEdge6.flby Bool) (call_Edge2._X_ Bool) (call_Edge2._Y_ Bool) (call_Edge2.flby Bool) (call__main_.igsw Bool) (call__main_.ccd Bool) (call__main_.cconoff Bool) (call__main_.bpa Bool) (call__main_.cccanc Bool) (call__main_.battok Bool) (call__main_.gearok Bool) (call__main_.qfok Bool) (call__main_.sdok Bool) (call__main_.accok Bool) (call__main_.ccseti Bool) (call__main_.ccsetd Bool) (call__main_.ccr Bool) (call__main_.vs Int) (call__main_.ccont Bool) (call__main_.cca Bool) (call__main_.ccall Bool) (call__main_.ite Bool) (call__main_.ite2 Bool) (call__main_.flby Bool) (call__main_.param Bool) (call__main_.ite3 Bool) (call__main_.ite4 Bool) (call__main_.flby2 Bool)) 
   :init (= flby (not param_igsw)) 
   :trans (= flby' true) 
   :inv (and (and (and (and (and (=> call_PosEdge._Y_ (= ite (or (or call_PosEdge2._Y_ call_PosEdge3._Y_) call_PosEdge4._Y_))) (=> (not call_PosEdge._Y_) (= ite true))) (and (=> (not call_cc_allowed.ccall) (= ite2 (not cca))) (=> (not (not call_cc_allowed.ccall)) (= ite2 true)))) (and (=> call_PosEdge5._Y_ (= ite3 (and (and (not call_Edge._Y_) (not param_ccd)) call_PosEdge6._Y_))) (=> (not call_PosEdge5._Y_) (= ite3 true)))) (and (=> call_Edge2._Y_ (= ite4 (not cca))) (=> (not call_Edge2._Y_) (= ite4 true)))) (= _OK_ (and (and (and p1 p2) p3) p4)) (= p1 ite) (= p2 ite2) (= p3 ite3) (= p4 ite4) (= ccont call__main_.ccont) (= cca call__main_.cca) (= env flby) (= call_PosEdge._X_ cca) (= call_PosEdge2._X_ param_ccseti) (= call_PosEdge3._X_ param_ccsetd) (= call_PosEdge4._X_ param_ccr) (= call_cc_allowed.ccont ccont) (= call_cc_allowed.igsw param_igsw) (= call_cc_allowed.bpa param_bpa) (= call_cc_allowed.cccanc param_cccanc) (= call_cc_allowed.battok param_battok) (= call_cc_allowed.gearok param_gearok) (= call_cc_allowed.qfok param_qfok) (= call_cc_allowed.sdok param_sdok) (= call_cc_allowed.accok param_accok) (= call_cc_allowed.vs param_vs) (= call_PosEdge5._X_ ccont) (= call_Edge._X_ param_igsw) (= call_PosEdge6._X_ param_cconoff) (= call_Edge2._X_ param_igsw) (= call__main_.igsw param_igsw) (= call__main_.ccd param_ccd) (= call__main_.cconoff param_cconoff) (= call__main_.bpa param_bpa) (= call__main_.cccanc param_cccanc) (= call__main_.battok param_battok) (= call__main_.gearok param_gearok) (= call__main_.qfok param_qfok) (= call__main_.sdok param_sdok) (= call__main_.accok param_accok) (= call__main_.ccseti param_ccseti) (= call__main_.ccsetd param_ccsetd) (= call__main_.ccr param_ccr) (= call__main_.vs param_vs)) 
   :subsys (call_PosEdge (PosEdge call_PosEdge._X_ call_PosEdge._Y_ call_PosEdge.flby))
   :subsys (call_PosEdge2 (PosEdge call_PosEdge2._X_ call_PosEdge2._Y_ call_PosEdge2.flby))
   :subsys (call_PosEdge3 (PosEdge call_PosEdge3._X_ call_PosEdge3._Y_ call_PosEdge3.flby))
   :subsys (call_PosEdge4 (PosEdge call_PosEdge4._X_ call_PosEdge4._Y_ call_PosEdge4.flby))
   :subsys (call_cc_allowed (cc_allowed call_cc_allowed.ccont call_cc_allowed.igsw call_cc_allowed.bpa call_cc_allowed.cccanc call_cc_allowed.battok call_cc_allowed.gearok call_cc_allowed.qfok call_cc_allowed.sdok call_cc_allowed.accok call_cc_allowed.vs call_cc_allowed.ccall))
   :subsys (call_PosEdge5 (PosEdge call_PosEdge5._X_ call_PosEdge5._Y_ call_PosEdge5.flby))
   :subsys (call_Edge (Edge call_Edge._X_ call_Edge._Y_ call_Edge.flby))
   :subsys (call_PosEdge6 (PosEdge call_PosEdge6._X_ call_PosEdge6._Y_ call_PosEdge6.flby))
   :subsys (call_Edge2 (Edge call_Edge2._X_ call_Edge2._Y_ call_Edge2.flby))
   :subsys (call__main_ (_main_ call__main_.igsw call__main_.ccd call__main_.cconoff call__main_.bpa call__main_.cccanc call__main_.battok call__main_.gearok call__main_.qfok call__main_.sdok call__main_.accok call__main_.ccseti call__main_.ccsetd call__main_.ccr call__main_.vs call__main_.ccont call__main_.cca call__main_.ccall call__main_.ite call__main_.ite2 call__main_.flby call__main_.param call__main_.ite3 call__main_.ite4 call__main_.flby2)))
(check-system main 
   :input () 
   :output ((param_gearok Bool) (_OK_ Bool) (p1 Bool) (p2 Bool) (p3 Bool) (p4 Bool) (param_qfok Bool) (ccont Bool) (cca Bool) (env Bool) (flby Bool) (ite Bool) (param_sdok Bool) (ite2 Bool) (ite3 Bool) (ite4 Bool) (param_accok Bool) (param_ccseti Bool) (param_igsw Bool) (param_ccsetd Bool) (param_ccd Bool) (param_ccr Bool) (param_cconoff Bool) (param_vs Int) (param_bpa Bool) (param_cccanc Bool) (param_battok Bool)) 
   :local ((call_PosEdge._X_ Bool) (call_PosEdge._Y_ Bool) (call_PosEdge.flby Bool) (call_PosEdge2._X_ Bool) (call_PosEdge2._Y_ Bool) (call_PosEdge2.flby Bool) (call_PosEdge3._X_ Bool) (call_PosEdge3._Y_ Bool) (call_PosEdge3.flby Bool) (call_PosEdge4._X_ Bool) (call_PosEdge4._Y_ Bool) (call_PosEdge4.flby Bool) (call_cc_allowed.ccont Bool) (call_cc_allowed.igsw Bool) (call_cc_allowed.bpa Bool) (call_cc_allowed.cccanc Bool) (call_cc_allowed.battok Bool) (call_cc_allowed.gearok Bool) (call_cc_allowed.qfok Bool) (call_cc_allowed.sdok Bool) (call_cc_allowed.accok Bool) (call_cc_allowed.vs Int) (call_cc_allowed.ccall Bool) (call_PosEdge5._X_ Bool) (call_PosEdge5._Y_ Bool) (call_PosEdge5.flby Bool) (call_Edge._X_ Bool) (call_Edge._Y_ Bool) (call_Edge.flby Bool) (call_PosEdge6._X_ Bool) (call_PosEdge6._Y_ Bool) (call_PosEdge6.flby Bool) (call_Edge2._X_ Bool) (call_Edge2._Y_ Bool) (call_Edge2.flby Bool) (call__main_.igsw Bool) (call__main_.ccd Bool) (call__main_.cconoff Bool) (call__main_.bpa Bool) (call__main_.cccanc Bool) (call__main_.battok Bool) (call__main_.gearok Bool) (call__main_.qfok Bool) (call__main_.sdok Bool) (call__main_.accok Bool) (call__main_.ccseti Bool) (call__main_.ccsetd Bool) (call__main_.ccr Bool) (call__main_.vs Int) (call__main_.ccont Bool) (call__main_.cca Bool) (call__main_.ccall Bool) (call__main_.ite Bool) (call__main_.ite2 Bool) (call__main_.flby Bool) (call__main_.param Bool) (call__main_.ite3 Bool) (call__main_.ite4 Bool) (call__main_.flby2 Bool)) 
   :reachable (rch_1 (not (= _OK_ true)))
   :query (qry_rch_1 (rch_1)))