(set-logic QF_LIA)
(define-system Sofar 
   :input ((_X_ Bool)) 
   :output ((Sofar Bool) (flby Bool)) 
   :local () 
   :init (= flby _X_) 
   :trans (= flby' (or _X_' Sofar)) 
   :inv (= Sofar flby) )
(define-system excludes4 
   :input ((_X1_ Bool) (_X2_ Bool) (_X3_ Bool) (_X4_ Bool)) 
   :output ((excludes Bool)) 
   :local () 
   :init true 
   :trans true 
   :inv (= excludes (not (or (or (or (or (or (and _X1_ _X2_) (and _X1_ _X3_)) (and _X1_ _X4_)) (and _X2_ _X3_)) (and _X2_ _X4_)) (and _X3_ _X4_)))) )
(define-system mesi 
   :input ((etat_me1 Bool) (etat_me2 Bool) (etat_me3 Bool) (etat_me4 Bool)) 
   :output ((modified_me Int) (exclusive_me Int) (shared_me Int) (invalid_me Int) (garde_me1 Bool) (garde_me2 Bool) (garde_me3 Bool) (garde_me4 Bool) (ite Int) (ite2 Int) (ite3 Int) (ite4 Int) (ite5 Int) (ite6 Int) (ite7 Int) (ite8 Int) (flby Int) (ite9 Int) (ite10 Int) (ite11 Int) (ite12 Int) (ite13 Int) (ite14 Int) (ite15 Int) (ite16 Int) (flby2 Int) (ite17 Int) (ite18 Int) (ite19 Int) (ite20 Int) (ite21 Int) (ite22 Int) (ite23 Int) (ite24 Int) (flby3 Int) (ite25 Int) (ite26 Int) (ite27 Int) (ite28 Int) (ite29 Int) (ite30 Int) (ite31 Int) (ite32 Int) (flby4 Int)) 
   :local () 
   :init (and (and (and (and (and (and (and (and (and (and (and (and (=> garde_me1 (= ite 0)) (=> garde_me3 (= ite3 0))) (=> garde_me4 (= ite4 0))) (=> etat_me4 (= ite5 ite4))) (=> garde_me1 (= ite9 0))) (=> garde_me3 (= ite11 1))) (=> garde_me4 (= ite12 1))) (=> etat_me4 (= ite13 ite12))) (=> garde_me3 (= ite19 0))) (=> garde_me4 (= ite20 0))) (=> etat_me4 (= ite21 ite20))) (=> etat_me4 (= ite29 ite28))) (= flby 0) (= flby2 0) (= flby3 0) (= flby4 3)) 
   :trans (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (=> garde_me1' (= ite' 0)) (=> (not garde_me1') (= ite' modified_me))) (and (=> garde_me2' (= ite2' (- modified_me 1))) (=> (not garde_me2') (= ite2' modified_me)))) (and (=> garde_me3' (= ite3' 0)) (=> (not garde_me3') (= ite3' modified_me)))) (and (=> garde_me4' (= ite4' 0)) (=> (not garde_me4') (= ite4' modified_me)))) (and (=> etat_me4' (= ite5' ite4')) (=> (not etat_me4') (= ite5' modified_me)))) (and (=> garde_me1' (= ite9' 0)) (=> (not garde_me1') (= ite9' exclusive_me)))) (and (=> garde_me2' (= ite10' (- exclusive_me 1))) (=> (not garde_me2') (= ite10' exclusive_me)))) (and (=> garde_me3' (= ite11' 1)) (=> (not garde_me3') (= ite11' exclusive_me)))) (and (=> garde_me4' (= ite12' 1)) (=> (not garde_me4') (= ite12' exclusive_me)))) (and (=> etat_me4' (= ite13' ite12')) (=> (not etat_me4') (= ite13' exclusive_me)))) (and (=> garde_me1' (= ite17' (- (+ (+ (- shared_me 1) exclusive_me) modified_me) 1))) (=> (not garde_me1') (= ite17' shared_me)))) (and (=> garde_me2' (= ite18' shared_me)) (=> (not garde_me2') (= ite18' shared_me)))) (and (=> garde_me3' (= ite19' 0)) (=> (not garde_me3') (= ite19' shared_me)))) (and (=> garde_me4' (= ite20' 0)) (=> (not garde_me4') (= ite20' shared_me)))) (and (=> etat_me4' (= ite21' ite20')) (=> (not etat_me4') (= ite21' shared_me)))) (and (=> garde_me1' (= ite25' (- invalid_me 1))) (=> (not garde_me1') (= ite25' invalid_me)))) (and (=> garde_me2' (= ite26' invalid_me)) (=> (not garde_me2') (= ite26' invalid_me)))) (and (=> garde_me3' (= ite27' (- (+ (+ (+ invalid_me modified_me) exclusive_me) shared_me) 1))) (=> (not garde_me3') (= ite27' invalid_me)))) (and (=> garde_me4' (= ite28' (- (+ (+ (+ invalid_me modified_me) exclusive_me) shared_me) 1))) (=> (not garde_me4') (= ite28' invalid_me)))) (and (=> etat_me4' (= ite29' ite28')) (=> (not etat_me4') (= ite29' invalid_me)))) (= garde_me1' (>= invalid_me 1)) (= garde_me2' (>= exclusive_me 1)) (= garde_me3' (>= shared_me 1)) (= garde_me4' (>= invalid_me 1)) (= flby' ite8') (= flby2' ite16') (= flby3' ite24') (= flby4' ite32')) 
   :inv (and (and (and (and (and (and (and (and (and (and (and (and (and (=> etat_me3 (= ite6 ite3)) (=> (not etat_me3) (= ite6 ite5))) (and (=> etat_me2 (= ite7 ite2)) (=> (not etat_me2) (= ite7 ite6)))) (and (=> etat_me1 (= ite8 ite)) (=> (not etat_me1) (= ite8 ite7)))) (and (=> etat_me3 (= ite14 ite11)) (=> (not etat_me3) (= ite14 ite13)))) (and (=> etat_me2 (= ite15 ite10)) (=> (not etat_me2) (= ite15 ite14)))) (and (=> etat_me1 (= ite16 ite9)) (=> (not etat_me1) (= ite16 ite15)))) (and (=> etat_me3 (= ite22 ite19)) (=> (not etat_me3) (= ite22 ite21)))) (and (=> etat_me2 (= ite23 ite18)) (=> (not etat_me2) (= ite23 ite22)))) (and (=> etat_me1 (= ite24 ite17)) (=> (not etat_me1) (= ite24 ite23)))) (and (=> etat_me3 (= ite30 ite27)) (=> (not etat_me3) (= ite30 ite29)))) (and (=> etat_me2 (= ite31 ite26)) (=> (not etat_me2) (= ite31 ite30)))) (and (=> etat_me1 (= ite32 ite25)) (=> (not etat_me1) (= ite32 ite31)))) (= modified_me flby) (= exclusive_me flby2) (= shared_me flby3) (= invalid_me flby4)) )
(define-system main 
   :input () 
   :output ((param_etat_me3 Bool) (param_etat_me4 Bool) (_OK_ Bool) (modified_me Int) (exclusive_me Int) (shared_me Int) (invalid_me Int) (env Bool) (param_etat_me1 Bool) (param_etat_me2 Bool)) 
   :local ((call_mesi.etat_me1 Bool) (call_mesi.etat_me2 Bool) (call_mesi.etat_me3 Bool) (call_mesi.etat_me4 Bool) (call_mesi.modified_me Int) (call_mesi.exclusive_me Int) (call_mesi.shared_me Int) (call_mesi.invalid_me Int) (call_mesi.garde_me1 Bool) (call_mesi.garde_me2 Bool) (call_mesi.garde_me3 Bool) (call_mesi.garde_me4 Bool) (call_mesi.ite Int) (call_mesi.ite2 Int) (call_mesi.ite3 Int) (call_mesi.ite4 Int) (call_mesi.ite5 Int) (call_mesi.ite6 Int) (call_mesi.ite7 Int) (call_mesi.ite8 Int) (call_mesi.flby Int) (call_mesi.ite9 Int) (call_mesi.ite10 Int) (call_mesi.ite11 Int) (call_mesi.ite12 Int) (call_mesi.ite13 Int) (call_mesi.ite14 Int) (call_mesi.ite15 Int) (call_mesi.ite16 Int) (call_mesi.flby2 Int) (call_mesi.ite17 Int) (call_mesi.ite18 Int) (call_mesi.ite19 Int) (call_mesi.ite20 Int) (call_mesi.ite21 Int) (call_mesi.ite22 Int) (call_mesi.ite23 Int) (call_mesi.ite24 Int) (call_mesi.flby3 Int) (call_mesi.ite25 Int) (call_mesi.ite26 Int) (call_mesi.ite27 Int) (call_mesi.ite28 Int) (call_mesi.ite29 Int) (call_mesi.ite30 Int) (call_mesi.ite31 Int) (call_mesi.ite32 Int) (call_mesi.flby4 Int) (call_excludes4._X1_ Bool) (call_excludes4._X2_ Bool) (call_excludes4._X3_ Bool) (call_excludes4._X4_ Bool) (call_excludes4.excludes Bool) (call_Sofar._X_ Bool) (call_Sofar.Sofar Bool) (call_Sofar.flby Bool)) 
   :init true 
   :trans true 
   :inv (and (= _OK_ (=> env (not (> modified_me 2)))) (= modified_me call_mesi.modified_me) (= exclusive_me call_mesi.exclusive_me) (= shared_me call_mesi.shared_me) (= invalid_me call_mesi.invalid_me) (= env call_Sofar.Sofar) (= call_mesi.etat_me1 param_etat_me1) (= call_mesi.etat_me2 param_etat_me2) (= call_mesi.etat_me3 param_etat_me3) (= call_mesi.etat_me4 param_etat_me4) (= call_excludes4._X1_ param_etat_me1) (= call_excludes4._X2_ param_etat_me2) (= call_excludes4._X3_ param_etat_me3) (= call_excludes4._X4_ param_etat_me4) (= call_Sofar._X_ (and call_excludes4.excludes (>= modified_me 0)))) 
   :subsys (call_mesi (mesi call_mesi.etat_me1 call_mesi.etat_me2 call_mesi.etat_me3 call_mesi.etat_me4 call_mesi.modified_me call_mesi.exclusive_me call_mesi.shared_me call_mesi.invalid_me call_mesi.garde_me1 call_mesi.garde_me2 call_mesi.garde_me3 call_mesi.garde_me4 call_mesi.ite call_mesi.ite2 call_mesi.ite3 call_mesi.ite4 call_mesi.ite5 call_mesi.ite6 call_mesi.ite7 call_mesi.ite8 call_mesi.flby call_mesi.ite9 call_mesi.ite10 call_mesi.ite11 call_mesi.ite12 call_mesi.ite13 call_mesi.ite14 call_mesi.ite15 call_mesi.ite16 call_mesi.flby2 call_mesi.ite17 call_mesi.ite18 call_mesi.ite19 call_mesi.ite20 call_mesi.ite21 call_mesi.ite22 call_mesi.ite23 call_mesi.ite24 call_mesi.flby3 call_mesi.ite25 call_mesi.ite26 call_mesi.ite27 call_mesi.ite28 call_mesi.ite29 call_mesi.ite30 call_mesi.ite31 call_mesi.ite32 call_mesi.flby4))
   :subsys (call_excludes4 (excludes4 call_excludes4._X1_ call_excludes4._X2_ call_excludes4._X3_ call_excludes4._X4_ call_excludes4.excludes))
   :subsys (call_Sofar (Sofar call_Sofar._X_ call_Sofar.Sofar call_Sofar.flby)))
(check-system main 
   :input () 
   :output ((param_etat_me3 Bool) (param_etat_me4 Bool) (_OK_ Bool) (modified_me Int) (exclusive_me Int) (shared_me Int) (invalid_me Int) (env Bool) (param_etat_me1 Bool) (param_etat_me2 Bool)) 
   :local ((call_mesi.etat_me1 Bool) (call_mesi.etat_me2 Bool) (call_mesi.etat_me3 Bool) (call_mesi.etat_me4 Bool) (call_mesi.modified_me Int) (call_mesi.exclusive_me Int) (call_mesi.shared_me Int) (call_mesi.invalid_me Int) (call_mesi.garde_me1 Bool) (call_mesi.garde_me2 Bool) (call_mesi.garde_me3 Bool) (call_mesi.garde_me4 Bool) (call_mesi.ite Int) (call_mesi.ite2 Int) (call_mesi.ite3 Int) (call_mesi.ite4 Int) (call_mesi.ite5 Int) (call_mesi.ite6 Int) (call_mesi.ite7 Int) (call_mesi.ite8 Int) (call_mesi.flby Int) (call_mesi.ite9 Int) (call_mesi.ite10 Int) (call_mesi.ite11 Int) (call_mesi.ite12 Int) (call_mesi.ite13 Int) (call_mesi.ite14 Int) (call_mesi.ite15 Int) (call_mesi.ite16 Int) (call_mesi.flby2 Int) (call_mesi.ite17 Int) (call_mesi.ite18 Int) (call_mesi.ite19 Int) (call_mesi.ite20 Int) (call_mesi.ite21 Int) (call_mesi.ite22 Int) (call_mesi.ite23 Int) (call_mesi.ite24 Int) (call_mesi.flby3 Int) (call_mesi.ite25 Int) (call_mesi.ite26 Int) (call_mesi.ite27 Int) (call_mesi.ite28 Int) (call_mesi.ite29 Int) (call_mesi.ite30 Int) (call_mesi.ite31 Int) (call_mesi.ite32 Int) (call_mesi.flby4 Int) (call_excludes4._X1_ Bool) (call_excludes4._X2_ Bool) (call_excludes4._X3_ Bool) (call_excludes4._X4_ Bool) (call_excludes4.excludes Bool) (call_Sofar._X_ Bool) (call_Sofar.Sofar Bool) (call_Sofar.flby Bool)) 
   :reachable (rch_1 (not (= _OK_ true)))
   :query (qry_rch_1 (rch_1)))