(set-logic QF_LIA)
(define-system Sofar 
   :input ((_X_ Bool)) 
   :output ((Sofar Bool) (flby Bool)) 
   :local () 
   :init (= flby _X_) 
   :trans (= flby' (and _X_' Sofar)) 
   :inv (= Sofar flby) )
(define-system excludes4 
   :input ((_X1_ Bool) (_X2_ Bool) (_X3_ Bool) (_X4_ Bool)) 
   :output ((excludes Bool)) 
   :local () 
   :init true 
   :trans true 
   :inv (= excludes (not (or (or (or (or (or (and _X1_ _X2_) (and _X1_ _X3_)) (and _X1_ _X4_)) (and _X2_ _X3_)) (and _X2_ _X4_)) (and _X3_ _X4_)))) )
(define-system moesi 
   :input ((init_invalid_mo Int) (etat_mo1 Bool) (etat_mo2 Bool) (etat_mo3 Bool) (etat_mo4 Bool)) 
   :output ((modified_mo Int) (exclusive_mo Int) (shared_mo Int) (invalid_mo Int) (owned_mo Int) (erreur_mo Bool) (garde_mo1 Bool) (garde_mo2 Bool) (garde_mo3 Bool) (garde_mo4 Bool) (flby Bool) (ite Int) (ite2 Int) (ite3 Int) (ite4 Int) (ite5 Int) (ite6 Int) (ite7 Int) (ite8 Int) (flby2 Int) (ite9 Int) (ite10 Int) (ite11 Int) (ite12 Int) (ite13 Int) (ite14 Int) (ite15 Int) (ite16 Int) (flby3 Int) (ite17 Int) (ite18 Int) (ite19 Int) (ite20 Int) (ite21 Int) (ite22 Int) (flby4 Int) (ite23 Int) (ite24 Int) (ite25 Int) (ite26 Int) (ite27 Int) (ite28 Int) (flby5 Int) (ite29 Int) (ite30 Int) (ite31 Int) (ite32 Int) (ite33 Int) (ite34 Int) (flby6 Int)) 
   :local () 
   :init (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (=> garde_mo1 (= ite 0)) (=> garde_mo3 (= ite3 0))) (=> garde_mo4 (= ite4 0))) (=> etat_mo4 (= ite5 ite4))) (=> garde_mo1 (= ite9 0))) (=> garde_mo3 (= ite11 1))) (=> garde_mo4 (= ite12 1))) (=> etat_mo4 (= ite13 ite12))) (=> garde_mo3 (= ite18 0))) (=> garde_mo4 (= ite19 0))) (=> etat_mo4 (= ite20 ite19))) (=> etat_mo4 (= ite26 ite25))) (=> garde_mo3 (= ite30 0))) (=> garde_mo4 (= ite31 0))) (=> etat_mo4 (= ite32 ite31))) (= flby false) (= flby2 0) (= flby3 0) (= flby4 0) (= flby5 init_invalid_mo) (= flby6 0)) 
   :trans (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (=> garde_mo1' (= ite' 0)) (=> (not garde_mo1') (= ite' modified_mo))) (and (=> garde_mo2' (= ite2' (+ modified_mo 1))) (=> (not garde_mo2') (= ite2' modified_mo)))) (and (=> garde_mo3' (= ite3' 0)) (=> (not garde_mo3') (= ite3' modified_mo)))) (and (=> garde_mo4' (= ite4' 0)) (=> (not garde_mo4') (= ite4' modified_mo)))) (and (=> etat_mo4' (= ite5' ite4')) (=> (not etat_mo4') (= ite5' modified_mo)))) (and (=> garde_mo1' (= ite9' 0)) (=> (not garde_mo1') (= ite9' exclusive_mo)))) (and (=> garde_mo2' (= ite10' (- exclusive_mo 1))) (=> (not garde_mo2') (= ite10' exclusive_mo)))) (and (=> garde_mo3' (= ite11' 1)) (=> (not garde_mo3') (= ite11' exclusive_mo)))) (and (=> garde_mo4' (= ite12' 1)) (=> (not garde_mo4') (= ite12' exclusive_mo)))) (and (=> etat_mo4' (= ite13' ite12')) (=> (not etat_mo4') (= ite13' exclusive_mo)))) (and (=> garde_mo1' (= ite17' (+ (+ (- shared_mo 1) exclusive_mo) 1))) (=> (not garde_mo1') (= ite17' shared_mo)))) (and (=> garde_mo3' (= ite18' 0)) (=> (not garde_mo3') (= ite18' shared_mo)))) (and (=> garde_mo4' (= ite19' 0)) (=> (not garde_mo4') (= ite19' shared_mo)))) (and (=> etat_mo4' (= ite20' ite19')) (=> (not etat_mo4') (= ite20' shared_mo)))) (and (=> garde_mo1' (= ite23' (- invalid_mo 1))) (=> (not garde_mo1') (= ite23' invalid_mo)))) (and (=> garde_mo3' (= ite24' (- (+ (+ (+ (+ invalid_mo modified_mo) exclusive_mo) shared_mo) owned_mo) 1))) (=> (not garde_mo3') (= ite24' invalid_mo)))) (and (=> garde_mo4' (= ite25' (- (+ (+ (+ (+ invalid_mo modified_mo) exclusive_mo) shared_mo) owned_mo) 1))) (=> (not garde_mo4') (= ite25' invalid_mo)))) (and (=> etat_mo4' (= ite26' ite25')) (=> (not etat_mo4') (= ite26' invalid_mo)))) (and (=> garde_mo1' (= ite29' (+ owned_mo modified_mo))) (=> (not garde_mo1') (= ite29' owned_mo)))) (and (=> garde_mo3' (= ite30' 0)) (=> (not garde_mo3') (= ite30' owned_mo)))) (and (=> garde_mo4' (= ite31' 0)) (=> (not garde_mo4') (= ite31' owned_mo)))) (and (=> etat_mo4' (= ite32' ite31')) (=> (not etat_mo4') (= ite32' owned_mo)))) (= garde_mo1' (>= invalid_mo 1)) (= garde_mo2' (>= exclusive_mo 1)) (= garde_mo3' (>= (- shared_mo owned_mo) 1)) (= garde_mo4' (>= invalid_mo 1)) (= flby' (>= exclusive_mo' 2)) (= flby2' ite8') (= flby3' ite16') (= flby4' ite22') (= flby5' ite28') (= flby6' ite34')) 
   :inv (and (and (and (and (and (and (and (and (and (and (and (and (and (=> etat_mo3 (= ite6 ite3)) (=> (not etat_mo3) (= ite6 ite5))) (and (=> etat_mo2 (= ite7 ite2)) (=> (not etat_mo2) (= ite7 ite6)))) (and (=> etat_mo1 (= ite8 ite)) (=> (not etat_mo1) (= ite8 ite7)))) (and (=> etat_mo3 (= ite14 ite11)) (=> (not etat_mo3) (= ite14 ite13)))) (and (=> etat_mo2 (= ite15 ite10)) (=> (not etat_mo2) (= ite15 ite14)))) (and (=> etat_mo1 (= ite16 ite9)) (=> (not etat_mo1) (= ite16 ite15)))) (and (=> etat_mo3 (= ite21 ite18)) (=> (not etat_mo3) (= ite21 ite20)))) (and (=> etat_mo1 (= ite22 ite17)) (=> (not etat_mo1) (= ite22 ite21)))) (and (=> etat_mo3 (= ite27 ite24)) (=> (not etat_mo3) (= ite27 ite26)))) (and (=> etat_mo1 (= ite28 ite23)) (=> (not etat_mo1) (= ite28 ite27)))) (and (=> etat_mo3 (= ite33 ite30)) (=> (not etat_mo3) (= ite33 ite32)))) (and (=> etat_mo1 (= ite34 ite29)) (=> (not etat_mo1) (= ite34 ite33)))) (= modified_mo flby2) (= exclusive_mo flby3) (= shared_mo flby4) (= invalid_mo flby5) (= owned_mo flby6) (= erreur_mo flby)) )
(define-system main 
   :input () 
   :output ((param_init_invalid_mo Int) (param_etat_mo1 Bool) (param_etat_mo2 Bool) (param_etat_mo3 Bool) (param_etat_mo4 Bool) (_OK_ Bool) (modified_mo Int) (exclusive_mo Int) (shared_mo Int) (invalid_mo Int) (owned_mo Int) (erreur_mo Bool) (env Bool) (flby Bool)) 
   :local ((call_moesi.init_invalid_mo Int) (call_moesi.etat_mo1 Bool) (call_moesi.etat_mo2 Bool) (call_moesi.etat_mo3 Bool) (call_moesi.etat_mo4 Bool) (call_moesi.modified_mo Int) (call_moesi.exclusive_mo Int) (call_moesi.shared_mo Int) (call_moesi.invalid_mo Int) (call_moesi.owned_mo Int) (call_moesi.erreur_mo Bool) (call_moesi.garde_mo1 Bool) (call_moesi.garde_mo2 Bool) (call_moesi.garde_mo3 Bool) (call_moesi.garde_mo4 Bool) (call_moesi.flby Bool) (call_moesi.ite Int) (call_moesi.ite2 Int) (call_moesi.ite3 Int) (call_moesi.ite4 Int) (call_moesi.ite5 Int) (call_moesi.ite6 Int) (call_moesi.ite7 Int) (call_moesi.ite8 Int) (call_moesi.flby2 Int) (call_moesi.ite9 Int) (call_moesi.ite10 Int) (call_moesi.ite11 Int) (call_moesi.ite12 Int) (call_moesi.ite13 Int) (call_moesi.ite14 Int) (call_moesi.ite15 Int) (call_moesi.ite16 Int) (call_moesi.flby3 Int) (call_moesi.ite17 Int) (call_moesi.ite18 Int) (call_moesi.ite19 Int) (call_moesi.ite20 Int) (call_moesi.ite21 Int) (call_moesi.ite22 Int) (call_moesi.flby4 Int) (call_moesi.ite23 Int) (call_moesi.ite24 Int) (call_moesi.ite25 Int) (call_moesi.ite26 Int) (call_moesi.ite27 Int) (call_moesi.ite28 Int) (call_moesi.flby5 Int) (call_moesi.ite29 Int) (call_moesi.ite30 Int) (call_moesi.ite31 Int) (call_moesi.ite32 Int) (call_moesi.ite33 Int) (call_moesi.ite34 Int) (call_moesi.flby6 Int) (call_excludes4._X1_ Bool) (call_excludes4._X2_ Bool) (call_excludes4._X3_ Bool) (call_excludes4._X4_ Bool) (call_excludes4.excludes Bool) (call_Sofar._X_ Bool) (call_Sofar.Sofar Bool) (call_Sofar.flby Bool)) 
   :init (= flby true) 
   :trans (= flby' (= (+ (+ (+ (+ modified_mo' exclusive_mo') shared_mo') invalid_mo') owned_mo') (+ (+ (+ (+ modified_mo exclusive_mo) shared_mo) invalid_mo) owned_mo))) 
   :inv (and (= _OK_ (=> env flby)) (= modified_mo call_moesi.modified_mo) (= exclusive_mo call_moesi.exclusive_mo) (= shared_mo call_moesi.shared_mo) (= invalid_mo call_moesi.invalid_mo) (= owned_mo call_moesi.owned_mo) (= erreur_mo call_moesi.erreur_mo) (= env call_Sofar.Sofar) (= call_moesi.init_invalid_mo param_init_invalid_mo) (= call_moesi.etat_mo1 param_etat_mo1) (= call_moesi.etat_mo2 param_etat_mo2) (= call_moesi.etat_mo3 param_etat_mo3) (= call_moesi.etat_mo4 param_etat_mo4) (= call_excludes4._X1_ param_etat_mo1) (= call_excludes4._X2_ param_etat_mo2) (= call_excludes4._X3_ param_etat_mo3) (= call_excludes4._X4_ param_etat_mo4) (= call_Sofar._X_ call_excludes4.excludes)) 
   :subsys (call_moesi (moesi call_moesi.init_invalid_mo call_moesi.etat_mo1 call_moesi.etat_mo2 call_moesi.etat_mo3 call_moesi.etat_mo4 call_moesi.modified_mo call_moesi.exclusive_mo call_moesi.shared_mo call_moesi.invalid_mo call_moesi.owned_mo call_moesi.erreur_mo call_moesi.garde_mo1 call_moesi.garde_mo2 call_moesi.garde_mo3 call_moesi.garde_mo4 call_moesi.flby call_moesi.ite call_moesi.ite2 call_moesi.ite3 call_moesi.ite4 call_moesi.ite5 call_moesi.ite6 call_moesi.ite7 call_moesi.ite8 call_moesi.flby2 call_moesi.ite9 call_moesi.ite10 call_moesi.ite11 call_moesi.ite12 call_moesi.ite13 call_moesi.ite14 call_moesi.ite15 call_moesi.ite16 call_moesi.flby3 call_moesi.ite17 call_moesi.ite18 call_moesi.ite19 call_moesi.ite20 call_moesi.ite21 call_moesi.ite22 call_moesi.flby4 call_moesi.ite23 call_moesi.ite24 call_moesi.ite25 call_moesi.ite26 call_moesi.ite27 call_moesi.ite28 call_moesi.flby5 call_moesi.ite29 call_moesi.ite30 call_moesi.ite31 call_moesi.ite32 call_moesi.ite33 call_moesi.ite34 call_moesi.flby6))
   :subsys (call_excludes4 (excludes4 call_excludes4._X1_ call_excludes4._X2_ call_excludes4._X3_ call_excludes4._X4_ call_excludes4.excludes))
   :subsys (call_Sofar (Sofar call_Sofar._X_ call_Sofar.Sofar call_Sofar.flby)))
(check-system main 
   :input () 
   :output ((param_init_invalid_mo Int) (param_etat_mo1 Bool) (param_etat_mo2 Bool) (param_etat_mo3 Bool) (param_etat_mo4 Bool) (_OK_ Bool) (modified_mo Int) (exclusive_mo Int) (shared_mo Int) (invalid_mo Int) (owned_mo Int) (erreur_mo Bool) (env Bool) (flby Bool)) 
   :local ((call_moesi.init_invalid_mo Int) (call_moesi.etat_mo1 Bool) (call_moesi.etat_mo2 Bool) (call_moesi.etat_mo3 Bool) (call_moesi.etat_mo4 Bool) (call_moesi.modified_mo Int) (call_moesi.exclusive_mo Int) (call_moesi.shared_mo Int) (call_moesi.invalid_mo Int) (call_moesi.owned_mo Int) (call_moesi.erreur_mo Bool) (call_moesi.garde_mo1 Bool) (call_moesi.garde_mo2 Bool) (call_moesi.garde_mo3 Bool) (call_moesi.garde_mo4 Bool) (call_moesi.flby Bool) (call_moesi.ite Int) (call_moesi.ite2 Int) (call_moesi.ite3 Int) (call_moesi.ite4 Int) (call_moesi.ite5 Int) (call_moesi.ite6 Int) (call_moesi.ite7 Int) (call_moesi.ite8 Int) (call_moesi.flby2 Int) (call_moesi.ite9 Int) (call_moesi.ite10 Int) (call_moesi.ite11 Int) (call_moesi.ite12 Int) (call_moesi.ite13 Int) (call_moesi.ite14 Int) (call_moesi.ite15 Int) (call_moesi.ite16 Int) (call_moesi.flby3 Int) (call_moesi.ite17 Int) (call_moesi.ite18 Int) (call_moesi.ite19 Int) (call_moesi.ite20 Int) (call_moesi.ite21 Int) (call_moesi.ite22 Int) (call_moesi.flby4 Int) (call_moesi.ite23 Int) (call_moesi.ite24 Int) (call_moesi.ite25 Int) (call_moesi.ite26 Int) (call_moesi.ite27 Int) (call_moesi.ite28 Int) (call_moesi.flby5 Int) (call_moesi.ite29 Int) (call_moesi.ite30 Int) (call_moesi.ite31 Int) (call_moesi.ite32 Int) (call_moesi.ite33 Int) (call_moesi.ite34 Int) (call_moesi.flby6 Int) (call_excludes4._X1_ Bool) (call_excludes4._X2_ Bool) (call_excludes4._X3_ Bool) (call_excludes4._X4_ Bool) (call_excludes4.excludes Bool) (call_Sofar._X_ Bool) (call_Sofar.Sofar Bool) (call_Sofar.flby Bool)) 
   :reachable (rch_1 (not (= _OK_ true)))
   :query (qry_rch_1 (rch_1)))