(set-logic QF_LIA)
(define-system Sofar 
   :input ((_X_ Bool)) 
   :output ((Sofar Bool) (flby Bool)) 
   :local () 
   :init (= flby _X_) 
   :trans (= flby' (or _X_' Sofar)) 
   :inv (= Sofar flby) )
(define-system excludes8 
   :input ((_X1_ Bool) (_X2_ Bool) (_X3_ Bool) (_X4_ Bool) (_X5_ Bool) (_X6_ Bool) (_X7_ Bool) (_X8_ Bool)) 
   :output ((excludes Bool)) 
   :local () 
   :init true 
   :trans true 
   :inv (= excludes (or (or (or (or (or (or (or (or (and (and (and (and (and (and (and (not _X1_) (not _X2_)) (not _X3_)) (not _X4_)) (not _X5_)) (not _X6_)) (not _X7_)) (not _X8_)) (and (and (and (and (and (and (and _X1_ (not _X2_)) (not _X3_)) (not _X4_)) (not _X5_)) (not _X6_)) (not _X7_)) (not _X8_))) (and (and (and (and (and (and (and (not _X1_) _X2_) (not _X3_)) (not _X4_)) (not _X5_)) (not _X6_)) (not _X7_)) (not _X8_))) (and (and (and (and (and (and (and (not _X1_) (not _X2_)) _X3_) (not _X4_)) (not _X5_)) (not _X6_)) (not _X7_)) (not _X8_))) (and (and (and (and (and (and (and (not _X1_) (not _X2_)) (not _X3_)) _X4_) (not _X5_)) (not _X6_)) (not _X7_)) (not _X8_))) (and (and (and (and (and (and (and (not _X1_) (not _X2_)) (not _X3_)) (not _X4_)) _X5_) (not _X6_)) (not _X7_)) (not _X8_))) (and (and (and (and (and (and (and (not _X1_) (not _X2_)) (not _X3_)) (not _X4_)) (not _X5_)) _X6_) (not _X7_)) (not _X8_))) (and (and (and (and (and (and (and (not _X1_) (not _X2_)) (not _X3_)) (not _X4_)) (not _X5_)) (not _X6_)) _X7_) (not _X8_))) (and (and (and (and (and (and (and (not _X1_) (not _X2_)) (not _X3_)) (not _X4_)) (not _X5_)) (not _X6_)) (not _X7_)) _X8_))) )
(define-system firefly 
   :input ((e1 Bool) (e2 Bool) (e3 Bool) (e4 Bool) (e5 Bool) (e6 Bool) (e7 Bool) (e8 Bool) (i_invalid Int)) 
   :output ((invalid Int) (dirty Int) (exclusive Int) (shared Int) (garde1 Bool) (garde2 Bool) (garde3 Bool) (garde4 Bool) (garde5 Bool) (garde6 Bool) (garde7 Bool) (garde8 Bool) (mem_invalid Int) (flby Int) (ite Int) (ite2 Int) (ite3 Int) (ite4 Int) (ite5 Int) (ite6 Int) (ite7 Int) (ite8 Int) (ite9 Int) (ite10 Int) (ite11 Int) (ite12 Int) (flby2 Int) (ite13 Int) (ite14 Int) (ite15 Int) (ite16 Int) (ite17 Int) (ite18 Int) (ite19 Int) (ite20 Int) (flby3 Int) (ite21 Int) (ite22 Int) (ite23 Int) (ite24 Int) (ite25 Int) (ite26 Int) (ite27 Int) (ite28 Int) (ite29 Int) (ite30 Int) (flby4 Int) (ite31 Int) (ite32 Int) (ite33 Int) (ite34 Int) (ite35 Int) (ite36 Int) (ite37 Int) (ite38 Int) (ite39 Int) (ite40 Int) (flby5 Int)) 
   :local () 
   :init (and (and (and (and (and (and (and (=> e8 (= ite7 ite6)) (=> garde6 (= ite15 1))) (=> e7 (= ite17 ite16))) (=> garde3 (= ite22 0))) (=> garde8 (= ite25 0))) (=> e8 (= ite26 ite25))) (=> e8 (= ite36 ite35))) (= flby i_invalid) (= flby2 mem_invalid) (= flby3 0) (= flby4 0) (= flby5 0)) 
   :trans (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (=> garde1' (= ite' (- invalid 1))) (=> (not garde1') (= ite' invalid))) (and (=> garde2' (= ite2' (- invalid 1))) (=> (not garde2') (= ite2' invalid)))) (and (=> garde3' (= ite3' (- invalid 1))) (=> (not garde3') (= ite3' invalid)))) (and (=> garde6' (= ite4' (- invalid 1))) (=> (not garde6') (= ite4' invalid)))) (and (=> garde7' (= ite5' (- invalid 1))) (=> (not garde7') (= ite5' invalid)))) (and (=> garde8' (= ite6' (- invalid 1))) (=> (not garde8') (= ite6' invalid)))) (and (=> e8' (= ite7' ite6')) (=> (not e8') (= ite7' invalid)))) (and (=> garde2' (= ite13' (- dirty 1))) (=> (not garde2') (= ite13' dirty)))) (and (=> garde4' (= ite14' (+ dirty 1))) (=> (not garde4') (= ite14' dirty)))) (and (=> garde6' (= ite15' 1)) (=> (not garde6') (= ite15' dirty)))) (and (=> garde7' (= ite16' (- dirty 1))) (=> (not garde7') (= ite16' dirty)))) (and (=> e7' (= ite17' ite16')) (=> (not e7') (= ite17' dirty)))) (and (=> garde1' (= ite21' (+ exclusive 1))) (=> (not garde1') (= ite21' exclusive)))) (and (=> garde3' (= ite22' 0)) (=> (not garde3') (= ite22' exclusive)))) (and (=> garde4' (= ite23' (- exclusive 1))) (=> (not garde4') (= ite23' exclusive)))) (and (=> garde5' (= ite24' (+ exclusive 1))) (=> (not garde5') (= ite24' exclusive)))) (and (=> garde8' (= ite25' 0)) (=> (not garde8') (= ite25' exclusive)))) (and (=> e8' (= ite26' ite25')) (=> (not e8') (= ite26' exclusive)))) (and (=> garde2' (= ite31' (+ shared 2))) (=> (not garde2') (= ite31' shared)))) (and (=> garde3' (= ite32' (+ (+ (- shared 1) exclusive) 1))) (=> (not garde3') (= ite32' shared)))) (and (=> garde5' (= ite33' 0)) (=> (not garde5') (= ite33' shared)))) (and (=> garde7' (= ite34' (+ shared 2))) (=> (not garde7') (= ite34' shared)))) (and (=> garde8' (= ite35' (+ (+ shared exclusive) 1))) (=> (not garde8') (= ite35' shared)))) (and (=> e8' (= ite36' ite35')) (=> (not e8') (= ite36' shared)))) (= garde1' (and (and (and (>= invalid 1) (= dirty 0)) (= shared 0)) (= exclusive 0))) (= garde2' (and (>= invalid 1) (>= dirty 1))) (= garde3' (and (>= invalid 1) (>= (+ shared exclusive) 1))) (= garde4' (>= exclusive 1)) (= garde5' (= shared 1)) (= garde6' (and (and (and (>= invalid 1) (= dirty 0)) (= shared 0)) (= exclusive 0))) (= garde7' (and (>= invalid 1) (>= dirty 1))) (= garde8' (and (>= invalid 1) (>= (+ shared exclusive) 1))) (= flby' mem_invalid) (= flby2' ite12') (= flby3' ite20') (= flby4' ite30') (= flby5' ite40')) 
   :inv (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (=> e7 (= ite8 ite5)) (=> (not e7) (= ite8 ite7))) (and (=> e6 (= ite9 ite4)) (=> (not e6) (= ite9 ite8)))) (and (=> e3 (= ite10 ite3)) (=> (not e3) (= ite10 ite9)))) (and (=> e2 (= ite11 ite2)) (=> (not e2) (= ite11 ite10)))) (and (=> e1 (= ite12 ite)) (=> (not e1) (= ite12 ite11)))) (and (=> e6 (= ite18 ite15)) (=> (not e6) (= ite18 ite17)))) (and (=> e4 (= ite19 ite14)) (=> (not e4) (= ite19 ite18)))) (and (=> e2 (= ite20 ite13)) (=> (not e2) (= ite20 ite19)))) (and (=> e5 (= ite27 ite24)) (=> (not e5) (= ite27 ite26)))) (and (=> e4 (= ite28 ite23)) (=> (not e4) (= ite28 ite27)))) (and (=> e3 (= ite29 ite22)) (=> (not e3) (= ite29 ite28)))) (and (=> e1 (= ite30 ite21)) (=> (not e1) (= ite30 ite29)))) (and (=> e7 (= ite37 ite34)) (=> (not e7) (= ite37 ite36)))) (and (=> e5 (= ite38 ite33)) (=> (not e5) (= ite38 ite37)))) (and (=> e3 (= ite39 ite32)) (=> (not e3) (= ite39 ite38)))) (and (=> e2 (= ite40 ite31)) (=> (not e2) (= ite40 ite39)))) (= invalid flby2) (= dirty flby3) (= exclusive flby4) (= shared flby5) (= mem_invalid flby)) )
(define-system main 
   :input () 
   :output ((param_e1 Bool) (param_e2 Bool) (param_e3 Bool) (param_e4 Bool) (param_e5 Bool) (param_e6 Bool) (param_e7 Bool) (param_e8 Bool) (_OK_ Bool) (invalid Int) (dirty Int) (param_i_invalid Int) (exclusive Int) (shared Int) (env Bool)) 
   :local ((call_firefly.e1 Bool) (call_firefly.e2 Bool) (call_firefly.e3 Bool) (call_firefly.e4 Bool) (call_firefly.e5 Bool) (call_firefly.e6 Bool) (call_firefly.e7 Bool) (call_firefly.e8 Bool) (call_firefly.i_invalid Int) (call_firefly.invalid Int) (call_firefly.dirty Int) (call_firefly.exclusive Int) (call_firefly.shared Int) (call_firefly.garde1 Bool) (call_firefly.garde2 Bool) (call_firefly.garde3 Bool) (call_firefly.garde4 Bool) (call_firefly.garde5 Bool) (call_firefly.garde6 Bool) (call_firefly.garde7 Bool) (call_firefly.garde8 Bool) (call_firefly.mem_invalid Int) (call_firefly.flby Int) (call_firefly.ite Int) (call_firefly.ite2 Int) (call_firefly.ite3 Int) (call_firefly.ite4 Int) (call_firefly.ite5 Int) (call_firefly.ite6 Int) (call_firefly.ite7 Int) (call_firefly.ite8 Int) (call_firefly.ite9 Int) (call_firefly.ite10 Int) (call_firefly.ite11 Int) (call_firefly.ite12 Int) (call_firefly.flby2 Int) (call_firefly.ite13 Int) (call_firefly.ite14 Int) (call_firefly.ite15 Int) (call_firefly.ite16 Int) (call_firefly.ite17 Int) (call_firefly.ite18 Int) (call_firefly.ite19 Int) (call_firefly.ite20 Int) (call_firefly.flby3 Int) (call_firefly.ite21 Int) (call_firefly.ite22 Int) (call_firefly.ite23 Int) (call_firefly.ite24 Int) (call_firefly.ite25 Int) (call_firefly.ite26 Int) (call_firefly.ite27 Int) (call_firefly.ite28 Int) (call_firefly.ite29 Int) (call_firefly.ite30 Int) (call_firefly.flby4 Int) (call_firefly.ite31 Int) (call_firefly.ite32 Int) (call_firefly.ite33 Int) (call_firefly.ite34 Int) (call_firefly.ite35 Int) (call_firefly.ite36 Int) (call_firefly.ite37 Int) (call_firefly.ite38 Int) (call_firefly.ite39 Int) (call_firefly.ite40 Int) (call_firefly.flby5 Int) (call_excludes8._X1_ Bool) (call_excludes8._X2_ Bool) (call_excludes8._X3_ Bool) (call_excludes8._X4_ Bool) (call_excludes8._X5_ Bool) (call_excludes8._X6_ Bool) (call_excludes8._X7_ Bool) (call_excludes8._X8_ Bool) (call_excludes8.excludes Bool) (call_Sofar._X_ Bool) (call_Sofar.Sofar Bool) (call_Sofar.flby Bool)) 
   :init true 
   :trans true 
   :inv (and (= _OK_ (=> env (>= dirty 0))) (= invalid call_firefly.invalid) (= dirty call_firefly.dirty) (= exclusive call_firefly.exclusive) (= shared call_firefly.shared) (= env call_Sofar.Sofar) (= call_firefly.e1 param_e1) (= call_firefly.e2 param_e2) (= call_firefly.e3 param_e3) (= call_firefly.e4 param_e4) (= call_firefly.e5 param_e5) (= call_firefly.e6 param_e6) (= call_firefly.e7 param_e7) (= call_firefly.e8 param_e8) (= call_firefly.i_invalid param_i_invalid) (= call_excludes8._X1_ param_e1) (= call_excludes8._X2_ param_e2) (= call_excludes8._X3_ param_e3) (= call_excludes8._X4_ param_e4) (= call_excludes8._X5_ param_e5) (= call_excludes8._X6_ param_e6) (= call_excludes8._X7_ param_e7) (= call_excludes8._X8_ param_e8) (= call_Sofar._X_ (and (and call_excludes8.excludes (>= param_i_invalid 0)) (> param_i_invalid 5)))) 
   :subsys (call_firefly (firefly call_firefly.e1 call_firefly.e2 call_firefly.e3 call_firefly.e4 call_firefly.e5 call_firefly.e6 call_firefly.e7 call_firefly.e8 call_firefly.i_invalid call_firefly.invalid call_firefly.dirty call_firefly.exclusive call_firefly.shared call_firefly.garde1 call_firefly.garde2 call_firefly.garde3 call_firefly.garde4 call_firefly.garde5 call_firefly.garde6 call_firefly.garde7 call_firefly.garde8 call_firefly.mem_invalid call_firefly.flby call_firefly.ite call_firefly.ite2 call_firefly.ite3 call_firefly.ite4 call_firefly.ite5 call_firefly.ite6 call_firefly.ite7 call_firefly.ite8 call_firefly.ite9 call_firefly.ite10 call_firefly.ite11 call_firefly.ite12 call_firefly.flby2 call_firefly.ite13 call_firefly.ite14 call_firefly.ite15 call_firefly.ite16 call_firefly.ite17 call_firefly.ite18 call_firefly.ite19 call_firefly.ite20 call_firefly.flby3 call_firefly.ite21 call_firefly.ite22 call_firefly.ite23 call_firefly.ite24 call_firefly.ite25 call_firefly.ite26 call_firefly.ite27 call_firefly.ite28 call_firefly.ite29 call_firefly.ite30 call_firefly.flby4 call_firefly.ite31 call_firefly.ite32 call_firefly.ite33 call_firefly.ite34 call_firefly.ite35 call_firefly.ite36 call_firefly.ite37 call_firefly.ite38 call_firefly.ite39 call_firefly.ite40 call_firefly.flby5))
   :subsys (call_excludes8 (excludes8 call_excludes8._X1_ call_excludes8._X2_ call_excludes8._X3_ call_excludes8._X4_ call_excludes8._X5_ call_excludes8._X6_ call_excludes8._X7_ call_excludes8._X8_ call_excludes8.excludes))
   :subsys (call_Sofar (Sofar call_Sofar._X_ call_Sofar.Sofar call_Sofar.flby)))
(check-system main 
   :input () 
   :output ((param_e1 Bool) (param_e2 Bool) (param_e3 Bool) (param_e4 Bool) (param_e5 Bool) (param_e6 Bool) (param_e7 Bool) (param_e8 Bool) (_OK_ Bool) (invalid Int) (dirty Int) (param_i_invalid Int) (exclusive Int) (shared Int) (env Bool)) 
   :local ((call_firefly.e1 Bool) (call_firefly.e2 Bool) (call_firefly.e3 Bool) (call_firefly.e4 Bool) (call_firefly.e5 Bool) (call_firefly.e6 Bool) (call_firefly.e7 Bool) (call_firefly.e8 Bool) (call_firefly.i_invalid Int) (call_firefly.invalid Int) (call_firefly.dirty Int) (call_firefly.exclusive Int) (call_firefly.shared Int) (call_firefly.garde1 Bool) (call_firefly.garde2 Bool) (call_firefly.garde3 Bool) (call_firefly.garde4 Bool) (call_firefly.garde5 Bool) (call_firefly.garde6 Bool) (call_firefly.garde7 Bool) (call_firefly.garde8 Bool) (call_firefly.mem_invalid Int) (call_firefly.flby Int) (call_firefly.ite Int) (call_firefly.ite2 Int) (call_firefly.ite3 Int) (call_firefly.ite4 Int) (call_firefly.ite5 Int) (call_firefly.ite6 Int) (call_firefly.ite7 Int) (call_firefly.ite8 Int) (call_firefly.ite9 Int) (call_firefly.ite10 Int) (call_firefly.ite11 Int) (call_firefly.ite12 Int) (call_firefly.flby2 Int) (call_firefly.ite13 Int) (call_firefly.ite14 Int) (call_firefly.ite15 Int) (call_firefly.ite16 Int) (call_firefly.ite17 Int) (call_firefly.ite18 Int) (call_firefly.ite19 Int) (call_firefly.ite20 Int) (call_firefly.flby3 Int) (call_firefly.ite21 Int) (call_firefly.ite22 Int) (call_firefly.ite23 Int) (call_firefly.ite24 Int) (call_firefly.ite25 Int) (call_firefly.ite26 Int) (call_firefly.ite27 Int) (call_firefly.ite28 Int) (call_firefly.ite29 Int) (call_firefly.ite30 Int) (call_firefly.flby4 Int) (call_firefly.ite31 Int) (call_firefly.ite32 Int) (call_firefly.ite33 Int) (call_firefly.ite34 Int) (call_firefly.ite35 Int) (call_firefly.ite36 Int) (call_firefly.ite37 Int) (call_firefly.ite38 Int) (call_firefly.ite39 Int) (call_firefly.ite40 Int) (call_firefly.flby5 Int) (call_excludes8._X1_ Bool) (call_excludes8._X2_ Bool) (call_excludes8._X3_ Bool) (call_excludes8._X4_ Bool) (call_excludes8._X5_ Bool) (call_excludes8._X6_ Bool) (call_excludes8._X7_ Bool) (call_excludes8._X8_ Bool) (call_excludes8.excludes Bool) (call_Sofar._X_ Bool) (call_Sofar.Sofar Bool) (call_Sofar.flby Bool)) 
   :reachable (rch_1 (not (= _OK_ true)))
   :query (qry_rch_1 (rch_1)))